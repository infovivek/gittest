<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbComp="WrbComp.*"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   width="100%" height="100%"
			   creationComplete="Application1_creationCompleteHandler(event)" 
			   pageTitle="Apartment Level Booking">
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import flashx.textLayout.factory.TruncationOptions;
			
			import mx.controls.ToolTip;
			import mx.controls.dataGridClasses.DataGridItemRenderer;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.DataGridEventReason;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.formatters.NumberFormatter;
			import mx.managers.IFocusManager;
			import mx.messaging.AbstractConsumer;
			
			import org.hamcrest.collection.array;
			
			import spark.components.Label;
			import spark.components.supportClasses.ItemRenderer;
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			public static var Global_AC:ArrayCollection = new ArrayCollection();
			public static var GlobalXml:String = "";
			public var StateId:int=0,CityId:int=0,ClientId:int=0,Id:int=0,GradeId:int = 0;
			public var ErrStr:String="",GradeName:String="",BookedId:int=0;
			public var BookingPropertyId:int=0,BookingPropertyTableId:int=0;
			public var ClientBookerId:int=0,ClientBookerName:String="",Flag:Boolean=true;
			public var Save_Method:String="",GuestId:int = 0;
			public var Time:String="",Hr:String="",Min:String="",ExpInTime:String="";
			
			protected function Application1_creationCompleteHandler(event:FlexEvent):void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				Grd_Guest._clear();Pnl.visible=false;
				Lbl_Sales.text="Sales Person";Lbl_CRM.text="CRM Person";												
				Bdr_Tab2.visible=false;Bdr_Tab3.visible=false;
				Btn_Tab1.setStyle("backgroundColor","#eb1c24");
				Lbl_Tab1.setStyle("color","#ffffff");				
				Btn_Tab2.setStyle("backgroundColor","#c2c2c2");
				Lbl_Tab2.setStyle("color","#ffffff");				
				Btn_Tab3.setStyle("backgroundColor","#c2c2c2");
				Lbl_Tab3.setStyle("color","#ffffff");
				var ewq:ArrayCollection=new ArrayCollection();
				Grd_GuestTab3.dataProvider=ewq;
				var dsa:ArrayCollection=new ArrayCollection();
				Grd_PropertyAssignedGuest.dataProvider=dsa;
				var cxz:ArrayCollection=new ArrayCollection();
				Grd_Property.dataProvider=cxz;
				Tcl_Time.setTime=new Date("11/11/11,12:00:00");
				Txt_Result.visible = false;
				//
				FnHelp_PageLoad();FnHelp_Title();
				//
				//useWeb("BookingMail","SendMail_CUSTOM",[GlobalXml,'Apartment',2250]);
			}
			
			protected function FnHelp_PageLoad():void
			{
				useWeb("BOOKING","PageLoad_CUSTOM",[GlobalXml,'PageLoad','','','','',0,0,0,0,0,0,0]);				
			}
			
			public function FnHelp_Title():void
			{
				var Tmp:ArrayCollection=new ArrayCollection
					([{Action:GlobalXml,Param1:"TitleLoad",Param2:0,Param3:ClientId,prcName:"BOOKINGDTLS",
						ctrlName:"hlpTitle",grdWidth:"98"}]);				
				Grd_Guest._bindHlpTextData(Tmp);
				Tmp=null;
			}
			
			public function FnHelp_Guest():void
			{
				var Tmp:ArrayCollection=new ArrayCollection
					([{Action:GlobalXml,Param1:"ClientGuestLoad",Param2:0,Param3:ClientId,prcName:"BOOKINGDTLS",
						ctrlName:"hlpEmpCode",grdWidth:"120,150,150,120,120,120,120,0,0"}]);				
				Grd_Guest._bindHlpTextData(Tmp);
				Tmp=null;
			}
			public function FnHelp_Guest_Tmp():void
			{
				var Tmp:ArrayCollection=new ArrayCollection
					([{Action:GlobalXml,Param1:"ClientGuestLoad",Param2:0,Param3:0,prcName:"BOOKINGDTLS",
						ctrlName:"hlpEmpCode",grdWidth:"120,150,150,120,120,120,120,0,0"}]);				
				Grd_Guest._bindHlpTextData(Tmp);
				Tmp=null;
			}
			
			private function Custom_WebSer_Result (Ds_Objects:Object):void				
			{
				if (Ds_Objects.currentTarget.description.toString() == "PageLoad_CUSTOM")
				{
					Dt_ChkInDt.selectedDate=new Date();Txt_StayDays.text="";
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Hlp_Client.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}					
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Dt_ChkInDt.text=Ds_Objects.result.Tables.Table1.Rows[0].CDt;
						Dt_ChkOutDt.text=Ds_Objects.result.Tables.Table1.Rows[0].NDt;
						//
						var Dt:String = Dt_ChkInDt.text;										
						var Y:String = Dt.substr(6,10);
						var M:String = String(Dt.substr(3,2));
						var D:String =String(Number(Dt.substr(0,2))+1);
						var RangeStart:String = Y+'/'+M+'/'+D;
						Dt_ChkOutDt.selectableRange = {rangeStart:new Date(RangeStart)};
						Dt_ChkOutDt.selectedDate = new Date(RangeStart);
						//
						var D1:String =String(Number(Dt.substr(0,2)));
						var RangeStart1:String = Y+'/'+M+'/'+D1;
						//Dt_ChkInDt.selectableRange = {rangeStart:new Date(RangeStart1)};
						Txt_StayDays.text="1";
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "CityLoad_CUSTOM")
				{
					var qwe:ArrayCollection=new ArrayCollection();
					Hlp_City.dataProvider=qwe;CityId=0;Hlp_City.fnClear();
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Hlp_City.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
					Hlp_City._setFocus();
				}				
				if (Ds_Objects.currentTarget.description.toString() == "Property_CUSTOM")
				{
					Ddl_PropertyType.selectedItem="Property Type";
					Txt_PropertyFilter.text="";Txt_LocalityFilter.text="";
					var asd:ArrayCollection=new ArrayCollection();
					Grd_Property.dataProvider=asd;
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Property.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Tab1_Next_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Hlp_Stat.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
					else
					{
						var sdfs1:ArrayCollection=new ArrayCollection();
						Hlp_Stat.dataProvider=sdfs1;
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Ddl_Booker.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					}
					else
					{
						var sdfs:ArrayCollection=new ArrayCollection();
						Ddl_Booker.dataProvider=sdfs;Ddl_Booker.prompt="Please Select Booker";
					}
					if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
					{
						var Ac_ExistsGuest:ArrayCollection=new ArrayCollection();
						Ac_ExistsGuest=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
						var ExistsGuestStr:String="";
						for(var i:int = 0; i < Ac_ExistsGuest.length; i++)
						{
							ExistsGuestStr = ExistsGuestStr +">> "+Ac_ExistsGuest[i].Guest + '.\n'
						}
						alignAlert(Alert.show(ExistsGuestStr,"Booking Already Exists !",Alert.OK, 
							null,null,iconWarning,Alert.OK),10,"");
					}
					else
					{
						Bdr_Tab2.visible=true;Bdr_Tab3.visible=false;
						Btn_Tab1.setStyle("backgroundColor","#c2c2c2");
						Lbl_Tab1.setStyle("color","#ffffff");				
						Btn_Tab2.setStyle("backgroundColor","#eb1c24");
						Lbl_Tab2.setStyle("color","#ffffff");				
						Btn_Tab3.setStyle("backgroundColor","#c2c2c2");
						Lbl_Tab3.setStyle("color","#ffffff");
						Hlp_Stat._setFocus();
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					if(Save_Method == "Tab2_to_Tab3")
					{
						Pnl_Upload.visible = false;
						Id=Ds_Objects.result.Tables.Table.Rows[0].Id;
						Bdr_Tab2.visible=false;Bdr_Tab3.visible=true;
						Btn_Tab1.setStyle("backgroundColor","#c2c2c2");
						Lbl_Tab1.setStyle("color","#ffffff");				
						Btn_Tab2.setStyle("backgroundColor","#c2c2c2");
						Lbl_Tab2.setStyle("color","#ffffff");				
						Btn_Tab3.setStyle("backgroundColor","#eb1c24");
						Lbl_Tab3.setStyle("color","#ffffff");
						//
						var FDt:String = Dt_ChkInDt.text;										
						var FY:String = FDt.substr(6,10);
						var FM:String = FDt.substr(3,2);
						var FD:String = FDt.substr(0,2);
						var ChkInDt:String=FY+'-'+FM+'-'+FD+' '+ExpInTime+' '+Ddl_AMPM.selectedItem;
						var TDt:String = Dt_ChkOutDt.text;										
						var TY:String = TDt.substr(6,10);
						var TM:String = TDt.substr(3,2);
						var TD:String = TDt.substr(0,2);
						var ChkOutDt:String=TY+'-'+TM+'-'+TD+' '+'11:59:00 AM';
						//
						useWeb("ApartmentBooking","Tab2_to_Tab3_Dtls_CUSTOM",[GlobalXml,'Apartment_Tab2_to_Tab3_Dtls',
							'','',ChkInDt,ChkOutDt,0,0,0,0,0,Id,0]);
					}
					if(Save_Method == "DirectBooking")
					{
						/*var ss:String=Ds_Objects.result.Tables.Table.Rows[0].BookingCode;
						alignAlert(Alert.show("Booking Confirmed Successfully.","Message !",Alert.OK, 
							null, null, iconTickLarge, Alert.OK),10,"");*/
						BookedId=Id;
						useWeb("BookingMail","SendMail_CUSTOM",[GlobalXml,'Apartment',BookedId]);
						FnClear();
					}					
				}
				if (Ds_Objects.currentTarget.description.toString() == "SendMail_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{						
						if(Ds_Objects.result.Tables.Table11.Rows[0].Str != "")
						{
							alignAlert(Alert.show("Invaild Email Address :  "+
								Ds_Objects.result.Tables.Table11.Rows[0].Str+"  Please Validate and Click OK","Alert Message !",Alert.OK, 
								null,FnMailOk, iconWarning, Alert.OK),10,"");						
						}
						else
						{
							BookedId=0;
							alignAlert(Alert.show("Booking Confirmed Successfully.","Message !",Alert.OK, 
								null, null, iconTickLarge, Alert.OK),10,"");
						}
					}					
				}
				if (Ds_Objects.currentTarget.description.toString() == "Tab2_to_Tab3_Dtls_CUSTOM")
				{
					Ddl_Property.dataProvider=null;Ddl_Property.prompt="Please Select Property";
					Grd_GuestTab3.dataProvider=null;BookingPropertyId=0;BookingPropertyTableId=0;
					Ddl_Apartment.dataProvider=null;Ddl_Apartment.prompt="Please Select Apartment";
					Ddl_SSP.dataProvider=null;Ddl_SSP.prompt="Please Select SSP";
					ApartmentId=0,SSPId=0;Ddl_ServicePaymentMode.dataProvider=null;
					Ddl_ServicePaymentMode.prompt="Service Payment Mode";
					Ddl_TariffPaymentMode.dataProvider=null;
					Ddl_TariffPaymentMode.prompt="Tariff Payment Mode";
					TariffPaymentMode="",ServicePaymentMode="";
					PropertyType="";ApartmentTariff=0;ApartmentType="";
					var ikm:ArrayCollection=new ArrayCollection();
					Grd_PropertyAssignedGuest.dataProvider=ikm;
					Txt_SpecialRequirements.text="";Txt_Tariff.text="";					
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Ddl_Property.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						var Ac_Pr:ArrayCollection=new ArrayCollection();
						Ac_Pr=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						BookingPropertyId=Ac_Pr[0].PropertyId;
						BookingPropertyTableId=Ac_Pr[0].Id
						Ddl_Property.prompt=Ac_Pr[0].label;
						PropertyType=Ac_Pr[0].PropertyType;
						/*if(Ac_Pr.length == 1)
						{
						BookingPropertyId=Ac_Pr[0].PropertyId;
						BookingPropertyTableId=Ac_Pr[0].Id
						Ddl_Property.prompt=Ac_Pr[0].label;
						PropertyType=Ac_Pr[0].PropertyType;
						}*/
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Ddl_Apartment.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
					{
						Grd_GuestTab3.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table3.Rows.length > 0)
					{
						Ddl_SSP.dataProvider=Ds_Objects.result.Tables.Table3.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table4.Rows.length > 0)
					{
						Ddl_TariffPaymentMode.dataProvider=Ds_Objects.result.Tables.Table4.Rows as ArrayCollection;
						Ddl_ServicePaymentMode.dataProvider=Ds_Objects.result.Tables.Table4.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Tab3_to_Tab2_CUSTOM")
				{
					var ujm:ArrayCollection=new ArrayCollection();
					Grd_Property.dataProvider=ujm;Id=0;
					Ddl_PropertyType.selectedItem="Property Type";
					Txt_PropertyFilter.text="";Txt_LocalityFilter.text="";
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Property.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
					Bdr_Tab2.visible=true;Bdr_Tab3.visible=false;
					Btn_Tab1.setStyle("backgroundColor","#c2c2c2");
					Lbl_Tab1.setStyle("color","#ffffff");				
					Btn_Tab2.setStyle("backgroundColor","#eb1c24");
					Lbl_Tab2.setStyle("color","#ffffff");				
					Btn_Tab3.setStyle("backgroundColor","#c2c2c2");
					Lbl_Tab3.setStyle("color","#ffffff");
					//
					var dfsfs:ArrayCollection=new ArrayCollection();
					Grd_PropertyAssignedGuest.dataProvider=dfsfs;
				}
				if (Ds_Objects.currentTarget.description.toString() == "CustomFields_CUSTOM")
				{
					var Ac_Column:ArrayCollection = new ArrayCollection();
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Ac_Column = Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						for(var q:int = 0; q < Ac_Column.length; q++)
						{
							if(Ac_Column[q].Id == 1)
							{
								if(Ac_Column[q].FieldName != "")
								{
									Lbl_C1Name.text = Ac_Column[q].FieldName;								
									if(String(Ac_Column[q].Mandatory) == "true")
									{
										Lbl_C1M.text = "*";
									}
									else
									{
										Lbl_C1M.text = "";
									}
									if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
									{
										Hlp_Column1.dataProvider = null;
										Hlp_Column1.fnClear();									
										Hlp_Column1.dataProvider = Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
									}
									else
									{
										Hlp_Column1.dataProvider = null;Hlp_Column1.fnClear();
									}
									Lbl_C1Name.visible = true;Lbl_C1M.visible = true;Hlp_Column1.visible = true;			
								}
								else
								{
									Lbl_C1M.text = "";Hlp_Column1.fnClear();Lbl_C1Name.visible = false;
									Lbl_C1M.visible = false;Hlp_Column1.visible = false;							
								}
								
							}
							if(Ac_Column[q].Id == 2)
							{
								if(Ac_Column[q].FieldName != "")
								{
									Lbl_C2Name.text = Ac_Column[q].FieldName;
									if(String(Ac_Column[q].Mandatory) == "true")
									{
										Lbl_C2M.text = "*";
									}
									else
									{
										Lbl_C2M.text = "";
									}
									if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
									{
										Hlp_Column2.dataProvider = null;
										Hlp_Column2.fnClear();
										Hlp_Column2.dataProvider = Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
									}
									else
									{
										Hlp_Column2.dataProvider = null;
										Hlp_Column2.fnClear();
									}
									Lbl_C2Name.visible = true;
									Lbl_C2M.visible = true;
									//Chk_C2.visible = true;
									Hlp_Column2.visible = true;
									//Chk_C2.selected = false;
								}
								else
								{
									Lbl_C2M.text = "";
									Hlp_Column2.fnClear();
									Lbl_C2Name.visible = false;
									Lbl_C2M.visible = false;
									//Chk_C2.visible = false;
									Hlp_Column2.visible = false;									
								}
							}
							if(Ac_Column[q].Id == 3)
							{
								if(Ac_Column[q].FieldName != "")
								{
									Lbl_C3Name.text = Ac_Column[q].FieldName;
									if(String(Ac_Column[q].Mandatory) == "true")
									{
										Lbl_C3M.text = "*";
									}
									else
									{
										Lbl_C3M.text = "";
									}
									if (Ds_Objects.result.Tables.Table3.Rows.length > 0)
									{
										Hlp_Column3.dataProvider = null;
										Hlp_Column3.fnClear();									
										Hlp_Column3.dataProvider = Ds_Objects.result.Tables.Table3.Rows as ArrayCollection;
									}
									else
									{
										Hlp_Column3.dataProvider = null;
										Hlp_Column3.fnClear();
									}
									//Chk_C3.selected = false;
									Lbl_C3Name.visible = true;
									Lbl_C3M.visible = true;
									Hlp_Column3.visible = true;
									//Chk_C3.visible = true;
								}
								else
								{
									Lbl_C3M.text = "";									
									Hlp_Column3.fnClear();
									//Chk_C3.selected = false;
									Lbl_C3Name.visible = false;
									Lbl_C3M.visible = false;
									Hlp_Column3.visible = false;
									//Chk_C3.visible = false;
								}
							}
							if(Ac_Column[q].Id == 4)
							{
								if(Ac_Column[q].FieldName != "")
								{
									Lbl_C4Name.text = Ac_Column[q].FieldName;
									if(String(Ac_Column[q].Mandatory) == "true")
									{
										Lbl_C4M.text = "*";
									}
									else
									{
										Lbl_C4M.text = "";
									}
									if (Ds_Objects.result.Tables.Table4.Rows.length > 0)
									{
										Hlp_Column4.dataProvider = null;
										Hlp_Column4.fnClear();									
										Hlp_Column4.dataProvider = Ds_Objects.result.Tables.Table4.Rows as ArrayCollection;
									}
									else
									{
										Hlp_Column4.dataProvider = null;
										Hlp_Column4.fnClear();
									}
									Lbl_C4Name.visible = true;
									Lbl_C4M.visible = true;
									Hlp_Column4.visible = true;
									//Chk_C4.selected = false;
									//Chk_C4.visible = true;
								}
								else
								{
									Lbl_C4Name.visible = false;
									Lbl_C4M.visible = false;
									Lbl_C4M.text = "";
									Hlp_Column4.visible = false;
									Hlp_Column4.fnClear();
									//Chk_C4.selected = false;
									//Chk_C4.visible = false;
								}
							}
							if(Ac_Column[q].Id == 5)
							{
								if(Ac_Column[q].FieldName != "")
								{
									Lbl_C5Name.text = Ac_Column[q].FieldName;
									if(String(Ac_Column[q].Mandatory) == "true")
									{
										Lbl_C5M.text = "*";
									}
									else
									{
										Lbl_C5M.text = "";
									}
									if (Ds_Objects.result.Tables.Table5.Rows.length > 0)
									{
										Hlp_Column5.dataProvider = null;
										Hlp_Column5.fnClear();
										Hlp_Column5.dataProvider = Ds_Objects.result.Tables.Table5.Rows as ArrayCollection;
									}
									else
									{
										Hlp_Column5.dataProvider = null;
										Hlp_Column5.fnClear();
									}
									Lbl_C5Name.visible = true;
									Lbl_C5M.visible = true;
									Hlp_Column5.visible = true;
									//Chk_C5.visible = true;
									//Chk_C5.selected = false;
								}
								else
								{
									Lbl_C5Name.visible = false;
									Lbl_C5M.visible = false;
									Lbl_C5M.text = "";
									Hlp_Column5.visible = false;
									Hlp_Column5.fnClear();
									//Chk_C5.visible = false;
									//Chk_C5.selected = false;
								}
							}
							if(Ac_Column[q].Id == 6)
							{
								if(Ac_Column[q].FieldName != "")
								{
									Lbl_C6Name.text = Ac_Column[q].FieldName;
									if(String(Ac_Column[q].Mandatory) == "true")
									{
										Lbl_C6M.text = "*";
									}
									else
									{
										Lbl_C6M.text = "";
									}
									if (Ds_Objects.result.Tables.Table6.Rows.length > 0)
									{
										Hlp_Column6.dataProvider = null;																			
										Hlp_Column6.dataProvider = Ds_Objects.result.Tables.Table6.Rows as ArrayCollection;
									}
									else
									{
										Hlp_Column6.dataProvider = null;
									}
									Lbl_C6Name.visible = true;
									Lbl_C6M.visible = true;									
									Hlp_Column6.visible = true;
									Hlp_Column6.fnClear();
									//Chk_C6.selected = false;
									//Chk_C6.visible = true;
								}
								else
								{
									Lbl_C6Name.visible = false;
									Lbl_C6M.visible = false;
									Lbl_C6M.text = "";
									Hlp_Column6.visible = false;
									Hlp_Column6.fnClear();
									//Chk_C6.selected = false;
									//Chk_C6.visible = false;
								}
							}
							if(Ac_Column[q].Id == 7)
							{
								if(Ac_Column[q].FieldName != "")
								{
									Lbl_C7Name.text = Ac_Column[q].FieldName;
									if(String(Ac_Column[q].Mandatory) == "true")
									{
										Lbl_C7M.text = "*";
									}
									else
									{
										Lbl_C7M.text = "";
									}
									if (Ds_Objects.result.Tables.Table7.Rows.length > 0)
									{
										Hlp_Column7.dataProvider = null;
										//Hlp_Column7.fnClear();
										Hlp_Column7.dataProvider = Ds_Objects.result.Tables.Table7.Rows as ArrayCollection;
									}
									else
									{
										Hlp_Column7.dataProvider = null;
										//Hlp_Column7.fnClear();
									}
									Lbl_C7Name.visible = true;
									Lbl_C7M.visible = true;
									Hlp_Column7.visible = true;									
									Hlp_Column7.fnClear();
									//Chk_C7.selected = false;
									//Chk_C7.visible = true;
								}
								else
								{
									Lbl_C7Name.visible = false;
									Lbl_C7M.visible = false;
									Hlp_Column7.visible = false;
									Lbl_C7M.text = "";									
									Hlp_Column7.fnClear();
									//Chk_C7.selected = false;
									//Chk_C7.visible = false;
								}
							}
							if(Ac_Column[q].Id == 8)
							{
								if(Ac_Column[q].FieldName != "")
								{
									Lbl_C8Name.text = Ac_Column[q].FieldName;
									if(String(Ac_Column[q].Mandatory) == "true")
									{
										Lbl_C8M.text = "*";
									}
									else
									{
										Lbl_C8M.text = "";
									}
									if (Ds_Objects.result.Tables.Table8.Rows.length > 0)
									{
										Hlp_Column8.dataProvider = null;
										//Hlp_Column8.fnClear();
										Hlp_Column8.dataProvider = Ds_Objects.result.Tables.Table8.Rows as ArrayCollection;
									}
									else
									{
										Hlp_Column8.dataProvider = null;
										//Hlp_Column8.fnClear();
									}
									Lbl_C8Name.visible = true;
									Lbl_C8M.visible = true;									
									Hlp_Column8.visible = true;
									Hlp_Column8.fnClear();
									//Chk_C8.selected = false;
									//Chk_C8.visible = true;
								}
								else
								{
									Lbl_C8Name.visible = false;
									Lbl_C8M.visible = false;
									Lbl_C8M.text = "";
									Hlp_Column8.visible = false;
									Hlp_Column8.fnClear();
									//Chk_C8.selected = false;
									//Chk_C8.visible = false;
								}
							}
							if(Ac_Column[q].Id == 9)
							{
								if(Ac_Column[q].FieldName != "")
								{
									Lbl_C9Name.text = Ac_Column[q].FieldName;
									if(String(Ac_Column[q].Mandatory) == "true")
									{
										Lbl_C9M.text = "*";
									}
									else
									{
										Lbl_C9M.text = "";
									}
									if (Ds_Objects.result.Tables.Table9.Rows.length > 0)
									{
										Hlp_Column9.dataProvider = null;
										Hlp_Column9.fnClear();
										Hlp_Column9.dataProvider = Ds_Objects.result.Tables.Table9.Rows as ArrayCollection;
									}
									else
									{
										Hlp_Column9.dataProvider = null;
										Hlp_Column9.fnClear();
									}
									Lbl_C9Name.visible = true;
									Lbl_C9M.visible = true;									
									Hlp_Column9.visible = true;
									Hlp_Column9.fnClear();
									//Chk_C9.selected = false;
									//Chk_C9.visible = true;
								}
								else
								{
									Lbl_C9Name.visible = false;
									Lbl_C9M.visible = false;
									Lbl_C9M.text = "";
									Hlp_Column9.visible = false;
									Hlp_Column9.fnClear();
									//Chk_C9.selected = false;
									//Chk_C9.visible = false;
								}
							}
							if(Ac_Column[q].Id == 10)
							{
								if(Ac_Column[q].FieldName != "")
								{
									Lbl_C10Name.text = Ac_Column[q].FieldName;
									if(String(Ac_Column[q].Mandatory) == "true")
									{
										Lbl_C10M.text = "*";
									}
									else
									{
										Lbl_C10M.text = "";
									}
									if (Ds_Objects.result.Tables.Table10.Rows.length > 0)
									{
										Hlp_Column10.dataProvider = null;
										Hlp_Column10.fnClear();
										Hlp_Column10.dataProvider = Ds_Objects.result.Tables.Table10.Rows as ArrayCollection;
									}
									else
									{
										Hlp_Column10.dataProvider = null;
										Hlp_Column10.fnClear();
									}
									Lbl_C10Name.visible = true;
									Lbl_C10M.visible = true;									
									Hlp_Column10.visible = true;
									Hlp_Column10.fnClear();
									//Chk_C10.visible = true;
									//Chk_C10.selected = false;
								}
								else
								{
									Lbl_C10Name.visible = false;
									Lbl_C10M.visible = false;
									Lbl_C10M.text = "";
									Hlp_Column10.visible = false;
									Hlp_Column10.fnClear();
									//Chk_C10.visible = false;
									//Chk_C10.selected = false;
								}
							}
							Hlp_Column1.text = Ds_Objects.result.Tables.Table11.Rows[0].Column1;
							Hlp_Column2.text = Ds_Objects.result.Tables.Table11.Rows[0].Column2;
							Hlp_Column3.text = Ds_Objects.result.Tables.Table11.Rows[0].Column3;
							Hlp_Column4.text = Ds_Objects.result.Tables.Table11.Rows[0].Column4;
							Hlp_Column5.text = Ds_Objects.result.Tables.Table11.Rows[0].Column5;
							Hlp_Column6.text = Ds_Objects.result.Tables.Table11.Rows[0].Column6;
							Hlp_Column7.text = Ds_Objects.result.Tables.Table11.Rows[0].Column7;
							Hlp_Column8.text = Ds_Objects.result.Tables.Table11.Rows[0].Column8;
							Hlp_Column9.text = Ds_Objects.result.Tables.Table11.Rows[0].Column9;
							Hlp_Column10.text = Ds_Objects.result.Tables.Table11.Rows[0].Column10;
						}
						Pnl_CustomFields.visible = true;
						Btn_BackTab3.enabled = false;
						Btn_Backed.enabled = false;
					}
					else
					{
						Hlp_Column1.fnClear();
						Hlp_Column2.fnClear();
						Hlp_Column3.fnClear();
						Hlp_Column4.fnClear();
						Hlp_Column5.fnClear();
						Hlp_Column6.fnClear();
						Hlp_Column7.fnClear();
						Hlp_Column8.fnClear();
						Hlp_Column9.fnClear();
						Hlp_Column10.fnClear();
					}
				}
			}		
			
			public function FnMailOk(event:CloseEvent):void
			{
				if(event.detail == Alert.OK)
				{
					useWeb("BookingMail","SendMail_CUSTOM",[GlobalXml,'Apartment',BookedId]);
				}
			}
			
			public function FnOnselection_Client():void
			{
				if(Hlp_Client.selected())
				{
					Hlp_Client.text=Hlp_Client.Select_Row.ClientName;
					ClientId=Hlp_Client.Select_Row.Id;
					if(Hlp_Client.Select_Row.SalesId == "")
					{
						Lbl_Sales.text="Sales Person";
					}
					else
					{
						Lbl_Sales.text="Sales Person : "+Hlp_Client.Select_Row.SalesId;
					}
					if(Hlp_Client.Select_Row.CRMId == "")
					{
						Lbl_CRM.text="CRM Person";
					}
					else
					{
						Lbl_CRM.text="CRM Person : "+Hlp_Client.Select_Row.CRMId;
					}
					FnHelp_Guest();
				}
				else
				{
					Hlp_Client.fnClear();ClientId=0;
					Lbl_Sales.text="Sales Person";Lbl_CRM.text="CRM Person";
					FnHelp_Guest();
				}
				Lbl_ClientName.text=Hlp_Client.text;
				Grd_Guest._clear();Grd_Guest._setFocus(0);
			}
			
			public function FnOnselection_State():void
			{
				if(Hlp_Stat.selected())
				{
					Hlp_Stat.text=Hlp_Stat.Select_Row.StateName;
					StateId=Hlp_Stat.Select_Row.ZId;
					useWeb("BOOKING","CityLoad_CUSTOM",
						[GlobalXml,'CityLoad','','','','',StateId,0,0,0,0,0,0]);
				}
				else
				{
					Hlp_Stat.fnClear();StateId=0;
					var tgb:ArrayCollection=new ArrayCollection();
					Grd_Property.dataProvider=tgb;
					Txt_PropertyFilter.text="";Txt_LocalityFilter.text="";
				}
				
			}
			public function FnOnselection_City():void
			{
				if(Hlp_City.selected())
				{
					Hlp_City.text=Hlp_City.Select_Row.CityName;
					CityId=Hlp_City.Select_Row.Id;
				}
				else
				{
					Hlp_City.fnClear();CityId=0;
				}
				var yhn:ArrayCollection=new ArrayCollection();
				Grd_Property.dataProvider=yhn;
				Txt_PropertyFilter.text="";Txt_LocalityFilter.text="";
				Btn_PropertyShow.setFocus();
			}
			
			protected function Grd_Guest__getHlpTxtDataHandler(event:Event):void
			{
				if(event.currentTarget.ID == "hlpEmpCode")
				{
					// grade validation 
					var Ac:ArrayCollection=new ArrayCollection();
					Ac=Grd_Guest._getGridSrc as ArrayCollection;
					if(Ac.length > 0)
					{
						/*var GradId:int=event.currentTarget.selectedRow.GradeId;
						var Grad:String=event.currentTarget.selectedRow.Grade;
						var ExistsGradeId:int=0,ExistsGrade:String="";
						for(var i:int = 0; i < Ac.length; i++)
						{
							if(Ac[i].GradeId != 0)
							{
								ExistsGradeId = Ac[i].GradeId;
								ExistsGrade = Ac[i].Grade;
								i = Ac.length;
							}
						}
						if(GradId != 0)
						{
							if(ExistsGradeId != 0)
							{
								if((GradId != ExistsGradeId)||(Grad != ExistsGrade))
								{
									Grd_Guest._setValuetoCtrl("hlpEmpCode","");
									alignAlert(Alert.show("Grade Not Match",
										"Alert Message !",Alert.OK,null, null, iconWarning, Alert.OK),10,"");
									return;
								}
							}							
						}*/
						// exists guest 
						var Acc:ArrayCollection=new ArrayCollection();
						Acc=Grd_Guest._getGridSrc as ArrayCollection;
						if(Acc.length > 0)
						{
							for(var z:int = 0; z < Acc.length; z++)
							{
								var GustId:int=event.currentTarget.selectedRow.Id;
								if(GustId == Acc[z].GuestId)
								{
									Grd_Guest._setValuetoCtrl("hlpEmpCode","");
									alignAlert(Alert.show("Guest Already Exists.",
										"Alert Message !",Alert.OK,null, null, iconWarning, Alert.OK),10,"");
									z=Acc.length;
									return;
								}
							}					
						}
					}					
					// values assign
					Grd_Guest._setValuetoCtrl("hlpEmpCode",event.currentTarget.selectedRow.EmpCode);
					Grd_Guest._setValuetoCtrl("hlpTitle",event.currentTarget.selectedRow.TitleId);
					Grd_Guest._setValuetoCtrl("txtFirstName",event.currentTarget.selectedRow.FirstName);
					Grd_Guest._setValuetoCtrl("txtLastName",event.currentTarget.selectedRow.LastName);
					Grd_Guest._setValuetoCtrl("txtGrade",event.currentTarget.selectedRow.Grade);
					Grd_Guest._setValuetoCtrl("txtDesignation",event.currentTarget.selectedRow.Designation);
					Grd_Guest._setValuetoCtrl("txtEmailId",event.currentTarget.selectedRow.Email);
					Grd_Guest._setValuetoCtrl("txtMobileNo",event.currentTarget.selectedRow.MobileNo);
					Grd_Guest._setValuetoCtrl("txtNationality",event.currentTarget.selectedRow.NationalityId);
					Grd_Guest._setValuetoCtrl("txtGuestId",event.currentTarget.selectedRow.Id);
					Grd_Guest._setValuetoCtrl("txtGradeId",event.currentTarget.selectedRow.GradeId);
					if(event.currentTarget.selectedRow.TitleId == "")
					{
						Grd_Guest._setFocus(1);
						Grd_Guest._setFocusFlag(false);
					}
					else
					{
						Grd_Guest._setFocus(8);
						Grd_Guest._setFocusFlag(false);
					}										
				}
				event.currentTarget.selectedRow = null;
			}
			
			public function Custom_Grid_Enter(arrObj:Object, GridMode:Boolean, Index:int):String
			{
				var Str:String="";				
				if(arrObj.Title != "")
				{
					if((arrObj.Title != "Mr")&&(arrObj.Title != "Ms")&&(arrObj.Title != "Dr"))
					{
						Str=Str+"*  Please Select Valid Title ( Mr / Ms / Dr ).\n";
					}					
				}
				if(arrObj.EmailId !="")
				{
					EmailValidator.validate(arrObj.EmailId);
					Str=Str+ErrStr;
				}
				if(arrObj.MobileNo != "")
				{
					var mn:String=StringUtil.trim(arrObj.MobileNo);
					if((mn.length > 13)||(mn.length < 10))							
					{
						Str=Str+"*  Mobile No is Invalid.\n";
					}
					else
					{
						for(var j:int=0;j<mn.length;j++)
						{
							var mn1:String=mn.substring(j,j+1);							
							if((mn1!="0")&&(mn1!="1")&&(mn1!="2")&&(mn1!="3")&&(mn1!="4")&&(mn1!="5")&&
								(mn1!="6")&&(mn1!="7")&&(mn1!="8")&&(mn1!="9"))
							{
								Str=Str+"*  Mobile No is Invalid.\n";
								j=mn.length;
							}
						}
					}						
				}				
				if(Str != "")
				{
					return Str;
				}
				/*var Ac:ArrayCollection=new ArrayCollection();
				Ac=Grd_Guest._getGridSrc as ArrayCollection;
				if(Ac.length > 0)
				{
					var GradId:int=arrObj.GradeId;
					var Grad:String=arrObj.Grade;
					var ExistsGradeId:int=0,ExistsGrade:String="";
					for(var i:int = 0; i < Ac.length; i++)
					{
						if(Ac[i].GradeId != 0)
						{
							ExistsGradeId = Ac[i].GradeId;
							ExistsGrade = Ac[i].Grade;
							i = Ac.length;
						}
						if((Ac[i].GradeId == 0)&&(Ac[i].Grade != ""))
						{
							ExistsGradeId = Ac[i].GradeId;
							ExistsGrade = Ac[i].Grade;
							i = Ac.length;
						}
					}
					if(GradId != 0)
					{
						if(GradId != ExistsGradeId)
						{							
							return "Grade Not Matched.";
						}
					}
					if((GradId == 0)&&(Grad != ""))
					{
						if(ExistsGrade != "")
						{
							if(ExistsGrade != Grad)
							{
								return "Grade Not Matched.";
							}
						}
					}									
				}*/
				return "";
			}
			
			public function Custom_Grid_Delete(Index:int,Ac_Grid:ArrayCollection,GridId:String):void
			{
				if(GridId == "Guest")				
				{
					if(Ac_Grid[Index].Id != 0)
					{
						useWeb("BOOKING","XXX_CUSTOM",
							[GlobalXml,'GuestDelete','','','','',0,0,0,0,0,Ac_Grid[Index].Id,0]);
					}					
				}															
			}
			
			protected function Dt_ChkInDt_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				if(Dt_ChkInDt.selectedDate)
				{
					var Dt:String = Dt_ChkInDt.text;										
					var Y:String = Dt.substr(6,10);
					var M:String = String(Dt.substr(3,2));
					var D:String =String(Number(Dt.substr(0,2))+1);
					var RangeStart:String = Y+'/'+M+'/'+D;
					Dt_ChkOutDt.selectableRange = {rangeStart:new Date(RangeStart)};
					Dt_ChkOutDt.selectedDate = new Date(RangeStart);
					Txt_StayDays.text="1";
				}
			}		
			
			protected function FnClear():void
			{
				// tab 1
				var qaz:ArrayCollection=new ArrayCollection();
				Hlp_Client.dataProvider=qaz;Hlp_Client.fnClear();
				ClientId=0;Dt_ChkInDt.selectedDate=new Date();Tcl_Time.setTime=new Date();
				Dt_ChkOutDt.selectedDate=new Date();
				Grd_Guest._clear();Lbl_Sales.text="Sales Person";Lbl_CRM.text="CRM Person";
				Tcl_Time.setTime=new Date("11/11/11,12:00:00");
				Lbl_ClientName.text="";
				// tab 2
				var wsx:ArrayCollection=new ArrayCollection();
				Hlp_Stat.dataProvider=wsx;Hlp_Stat.fnClear();CityId=0;
				var edc:ArrayCollection=new ArrayCollection();
				Hlp_City.dataProvider=edc;Hlp_City.fnClear();CityId=0;
				ClientBookerId=0;ClientBookerName="";Txt_BookerEmail.text="";Ddl_Booker.dataProvider=null;
				Ddl_Booker.prompt="Please Select Booker";Chk_EmailtoGuest.selected=true;
				Grd_Property.dataProvider=null;Ddl_PropertyType.selectedItem="Property Type";
				// tab 3
				Ddl_Property.dataProvider=null;Ddl_Property.prompt="Please Select Property";
				BookingPropertyTableId=0;BookingPropertyId=0;
				Ddl_Apartment.dataProvider=null;Ddl_Apartment.prompt="Please Select Apartment";
				Txt_Tariff.text="";SSPId=0;
				Grd_GuestTab3.dataProvider=null;
				var rfv:ArrayCollection=new ArrayCollection();
				Grd_PropertyAssignedGuest.dataProvider=rfv;				
				TariffPaymentMode="";ServicePaymentMode="";
				Ddl_TariffPaymentMode.dataProvider=null;
				Ddl_TariffPaymentMode.prompt="Tariff Payment Mode";
				Ddl_ServicePaymentMode.dataProvider=null;
				Ddl_ServicePaymentMode.prompt="Service Payment Mode";
				Txt_SpecialRequirements.text="";
				//
				Bdr_Tab2.visible=false;Bdr_Tab3.visible=false;
				Btn_Tab1.setStyle("backgroundColor","#eb1c24");
				Lbl_Tab1.setStyle("color","#ffffff");				
				Btn_Tab2.setStyle("backgroundColor","#c2c2c2");
				Lbl_Tab2.setStyle("color","#ffffff");				
				Btn_Tab3.setStyle("backgroundColor","#c2c2c2");
				Lbl_Tab3.setStyle("color","#ffffff");
				// Help Loading
				Id=0;Txt_ExtraCCemail.text = "";
				FnHelp_PageLoad();FnHelp_Guest_Tmp();
			}			
			
			public function FnSaveValidation():String
			{
				ErrStr="";Flag=true;
				if(StateId == 0)
				{
					if(Flag == true)
					{
						Hlp_Stat._setFocus();Flag=false;
					}
					ErrStr = ErrStr + "*  State is Required.\n";
				}
				if(CityId == 0)
				{
					if(Flag == true)
					{
						Hlp_City._setFocus();Flag=false;
					}
					ErrStr = ErrStr + "*  City is Required.\n";
				}				
				return ErrStr;
			}
			
			protected function Btn_Close_clickHandler(event:MouseEvent):void
			{
				Pnl.visible=false;
			}
			
			protected function button_hb1_clickHandler(event:MouseEvent):void
			{
				Pnl.visible=true;	
			}
			
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			protected function FnSearch():void
			{
				PopUpManager.addPopUp(SearchPopUp, this, true);
				SearchPopUp.Prc_name="BOOKING";
				var SearchParam:Array =new Array();
				SearchPopUp.HlpIndex="SEARCH";
				SearchParam[0]=GlobalXml;
				SearchParam[1]='';
				SearchParam[2]='';
				SearchParam[3]=0;
				SearchParam[4]=0;
				SearchPopUp.Prc_Param=SearchParam;
				SearchPopUp.HlpSrchGlobal="";
				SearchPopUp.dataPanel.focusEnabled=true;
				SearchPopUp.Pageint();
				SearchPopUp.addEventListener("PopupEnter",funpopupEnter);
				SearchPopUp.addEventListener("PopupClose",funpopupClose);
				PopUpManager.centerPopUp(SearchPopUp);	
			}
			
			private function funpopupClose(event:Event):void
			{
				
			}
			
			private function funpopupEnter(event:Event):void
			{				
				SearchDtls(SearchPopUp.SelectRow.Id);			
			}
			
			private function SearchDtls(Id:int):void
			{
				var Load:Array =new Array();
				Load[0]=GlobalXml; Load[1]=''; Load[2]=''; Load[3]=Id; Load[4]=0;    
				useWeb("BOOKING","Search_CUSTOM",Load);
			}
			
			protected function EmailValidator_invalidHandler(event:ValidationResultEvent):void
			{
				ErrStr="*  Email  "+event.message+".\n";
			}
			
			protected function EmailValidator_validHandler(event:ValidationResultEvent):void
			{
				ErrStr="";
			}
			
			protected function Btn_Tab1Next_clickHandler(event:MouseEvent):void
			{
				ErrStr="";Flag=true;
				// focus change hlp client to other component
				Btn_NextTab2.setFocus();
				if(ClientId == 0)
				{
					if(Flag == true)
					{
						Hlp_Client._setFocus();Flag=false;
					}
					ErrStr = ErrStr + "* Client Name is Required.\n";
				}
				if(Dt_ChkInDt.text == "")
				{
					if(Flag == true)
					{
						Dt_ChkInDt.setFocus();Flag=false;
					}
					ErrStr = ErrStr + "* CheckIn Date is Required.\n";
				}
				var str:String=Tcl_Time.getTime();
				if(Tcl_Time.getTime() == "00:00:00")
				{
					if(Flag == true)
					{
						Tcl_Time.setFocus();Flag=false;
					}
					ErrStr = ErrStr + "* Expected CheckIn Time is Required.\n";
				}
				if(Dt_ChkOutDt.text == "")
				{
					if(Flag == true)
					{
						Dt_ChkOutDt.setFocus();Flag=false;
					}
					ErrStr = ErrStr + "* CheckOut Date is Required.\n";
				}
				var Ac_Gst:ArrayCollection=new ArrayCollection();
				Ac_Gst=Grd_Guest._getGridSrc as ArrayCollection;
				if(Ac_Gst.length == 0)
				{
					if(Flag == true)
					{
						Grd_Guest._setFocus(0);Flag=false;
					}
					ErrStr = ErrStr + "* Guest Deatils is Required.\n";
				}
				if(ErrStr != "")
				{
					alignAlert(Alert.show(ErrStr,"Requierd Field(s) !",Alert.OK,null,null,iconErrLarge,Alert.OK),10,"");
					return;
				}
				if(Id == 0)
				{
					var fdg:ArrayCollection=new ArrayCollection();
					Hlp_Stat.dataProvider=fdg;Hlp_Stat.fnClear();StateId=0;
					var grf:ArrayCollection=new ArrayCollection();
					Hlp_City.dataProvider=grf;Hlp_City.fnClear();CityId=0;
					Chk_HRPolicy.selected=false;
					var qwe:ArrayCollection=new ArrayCollection();
					Ddl_Booker.dataProvider=qwe;Ddl_Booker.prompt="Please Select Booker";
					Txt_PropertyFilter.text="";Txt_LocalityFilter.text="";
					ClientBookerId=0;ClientBookerName="";Txt_BookerEmail.text="";
					Chk_EmailtoGuest.selected=true;
					var ftr:ArrayCollection=new ArrayCollection();
					Grd_Property.dataProvider=ftr;
					Txt_NewBooker.text="";Txt_NewBookerEmail.text="";
					Txt_PropertyFilter.text="";Txt_LocalityFilter.text="";
					Ddl_PropertyType.selectedItem="Property Type";
					// Get Guest Id
					var GuestIds:String="";
					for(var i:int = 0; i < Ac_Gst.length; i++)
					{
						if(Number(Ac_Gst[i].GuestId) != 0)
						{
							GuestIds = GuestIds + Ac_Gst[i].GuestId + ',';
						}
					}
					//
					Time = "";Hr = "";Min = "";ExpInTime = "";
					Time = Tcl_Time.getTime();
					Hr = Time.substr(0,2);
					Min = Time.substr(3,2);
					if(Number(Hr) > 12)
					{
						var sdf:Number=Number(Hr) - 12;
						if(sdf <= 9)
						{
							ExpInTime = "0"+String(Number(Hr) - 12)+":"+Min+":"+"00";
						}
						else
						{
							ExpInTime = String(Number(Hr) - 12)+":"+Min+":"+"00";
						}						
					}
					if(Number(Hr) <= 12)
					{
						ExpInTime = Tcl_Time.getTime();
					}
					//
					var FDt:String = Dt_ChkInDt.text;										
					var FY:String = FDt.substr(6,10);
					var FM:String = FDt.substr(3,2);
					var FD:String = FDt.substr(0,2);
					var ChkInDt:String=FY+'-'+FM+'-'+FD+' '+ExpInTime+' '+Ddl_AMPM.selectedItem;
					var TDt:String = Dt_ChkOutDt.text;										
					var TY:String = TDt.substr(6,10);
					var TM:String = TDt.substr(3,2);
					var TD:String = TDt.substr(0,2);
					var ChkOutDt:String=TY+'-'+TM+'-'+TD+' '+'11:59:00 AM';
					//
					useWeb("BOOKING","Tab1_Next_CUSTOM",
						[GlobalXml,'Tab1_Next',GuestIds,'',ChkInDt,ChkOutDt,0,0,ClientId,0,0,0,0]);
				}
			}
			
			protected function Btn_NextTab2_clickHandler(event:MouseEvent):void
			{
				var Err:String=FnSaveValidation();
				var Ac_Tmp:ArrayCollection=new ArrayCollection();
				Ac_Tmp=Grd_Property.dataProvider as ArrayCollection;
				var Cnt:int=0;
				for(var j:int = 0; j < Ac_Tmp.length; j++)
				{
					if(Ac_Tmp[j].Tick == 1)
					{
						Cnt = Cnt + 1;
					}
				}
				if(Cnt == 0)
				{
					Err = Err + "*  Property is Required.\n";
				}
				if(Cnt > 1)
				{
					Err = Err + "*  More than one Property is not Allowed.\n";
				}
				if (ClientBookerId == 0)
				{
					if((Txt_NewBooker.text == "") && (Txt_NewBookerEmail.text == ""))
					{
						Err = Err + "*  Booker Name & Email is Required.\n";
						Ddl_Booker.setFocus();
					}
					else
					{
						if(Txt_NewBooker.text == "")
						{
							Err = Err + "*  Booker Name is Required.\n";
							Ddl_Booker.setFocus();
						}
						if(Txt_NewBookerEmail.text == "")
						{
							Err = Err + "*  Booker Email is Required.\n";
							Ddl_Booker.setFocus();
						}
					}					
				}
				if(Chk_EmailtoGuest.selected == false)
				{
					Err = Err + "*  Email to Guest is Required.\n";
					Chk_EmailtoGuest.setFocus();
				}
				/*var Flagg:Boolean=true;
				if((ClientBookerId == 0) && (Txt_NewBooker.text == "") && (Txt_NewBookerEmail.text == "") &&
					(Chk_EmailtoGuest.selected == false))
				{
					Err = Err + "*  Booker Email is Required.\n";
					Ddl_Booker.setFocus();Flagg=false;			
				}
				if(Flagg == true)
				{
					if(Chk_EmailtoGuest.selected == false)
					{
						if(ClientBookerId == 0)
						{
							if(Txt_NewBooker.text == "")
							{
								Err = Err + "*  New Booker Name is Required.\n";
							}
							if(Txt_NewBookerEmail.text == "")
							{
								Err = Err + "*  New Booker Email is Required.\n";
							}
							if(Txt_NewBooker.text != "")
							{
								if(Txt_NewBooker.text.length < 4)
								{
									Err = Err + "*  New Booker Name Must be 4 Characters is Required.\n";
								}
							}							
							if(Txt_NewBookerEmail.text != "")
							{
								EmailValidator.validate(Txt_NewBookerEmail.text);
								Err = Err + ErrStr;
							}
						}
					}
					if(Chk_EmailtoGuest.selected == true)
					{
						if((Txt_NewBooker.text != "")||(Txt_NewBookerEmail.text != ""))
						{
							if(Txt_NewBooker.text == "")
							{
								Err = Err + "*  New Booker Name is Required.\n";
							}
							if(Txt_NewBookerEmail.text == "")
							{
								Err = Err + "*  New Booker Email is Required.\n";
							}
							if(Txt_NewBooker.text != "")
							{
								if(Txt_NewBooker.text.length < 4)
								{
									Err = Err + "*  New Booker Name Must be 4 Characters is Required.\n";
								}
							}							
							if(Txt_NewBookerEmail.text != "")
							{
								EmailValidator.validate(Txt_NewBookerEmail.text);
								Err = Err + ErrStr;
							}
						}
					}
				}*/				
				if(Err != "")
				{
					alignAlert(Alert.show(Err,"Requierd Field(s) !",Alert.OK,null,null,
						iconErrLarge,Alert.OK),10,"");
					return;
				}				
				var Ac_Property_Tab2:ArrayCollection=new ArrayCollection();var len:int=0,i:int=0;
				if(Cnt == 1)
				{
					Ac_Property_Tab2=Grd_Property.dataProvider as ArrayCollection;
					len=Ac_Property_Tab2.length;
					for(i=len; i > 0; i--)
					{
						if(Ac_Property_Tab2[i-1].Tick == 0)
						{
							Ac_Property_Tab2.removeItemAt(i-1);
						}
					}
				}
				Lbl_ChkInDt.text=Dt_ChkInDt.text;Lbl_ChkOutDt.text=Dt_ChkOutDt.text;
				Save_Method="Tab2_to_Tab3";	
				var ClientBookerEmail:String="";
				if(ClientBookerId == 0)
				{
					ClientBookerName=Txt_NewBooker.text;
					ClientBookerId=0;
					ClientBookerEmail=Txt_NewBookerEmail.text;
				}
				if(ClientBookerId != 0)
				{
					ClientBookerName=ClientBookerName;
					ClientBookerId=ClientBookerId;
					ClientBookerEmail=Txt_BookerEmail.text;
				}
				Txt_ExtraCCemail.text = "";
				var Ac_Hdr:ArrayCollection=new ArrayCollection
					([{ClientId:ClientId,ClientName:Hlp_Client.text,Sales:Lbl_Sales.text,CRM:Lbl_CRM.text,
						CheckInDate:Dt_ChkInDt.text,ExpectedChkInTime:ExpInTime,
						CheckOutDate:Dt_ChkOutDt.text,GradeId:GradeId,GradeName:GradeName,StateId:StateId,
						StateName:Hlp_Stat.text,CityId:CityId,CityName:Hlp_City.text,
						ClientBookerId:ClientBookerId,
						ClientBookerName:ClientBookerName,ClientBookerEmail:ClientBookerEmail,
						EmailtoGuest:Chk_EmailtoGuest.selected,Note:"",
						SpecialRequirements:"",Id:Id,Status:"Step2",AMPM:Ddl_AMPM.selectedItem,
						BookingLevel:"Apartment",ExtraCCEmail:Txt_ExtraCCemail.text,HRPolicy:false,
						HRPolicyOverrideRemarks:"",PropertyRefNo:""}]);
				var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
				var GuestXml:String="";
				GuestXml += "<ROOT>";
				GuestXml += ObjToXmlStr_Comm(Grd_Guest._getGridSrc,"GridXml")
				GuestXml += "</ROOT>";
				var PropertyXml:String="";
				PropertyXml += "<ROOT>";
				PropertyXml += ObjToXmlStr_Comm(Ac_Property_Tab2,"GridXml")
				PropertyXml += "</ROOT>";
				var GuestProperty:ArrayCollection=new ArrayCollection();
				var GuestPropertyXml:String="";
				GuestPropertyXml += "<ROOT>";
				GuestPropertyXml += ObjToXmlStr_Comm(GuestProperty,"GridXml")
				GuestPropertyXml += "</ROOT>";
				useWeb("ApartmentBooking","Save_CUSTOM",[GlobalXml,HdrXml,GuestXml,PropertyXml,GuestPropertyXml]);			
			}
			
			protected function Btn_BackTab2_clickHandler(event:MouseEvent):void
			{
				Bdr_Tab2.visible=false;Bdr_Tab3.visible=false;
				Btn_Tab1.setStyle("backgroundColor","#eb1c24");
				Lbl_Tab1.setStyle("color","#ffffff");				
				Btn_Tab2.setStyle("backgroundColor","#c2c2c2");
				Lbl_Tab2.setStyle("color","#ffffff");				
				Btn_Tab3.setStyle("backgroundColor","#c2c2c2");
				Lbl_Tab3.setStyle("color","#ffffff");
			}
			
			protected function Btn_BackTab3_clickHandler(event:MouseEvent):void
			{
				var FDt:String = Dt_ChkInDt.text;										
				var FY:String = FDt.substr(6,10);
				var FM:String = FDt.substr(3,2);
				var FD:String = FDt.substr(0,2);
				var ChkInDt:String=FY+'-'+FM+'-'+FD+' '+ExpInTime+' '+Ddl_AMPM.selectedItem;
				var TDt:String = Dt_ChkOutDt.text;										
				var TY:String = TDt.substr(6,10);
				var TM:String = TDt.substr(3,2);
				var TD:String = TDt.substr(0,2);
				var ChkOutDt:String=TY+'-'+TM+'-'+TD+' '+'11:59:00 AM';
				
				useWeb("ApartmentBooking","Tab3_to_Tab2_CUSTOM",[GlobalXml,'Apartment_Property','','',
					ChkInDt,ChkOutDt,0,CityId,ClientId,0,GradeId,Id,123]);
				Ddl_Booker.setFocus();
			}
			
			protected function Ddl_Booker_changeHandler(event:IndexChangeEvent):void
			{
				ClientBookerId=Ddl_Booker.selectedItem.Id;
				Txt_BookerEmail.text=Ddl_Booker.selectedItem.Email;
				ClientBookerName=Ddl_Booker.selectedItem.label;
				Txt_NewBooker.text="";Txt_NewBookerEmail.text="";
			}
			
			public function FnChkChange(event:Event):void
			{
				var Ac:ArrayCollection=new ArrayCollection();				
				Ac=Grd_Property.dataProvider as ArrayCollection;				
				var Index:int=Grd_Property.selectedIndex;				
				if(Ac[Index].Tick==0)
				{
					Ac[Index].Tick=1;
				}
				else
				{
					Ac[Index].Tick=0;
				}
			}
			
			public function FnChkChangeTab3(event:Event):void
			{
				var Ac:ArrayCollection=new ArrayCollection();				
				Ac=Grd_GuestTab3.dataProvider as ArrayCollection;				
				var Index:int=Grd_GuestTab3.selectedIndex;				
				if(Ac[Index].Tick == 0)
				{
					Ac[Index].Tick = 1;
					GuestId = Ac[Index].GuestId;
					useWeb("BOOKING","CustomFields_CUSTOM",
						[GlobalXml,'CustomFields','','','','',0,0,ClientId,0,0,Ac[Index].GuestId,0]);
				}
				else
				{
					Ac[Index].Tick = 0;GuestId=0;
				}
			}
			
			protected function Ddl_PropertyType_changeHandler(event:IndexChangeEvent):void
			{
				Filter();								
			}
			
			private function Filter():void
			{
				Txt_PropertyFilter.text="";Txt_LocalityFilter.text="";
				var Ac_Tmp:ArrayCollection=new ArrayCollection();	
				Ac_Tmp=Grd_Property.dataProvider as ArrayCollection;
				Ac_Tmp.filterFunction = FilterArrayCollection;
				Ac_Tmp.refresh();				
			}
			
			private function FilterArrayCollection(item:Object):Boolean 
			{
				var RetBool:Boolean=true;
				if(Ddl_PropertyType.selectedItem == "Managed Guest House Property")
				{
					RetBool=item.PropertyType.indexOf("MGH") > -1;
				}
				if(Ddl_PropertyType.selectedItem == "Dedicated Property")
				{
					RetBool=item.PropertyType.indexOf("DdP") > -1;
				}
				if(Ddl_PropertyType.selectedItem == "Client Prefered Property")
				{
					RetBool=item.PropertyType.indexOf("CPP") > -1;
				}
				if(Ddl_PropertyType.selectedItem == "Internal Property")
				{
					RetBool=item.PropertyType.indexOf("InP") > -1;
				}
				if(Ddl_PropertyType.selectedItem == "External Property")
				{
					RetBool=item.PropertyType.indexOf("ExP") > -1;
				}								
				return RetBool;		
			}				
			
			protected function Txt_PropertyFilter_changeHandler(event:TextOperationEvent):void
			{
				Ddl_PropertyType.selectedItem="Property Type";Txt_LocalityFilter.text="";
				var Ac_Tmp:ArrayCollection=new ArrayCollection();	
				Ac_Tmp=Grd_Property.dataProvider as ArrayCollection;
				Ac_Tmp.filterFunction = Filter_Property;
				Ac_Tmp.refresh();
			}
			
			private function Filter_Property(item:Object):Boolean 
			{
				var Itm:Boolean=true;				
				if(Txt_PropertyFilter.text != "")
				{
					var itemName:String = (item.PropertyName as String).toLowerCase();
					Itm=itemName.indexOf(Txt_PropertyFilter.text.toLowerCase()) > -1;
				}
				return Itm;
			}
			
			public var PropertyType:String="";
			public var ApartmentTariff:Number=0,ApartmentType:String="",ApartmentId:Number=0;
			protected function Ddl_Room_changeHandler(event:IndexChangeEvent):void
			{
				ApartmentType=Ddl_Apartment.selectedItem.label;				
				ApartmentId=Ddl_Apartment.selectedItem.ApartmentId;				
				if(SSPId == 0)
				{
					ApartmentTariff=Ddl_Apartment.selectedItem.Tariff;
					Txt_Tariff.text=Ddl_Apartment.selectedItem.Tariff;
				}
			}
			
			public var TariffPaymentMode:String="",ServicePaymentMode:String="";
			protected function Btn_Add_clickHandler(event:MouseEvent):void
			{
				var Tmp:ArrayCollection=new ArrayCollection();
				Tmp=Grd_GuestTab3.dataProvider as ArrayCollection;
				var Cnt:int=0,Err:String="";
				for(var i:int = 0; i < Tmp.length; i++)
				{
					if(Tmp[i].Tick == 1)
					{
						Cnt = Cnt + 1;
					}
				}				
				if(BookingPropertyId == 0)
				{
					Err = Err + "*  Property is Required.\n";
				}
				if(ApartmentId == 0)
				{
					Err = Err + "*  Apartment Type is Required.\n";
				}
				if(TariffPaymentMode == "")
				{
					Err = Err + "*  Tariff Payment Mode is Required.\n";
				}
				if(ServicePaymentMode == "")
				{
					Err = Err + "*  Service Payment Mode is Required.\n";
				}
				if(Cnt == 0)
				{
					Err = Err + "*  Guest is Required.\n";
				}
				if(Err != "")
				{
					alignAlert(Alert.show(Err,"Requierd Field(s) !",Alert.OK,null,null,iconErrLarge,Alert.OK),10,"");
					return;
				}
				if((PropertyType == "InP")||(PropertyType == "CPP")||(PropertyType == "ExP"))
				{
					if((Txt_Tariff.text == "")||(Number(Txt_Tariff.text) == 0))
					{
						alignAlert(Alert.show("*  Tariff is Required.","Requierd Field(s) !",
							Alert.OK,null,null,iconErrLarge,Alert.OK),10,"");
						return;
					}
				}
				var Ac:ArrayCollection=new ArrayCollection();
				var Ac1:ArrayCollection=new ArrayCollection();
				Ac=Tmp;
				Ac1=Grd_PropertyAssignedGuest.dataProvider as ArrayCollection;
				var Len1:int=Ac1.length;
				if(Ac1.length != 0)
				{
					if((PropertyType == "InP")||(PropertyType == "MGH")||(PropertyType == "DdP"))
					{
						for(var t:int = 0; t < Len1; t++)
						{
							if(ApartmentId == Ac1[t].ApartmentId)
							{
								alignAlert(Alert.show("* Apartment Already Assigned to Guest","Alert Message !",
									Alert.OK,null,null,iconWarning,Alert.OK),10,"");
								return;
							}							
						}
					}
				}
				/*if(Ac1.length != 0)
				{
					if(SSPId != 0)
					{
						for(var t1:int = 0; t1 < Len1; t1++)
						{
							if(SSPId == Ac1[t1].SSPId)
							{
								alignAlert(Alert.show("* SSP Already Assigned to Guest","Alert Message !",
									Alert.OK,null,null,iconWarning,Alert.OK),10,"");
								return;
							}
						}
					}
				}*/
				Txt_Result.text = "";
				Txt_FileName.text = "";
				if(TariffPaymentMode == "Bill to Company (BTC)")
				{
					FnBrowse()
				}
				if(TariffPaymentMode != "Bill to Company (BTC)")
				{
					FnAddtoCart();
				}
				/*Grd_GuestTab3.dataProvider=null;
				var Len:int=Ac.length;
				for(var j:int = 0; j < Len; j++)
				{
					if(Ac[j].Tick == 1)
					{
						Cnt = Cnt + 1;
						Ac1.addItem
							({EmpCode:Ac[j].EmpCode,FirstName:Ac[j].FirstName,LastName:Ac[j].LastName,
								GuestId:Ac[j].GuestId,ApartmentType:ApartmentType,Tariff:Txt_Tariff.text,
								ApartmentId:ApartmentId,SSPId:SSPId,
								BookingPropertyId:BookingPropertyId,
								BookingPropertyTableId:BookingPropertyTableId,
								ServicePaymentMode:ServicePaymentMode,
								TariffPaymentMode:TariffPaymentMode,Id:0,Name:Ac[j].Name,
								Column1:Ac[j].Txt_C1,Column2:Ac[j].Txt_C2,Column3:Ac[j].Txt_C3,Column4:Ac[j].Txt_C4,
								Column5:Ac[j].Txt_C5,Column6:Ac[j].Txt_C6,Column7:Ac[j].Txt_C7,Column8:Ac[j].Txt_C8,
								Column9:Ac[j].Txt_C9,Column10:Ac[j].Txt_C10});
						Tmp.removeItemAt(j);
						j=0;Len=Ac.length;j=j-1;
					}					
				}
				Grd_GuestTab3.dataProvider=Tmp.source;
				Grd_PropertyAssignedGuest.dataProvider=Ac1;*/				
			}
			
			public var uploadURL:URLRequest = new URLRequest();
			public var Img_Str:String = "";
			private var fileRef:FileReference = new FileReference();
			public function FnBrowse():void
			{
				Pnl_Upload.visible = true;
				Load();
			}
			
			public function Load():void
			{
				Btn_Browse.addEventListener(MouseEvent.CLICK, browseFiles);
				fileRef = new FileReference();
				fileRef.addEventListener(Event.SELECT, selectHandler);
			}
			
			public function FnUpload():void
			{
				if(Txt_FileName.text == "")
				{
					Pnl_Upload.visible = false;
					FnAddtoCart();
				}
				else
				{
					uploadFiles();
				}
			}
			
			private var fileTypes:Array = new Array();
			//private var imageTypes:FileFilter = new FileFilter("Images ( *.jpg; *.jpeg; *.gif; *.png; *.eml)" ,"*.jpg; *.jpeg; *.gif; *.png; *.eml");			
			//private var documentTypes:FileFilter = new FileFilter("Documents (*.pdf), (*.doc),(*.docx), (*.rtf), (*.txt)",("*.pdf; *.doc; *.rtf, *.txt"));
			private function browseFiles(event:Event):void
			{
				fileTypes = new Array();
				//fileTypes.push(imageTypes);
				//fileTypes.push(documentTypes);
				fileRef.browse(fileTypes);
			}
			
			private function selectHandler(event:Event):void
			{
				Txt_FileName.text = "";
				Txt_FileName.text = event.currentTarget.name.toString();				
			}
			
			private function uploadFiles():void
			{
				cursorManager.setBusyCursor();
				//Id = 123;BedId = 123;
				uploadURL = new URLRequest();
				uploadURL.url = "http://sstage.in/BookingBTCUpload.php?id="+String(Id)+","+String(ApartmentId)+"&pid=0&imgcount=0&imgformat="+Txt_FileName.text;
				//uploadURL.url = "http://sstage.in/BookingBTCUpload.php?id=Sakthi&pid=0&imgcount=0&imgformat="+ImageFormat;
				uploadURL.method = "POST";
				uploadURL.contentType = "multipart/form-data";
				fileRef.addEventListener(Event.COMPLETE, completeHandler);
				fileRef.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA,dataHandler);
				fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR,securityErrorHandler);
				fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS,httpStatusHandler);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
				fileRef.upload(uploadURL);
				Pnl_Upload.visible = false;
			}	
			
			private function completeHandler(event:Event):void
			{
				//Alert.show("File Uploaded successfully");	
				cursorManager.removeBusyCursor();
			}
			private function dataHandler(event:DataEvent):void
			{
				cursorManager.removeBusyCursor();
				Txt_Result.text = "";
				Txt_Result.text = event.data.toString();
				var Err_Image:String = Txt_Result.text;
				var Fatal:String = Err_Image.substr(8,18);
				if(Fatal == "b>Fatal error</b>:")
				{
					alignAlert(Alert.show("There was an error uploading the file, please try again!","Alert Message !",
						Alert.OK, null, null,iconWarning, Alert.OK),10,"");
				}
				else
				{
					if(Txt_Result.text == "There was an error uploading the file, please try again!")
					{
						alignAlert(Alert.show(Txt_Result.text,"Alert Message !",Alert.OK, null, null,iconWarning, Alert.OK),10,"");
					}
					else
					{
						FnAddtoCart();
					}
				}								
			}
			
			private function securityErrorHandler(event:SecurityErrorEvent):void
			{
				cursorManager.removeBusyCursor();
				//mx.controls.Alert.show(String(event),"Security Error",0);
				alignAlert(Alert.show("There was an error uploading the file, please try again!","Alert Message !",
					Alert.OK, null, null,iconWarning, Alert.OK),10,"");
			}
			
			private function httpStatusHandler(event:HTTPStatusEvent):void
			{
				cursorManager.removeBusyCursor();
				alignAlert(Alert.show("There was an error uploading the file, please try again!","Alert Message !",
					Alert.OK, null, null,iconWarning, Alert.OK),10,"");
				//if (event.status != 200)
				//{
				//	mx.controls.Alert.show(String(event),"Error",0);
				//}
			}
			
			private function ioErrorHandler(event:IOErrorEvent):void
			{
				cursorManager.removeBusyCursor();
				alignAlert(Alert.show("There was an error uploading the file, please try again!","Alert Message !",
					Alert.OK, null, null,iconWarning, Alert.OK),10,"");
				//mx.controls.Alert.show(String(event),"ioError",0);
			}
			
			public function FnAddtoCart():void
			{
				var Tmp:ArrayCollection=new ArrayCollection();
				Tmp=Grd_GuestTab3.dataProvider as ArrayCollection;
				var Ac:ArrayCollection=new ArrayCollection();
				var Ac1:ArrayCollection=new ArrayCollection();
				Ac=Tmp;
				Ac1=Grd_PropertyAssignedGuest.dataProvider as ArrayCollection;
				Grd_GuestTab3.dataProvider=null;
				var Len:int=Ac.length;
				var FilePath:String = "";
				if(TariffPaymentMode == "Bill to Company (BTC)")
				{
					if(Txt_Result.text == "")
					{
						FilePath = "";
					}
					else
					{
						FilePath = "http://sstage.in/BookingBTCUpload/"+Txt_Result.text;
					}
				}
				else
				{
					FilePath = "";
				}
				var Ac_Captured:ArrayCollection = new ArrayCollection();
				Ac_Captured = Grd_PropertyAssignedGuest.dataProvider as ArrayCollection; 
				var RoomCaptured:Number = 0,maxValue:Number = 1;
				for each (var o:Object in Ac_Captured)
				{
					if (o.RoomCaptured > maxValue)
					{
						maxValue = o.RoomCaptured;
					}
				}				
				RoomCaptured = maxValue + 1;
				for(var j:int = 0; j < Len; j++)
				{
					if(Ac[j].Tick == 1)
					{
						Cnt = Cnt + 1;
						Ac1.addItem
							({EmpCode:Ac[j].EmpCode,FirstName:Ac[j].FirstName,LastName:Ac[j].LastName,
								GuestId:Ac[j].GuestId,ApartmentType:ApartmentType,Tariff:Txt_Tariff.text,
								ApartmentId:ApartmentId,SSPId:SSPId,
								BookingPropertyId:BookingPropertyId,
								BookingPropertyTableId:BookingPropertyTableId,
								ServicePaymentMode:ServicePaymentMode,
								TariffPaymentMode:TariffPaymentMode,Id:0,Name:Ac[j].Name,
								Column1:Ac[j].Txt_C1,Column2:Ac[j].Txt_C2,Column3:Ac[j].Txt_C3,Column4:Ac[j].Txt_C4,
								Column5:Ac[j].Txt_C5,Column6:Ac[j].Txt_C6,Column7:Ac[j].Txt_C7,Column8:Ac[j].Txt_C8,
								Column9:Ac[j].Txt_C9,Column10:Ac[j].Txt_C10,BTCFilePath:FilePath,
								RoomCaptured:RoomCaptured});
						Tmp.removeItemAt(j);
						j=0;Len=Ac.length;j=j-1;
					}					
				}
				Grd_GuestTab3.dataProvider=Tmp.source;
				Grd_PropertyAssignedGuest.dataProvider=Ac1;
				//
				var Ac_ApartmentType:ArrayCollection = new ArrayCollection();
				Ac_ApartmentType = Ddl_Apartment.dataProvider as ArrayCollection;				
				var index:int = Ddl_Apartment.selectedIndex;
				Ac_ApartmentType.removeItemAt(Ddl_Apartment.selectedIndex);
				ApartmentId = 0;
				Ddl_Apartment.dataProvider = null;
				Ddl_Apartment.dataProvider = Ac_ApartmentType;
				Ddl_Apartment.prompt = "Please Select Apartment";
			}
			
			protected function Btn_Backed_clickHandler(event:MouseEvent):void
			{
				var Err:String="";
				var Ac_PtoG:ArrayCollection=new ArrayCollection();
				Ac_PtoG=Grd_PropertyAssignedGuest.dataProvider as ArrayCollection;
				if(Ac_PtoG.length == 0)
				{
					Err = Err + "*  Guest is not added in cart.\n";
				}
				if(Txt_ExtraCCemail.text != "")
				{
					var ExtraCC:String = Txt_ExtraCCemail.text;
					var ExtraCCmail:Array = ExtraCC.split(",");
					var ExtraStr:String = "";
					if(ExtraCCmail.length > 0)
					{
						for(var g:int = 0; g < ExtraCCmail.length; g++)
						{
							ErrStr = "";
							EmailValidator.validate(ExtraCCmail[g]);
							if(ErrStr != "")
							{
								Err += "*  Extra CC Email is Invalid.\n";
							}
						}
					}
				}
				if(Err != "")
				{
					alignAlert(Alert.show(Err,"Requierd Field(s) !",Alert.OK,null,null,iconErrLarge,Alert.OK),10,"");
					return;
				}
				var Ac_Guest:ArrayCollection=new ArrayCollection();
				Ac_Guest=Grd_GuestTab3.dataProvider as ArrayCollection;
				if(Ac_Guest.length > 0)
				{
					alignAlert(Alert.show(String(Ac_Guest.length)+" Guest(s) abandoned, Do you want to Continue?", "Warning !",
						Alert.YES | Alert.NO,null,PressYes, iconWarning, Alert.NO),10,"");
				}
				if(Ac_Guest.length == 0)
				{
					FnSave_Tab3();
				}
			}
			
			private function PressYes(event:CloseEvent):void 
			{
				if (event.detail == Alert.YES) 
				{
					FnSave_Tab3();
				}
			}
			
			protected function FnSave_Tab3():void
			{
				Save_Method="DirectBooking";
				var Ac_Hdr:ArrayCollection=new ArrayCollection
					([{ClientId:0,ClientName:"",Sales:"",CRM:"",
						CheckInDate:Dt_ChkInDt.text,
						ExpectedChkInTime:ExpInTime,
						CheckOutDate:Dt_ChkOutDt.text,
						GradeId:0,GradeName:"",StateId:0,StateName:"",
						CityId:0,CityName:"",ClientBookerId:0,ClientBookerName:"",
						ClientBookerEmail:"",EmailtoGuest:Chk_EmailtoGuest.selected,Note:"",
						SpecialRequirements:Txt_SpecialRequirements.text,
						Id:Id,Status:"Direct Booked",AMPM:Ddl_AMPM.selectedItem,
						BookingLevel:"Apartment",ExtraCCEmail:Txt_ExtraCCemail.text,HRPolicy:Chk_HRPolicy.selected,
						HRPolicyOverrideRemarks:"",PropertyRefNo:"",PaymentFlag:true}]);
				var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
				var Tmp1:ArrayCollection=new ArrayCollection();
				var GuestXml:String="";
				GuestXml += "<ROOT>";
				GuestXml += ObjToXmlStr_Comm(Tmp1,"GridXml")
				GuestXml += "</ROOT>";				
				var PropertyXml:String="";
				PropertyXml += "<ROOT>";
				PropertyXml += ObjToXmlStr_Comm(Tmp1,"GridXml")
				PropertyXml += "</ROOT>";
				var GuestPropertyXml:String="";
				GuestPropertyXml += "<ROOT>";
				GuestPropertyXml += ObjToXmlStr_Comm(Grd_PropertyAssignedGuest.dataProvider as ArrayCollection,"GridXml")
				GuestPropertyXml += "</ROOT>";
				useWeb("ApartmentBooking","Save_CUSTOM",[GlobalXml,HdrXml,GuestXml,PropertyXml,GuestPropertyXml]);
			}
			
			protected function Btn_GridClr_clickHandler(event:MouseEvent):void
			{
				if(Id == 0)
				{
					Grd_Guest._clear();
				}				
			}
			
			public var SSPId:int=0;
			protected function Ddl_SSP_changeHandler(event:IndexChangeEvent):void
			{
				if(Ddl_SSP.selectedItem.label == "Please Select SSP")
				{
					Txt_Tariff.text=Ddl_Apartment.selectedItem.Tariff;SSPId=0;
				}
				else
				{
					Txt_Tariff.text=Ddl_SSP.selectedItem.Tariff;
					SSPId=Ddl_SSP.selectedItem.Id;
				}				
			}
			
			protected function Ddl_ServicePaymentMode_changeHandler(event:IndexChangeEvent):void
			{
				ServicePaymentMode=Ddl_ServicePaymentMode.selectedItem.label;
			}
			
			protected function Ddl_TariffPaymentMode_changeHandler(event:IndexChangeEvent):void
			{
				TariffPaymentMode=Ddl_TariffPaymentMode.selectedItem.label;
			}		
			
			protected function Btn_Refresh_Tab1_clickHandler(event:MouseEvent):void
			{
				var dfsfsdf:ArrayCollection=new ArrayCollection();
				Hlp_Client.dataProvider=dfsfsdf;ClientId=0;Hlp_Client.fnClear();
				Dt_ChkInDt.selectedDate=new Date();Dt_ChkOutDt.selectedDate=new Date();
				Lbl_ClientName.text="";Grd_Guest._clear();
				Lbl_Sales.text="Sales Person";Lbl_CRM.text="CRM Person";Id=0;
				FnHelp_PageLoad();
			}			
			
			protected function Btn_PropertyShow_clickHandler(event:MouseEvent):void
			{
				ErrStr="";Flag=true;
				if(StateId == 0)
				{
					if(Flag == true)
					{
						Hlp_Stat._setFocus();Flag=false;
					}
					ErrStr = ErrStr + "* State is Required.\n";
				}
				if((StateId != 0) && (Hlp_Stat.text == ""))
				{
					if(Flag == true)
					{
						Hlp_Stat._setFocus();Flag=false;
					}
					ErrStr = ErrStr + "* State is Required.\n";
				}
				if(CityId == 0)
				{
					if(Flag == true)
					{
						Hlp_City._setFocus();Flag=false;
					}
					ErrStr = ErrStr + "* City is Required.\n";
				}
				if((CityId == 0) && (Hlp_City.text == ""))
				{
					if(Flag == true)
					{
						Hlp_City._setFocus();Flag=false;
					}
					ErrStr = ErrStr + "* City is Required.\n";
				}
				if(ErrStr != "")
				{
					alignAlert(Alert.show(ErrStr,"Requierd Field(s) !",Alert.OK,
						null,null,iconErrLarge,Alert.OK),10,"");
					return;
				}				
				GradeId = 0;GradeName="";
				/*if(Chk_HRPolicy.selected == false)
				{
				var Ac:ArrayCollection = new ArrayCollection();
				Ac = Grd_Guest._getGridSrc as ArrayCollection;
				for(var i:int = 0; i < Ac.length; i++)
				{
				if((Number(Ac[i].GradeId) == 0)&&(Ac[i].Grade != ""))
				{
				GradeId = 0;GradeName = Ac[i].Grade;
				}
				if(Number(Ac[i].GradeId) != 0)
				{
				GradeId = Ac[i].GradeId;
				GradeName = Ac[i].Grade;
				i = Ac.length;
				}					
				}
				}
				if(Chk_HRPolicy.selected == true)
				{
				GradeId = 0;GradeName="";
				}*/
				
				var FDt:String = Dt_ChkInDt.text;										
				var FY:String = FDt.substr(6,10);
				var FM:String = FDt.substr(3,2);
				var FD:String = FDt.substr(0,2);
				var ChkInDt:String=FY+'-'+FM+'-'+FD+' '+ExpInTime+' '+Ddl_AMPM.selectedItem;
				var TDt:String = Dt_ChkOutDt.text;										
				var TY:String = TDt.substr(6,10);
				var TM:String = TDt.substr(3,2);
				var TD:String = TDt.substr(0,2);
				var ChkOutDt:String=TY+'-'+TM+'-'+TD+' '+'11:59:00 AM';
				
				useWeb("ApartmentBooking","Property_CUSTOM",[GlobalXml,'Apartment_Property',
					GradeName,'',ChkInDt,ChkOutDt,0,CityId,ClientId,0,GradeId,0,0]);
			}			
			
			protected function Txt_LocalityFilter_changeHandler(event:TextOperationEvent):void
			{
				Ddl_PropertyType.selectedItem="Property Type";Txt_PropertyFilter.text="";
				var Ac_Tmp:ArrayCollection=new ArrayCollection();	
				Ac_Tmp=Grd_Property.dataProvider as ArrayCollection;
				Ac_Tmp.filterFunction = Filter_Property_Locality;
				Ac_Tmp.refresh();
			}
			
			private function Filter_Property_Locality(item:Object):Boolean 
			{
				var Itm:Boolean=true;				
				if(Txt_LocalityFilter.text != "")
				{
					var itemName:String = (item.Locality as String).toLowerCase();
					Itm=itemName.indexOf(Txt_LocalityFilter.text.toLowerCase()) > -1;
				}
				return Itm;
			}
			
			public var Cnt:int=0;
			protected function Grd_Property_focusOutHandler(event:FocusEvent):void
			{
				if(event.currentTarget.editedItemPosition != null)
				{
					var PropertyType:String=event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].PropertyType;
					var GetType:String=event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].GetType;
					var Tariff:Number=Number(event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Tariff);
					var Rs:Boolean=Boolean(event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Rs);
					var Per:Boolean=Boolean(event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Per);
					var DiscountAllowed:Number=Number(event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].DiscountAllowed);
					var Discount:int=event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Discount;
					if((Discount == 0)||(Discount > 0))
					{
						event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Discount="";
					}			
					if((PropertyType == "InP")&&(Discount != 0)&&(GetType == "Property"))
					{
						var CalDis:Number=0;
						if(Per == true)
						{
							CalDis = Math.round((Tariff * DiscountAllowed) / 100);
						}
						//(DiscountModeRS == true)
						if(Rs == true)
						{
							CalDis = DiscountAllowed;
						}						
						if(Discount < 0)
						{
							var NegativeCalDis:String='-'+String(CalDis);
							if(Number(NegativeCalDis) <= Discount)
							{
								event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Discount=Discount;
								Cnt=0;
							}
							else
							{
								if(CalDis > 0)
								{
									event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Discount=NegativeCalDis;
								}
								else
								{
									event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Discount="";
								}								
								Cnt = Cnt + 1;
								if(Cnt == 1)
								{
									alignAlert(Alert.show("Maximum Markup Amount is "+NF_Two.format(CalDis),
										"Alert Message !",Alert.OK,null,null,iconWarning,Alert.OK),10,"");
									Ddl_PropertyType.setFocus();Cnt = 0;
									return;
								}																		
							}
						}
						if(Discount > 0)
						{
							if(CalDis >= Discount)
							{
								event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Discount=Discount;
								Cnt=0;
							}
							else
							{
								if(CalDis > 0)
								{
									event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Discount=CalDis;
								}
								else
								{
									event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Discount="";
								}								
								Cnt = Cnt + 1;
								if(Cnt == 1)
								{
									alignAlert(Alert.show("Maximum Markup Amount is "+NF_Two.format(CalDis),
										"Alert Message !",Alert.OK,null,null,iconWarning,Alert.OK),10,"");
									Ddl_PropertyType.setFocus();Cnt = 0;
									return;
								}
							}							
							//event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Discount = "";
						}
					}
					else
					{
						event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Discount = "";
					}
					// Internal,ManagedGH,Dedicated,ClientPrefered,External
					//if((Type == "ManagedGH")||(Type == "Dedicated")||(Type == "ClientPrefered")||(Type == "External"))
					if(Number(event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Tariff) > 0)
					{
						event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].DiscountedTariff = 
						Number(event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Tariff) +
						Number(event.currentTarget.dataProvider[event.currentTarget.editedItemPosition.rowIndex].Discount);
					}
				}
			}			
			
			protected function Dt_ChkOutDt_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				var FromDt:Date=DateField.stringToDate(Dt_ChkInDt.text,"DD/MM/YYYY");
				var ToDt:Date=DateField.stringToDate(Dt_ChkOutDt.text,"DD/MM/YYYY");
				var MS_PER_DAY1:uint = 1000 * 60 * 60 * 24;
				var DiffDt:Date = new Date(ToDt.time - FromDt.time);
				Txt_StayDays.text = String(Math.abs(Math.round((DiffDt.time / MS_PER_DAY1))));
			}
			
			protected function Txt_NewBooker_changeHandler():void
			{
				if(ClientBookerId != 0)
				{
					var asd:ArrayCollection=new ArrayCollection();
					asd = Ddl_Booker.dataProvider as ArrayCollection;
					Ddl_Booker.dataProvider=null;
					Ddl_Booker.dataProvider=asd;
					Ddl_Booker.prompt="Please Select Booker";
					Txt_BookerEmail.text="";
					ClientBookerId=0;ClientBookerName="";
				}				
			}
			
			protected function Grd_Property_itemRollOverHandler(event:ListEvent):void
			{
				if (event.itemRenderer.measuredWidth > 50)
				{
					Grd_Property.toolTip = "Phone: "+DataGridItemRenderer(event.itemRenderer).data.Phone +"\nEmail: "+DataGridItemRenderer(event.itemRenderer).data.Email;
				}
			}
			
			protected function Grd_Property_itemRollOutHandler(event:ListEvent):void
			{
				Grd_Property.toolTip=null;
			}
			
			protected function Btn_PnlSave_clickHandler():void
			{
				ErrStr = "";
				if(Lbl_C1M.text == "*")
				{
					if(Hlp_Column1.text == "")
					{
						ErrStr += "* "+Lbl_C1Name.text+"  is Required.\n";
					}
				}
				if(Lbl_C2M.text == "*")
				{
					if(Hlp_Column2.text == "")
					{
						ErrStr += "* "+Lbl_C2Name.text+"  is Required.\n";
					}
				}
				if(Lbl_C3M.text == "*")
				{
					if(Hlp_Column3.text == "")
					{
						ErrStr += "* "+Lbl_C3Name.text+"  is Required.\n";
					}
				}
				if(Lbl_C4M.text == "*")
				{
					if(Hlp_Column4.text == "")
					{
						ErrStr += "* "+Lbl_C4Name.text+"  is Required.\n";
					}
				}
				if(Lbl_C5M.text == "*")
				{
					if(Hlp_Column5.text == "")
					{
						ErrStr += "* "+Lbl_C5Name.text+"  is Required.\n";
					}
				}
				if(Lbl_C6M.text == "*")
				{
					if(Hlp_Column6.text == "")
					{
						ErrStr += "* "+Lbl_C6Name.text+"  is Required.\n";
					}
				}
				if(Lbl_C7M.text == "*")
				{
					if(Hlp_Column7.text == "")
					{
						ErrStr += "* "+Lbl_C7Name.text+"  is Required.\n";
					}
				}
				if(Lbl_C8M.text == "*")
				{
					if(Hlp_Column8.text == "")
					{
						ErrStr += "* "+Lbl_C8Name.text+"  is Required.\n";
					}
				}
				if(Lbl_C9M.text == "*")
				{
					if(Hlp_Column9.text == "")
					{
						ErrStr += "* "+Lbl_C9Name.text+"  is Required.\n";
					}
				}
				if(Lbl_C10M.text == "*")
				{
					if(Hlp_Column10.text == "")
					{
						ErrStr += "* "+Lbl_C10Name.text+"  is Required.\n";
					}
				}
				if(ErrStr != "")
				{
					alignAlert(Alert.show(ErrStr,"Requierd Field(s) !",
						Alert.OK,null,null,iconErrLarge,Alert.OK),10,"");
					return;
				}
				
				var ACC_Guest:ArrayCollection = new ArrayCollection();
				ACC_Guest = Grd_GuestTab3.dataProvider as ArrayCollection;
				var ACC_Guestlength:int = ACC_Guest.length;
				Grd_GuestTab3.dataProvider = null;
				for(var f:int = 0; f < ACC_Guestlength; f++)
				{
					if(GuestId == ACC_Guest[f].GuestId)
					{
						ACC_Guest[f].Txt_C1 = Hlp_Column1.text;
						ACC_Guest[f].Txt_C2 = Hlp_Column2.text;
						ACC_Guest[f].Txt_C3 = Hlp_Column3.text;
						ACC_Guest[f].Txt_C4 = Hlp_Column4.text;
						ACC_Guest[f].Txt_C5 = Hlp_Column5.text;
						ACC_Guest[f].Txt_C6 = Hlp_Column6.text;
						ACC_Guest[f].Txt_C7 = Hlp_Column7.text;
						ACC_Guest[f].Txt_C8 = Hlp_Column8.text;
						ACC_Guest[f].Txt_C9 = Hlp_Column9.text;
						ACC_Guest[f].Txt_C10 = Hlp_Column10.text;
						f = ACC_Guestlength;
					}
				}
				Grd_GuestTab3.dataProvider = ACC_Guest;
				Btn_BackTab3.enabled = true;
				Btn_Backed.enabled = true;
				Pnl_CustomFields.visible = false;
			}
			
			protected function Btn_PnlClose_click():void
			{
				Pnl_CustomFields.visible = false;
				Btn_BackTab3.enabled = true;
				Btn_Backed.enabled = true;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:RadioButtonGroup id="Radiogrp_Property"/>
		<mx:EmailValidator id="EmailValidator" invalid="EmailValidator_invalidHandler(event)"
						   valid="EmailValidator_validHandler(event)"/>
		<mx:NumberFormatter id="NF_Two" precision="2"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script source = "..\\Common\\CommonScript.as"/>
	<fx:Script source = "..\\Common\\Functions.as"/>
	<fx:Style source="..\\Common\\ApplicationCSS.css"/>
	<s:VGroup x="0" y="0" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
		<s:BorderContainer x="8" y="5" width="990" height="530" depth="0" borderVisible="false"
						   backgroundColor="#fbf9f9">
			<WrbComp:Button_HB id="Btn_GridClr" x="44" y="469.25" _Label="Guest Clear"
							   click="Btn_GridClr_clickHandler(event)" buttonMode="true"/>
			<WrbComp:Button_HB id="Btn_Refresh_Tab1" x="452" y="469.25" _Label="Refresh"
							   click="Btn_Refresh_Tab1_clickHandler(event)" buttonMode="true"/>
			<WrbComp:TimeControl id="Tcl_Time" x="497" y="106.25" width="108" height="33"
								 ShortTimeFormat="true" tabIndex="4" depth="0"/>
			<mx:DateField x="153" y="111.25" id="Dt_ChkInDt" formatString="DD/MM/YYYY"
						  change="Dt_ChkInDt_changeHandler(event)" tabIndex="3"/>
			<mx:DateField x="854" y="111.25" id="Dt_ChkOutDt" formatString="DD/MM/YYYY" tabIndex="7"
						  change="Dt_ChkOutDt_changeHandler(event)"/>
			<mx:Label x="44" y="70.95" text="Client Name"/>
			<mx:Label x="23" y="57" text="Tracking Number" visible="false"/>
			<s:HGroup x="524" y="71.45" width="420" height="20" gap="10" horizontalAlign="left"
					  verticalAlign="middle">
				<s:Label text="Sales Person" id="Lbl_Sales"/>
				<s:Label text="&amp;"/>
				<s:Label text="CRM Person" id="Lbl_CRM"/>
			</s:HGroup>			
			<s:Label x="139" y="75.4" text="*" color="Red"/>
			<s:Label x="139" y="116.75" text="*" color="Red"/>
			<s:Label x="483" y="116.75" text="*" color="Red"/>
			<s:Label x="841" y="116.75" text="*" color="Red"/>
			<mx:Label x="44" y="112.25" text="CheckIn Date"/> 
			<mx:Label x="44" y="156.3" text="Guest Details :"/>
			<mx:Label x="334" y="112.25" text="Expected CheckIn Time"/>
			<mx:Label x="736" y="112.25" text="CheckOut Date"/>
			<WrbComp:ProDGrid1 x="44.9" y="184" width="900" height="242" id="Grd_Guest" depth="0"
							   _ColDataField="EmpCode~Title~FirstName~LastName~Grade~Designation~EmailId~MobileNo~Nationality~GuestId~GradeId~Id"
							   _ColHdrText="Emp Code~Title~First Name~Last Name~Grade~Designation~Email Id~Mobile No~Nationality~GuestId~GradeId~Id"
							   _ColType="hlp~hlp~txt~txt~txt~txt~txt~txt~txt~txt~txt~txt"
							   _colVisible="1~1~1~1~1~1~1~1~1~0~0~0"
							   _ColWidth="100~100~100~100~100~100~100~100~100~0~0~0"
							   _editable="1~1~1~1~1~1~1~1~1~0~0~0"
							   _required="0~1~1~1~0~0~1~0~0~0~0~0"
							   _spltChar="~"
							   _visibleColNos="9"
							   _getHlpTxtData="Grd_Guest__getHlpTxtDataHandler(event)"
							   _tabIndex="8"
							   _DuplChk="false"
							   GridId="Guest"/>
			<mx:Panel x="194" y="21" width="600" height="487" title="Custom Fields" id="Pnl" depth="2"
					  visible="false">
				<s:VGroup horizontalAlign="center" verticalAlign="middle" width="100%" height="100%"
						  gap="15">
					<s:Scroller width="420" height="375" depth="1">
						<s:Group width="100%" height="100%" id="TopCntl">
						</s:Group>
					</s:Scroller>
					<WrbComp:Button_HB id="Btn_Close" click="Btn_Close_clickHandler(event)" _Label="Close"/>
				</s:VGroup>
			</mx:Panel>
			<s:BorderContainer x="10" y="50" width="970" height="468" id="Bdr_Tab2" visible="false"
							   depth="1" borderVisible="false" backgroundColor="#fbf9f9">
				<s:Group x="0" y="0" width="100%" height="468" depth="2">
					<s:CheckBox x="824.2" y="370.9" label="EMail to Guest" id="Chk_EmailtoGuest"
								tabIndex="33"/>
					<s:CheckBox x="689.2" y="13.9" label="HR Policy Override" id="Chk_HRPolicy"
								tabIndex="28" visible="false"/>
					<mx:DataGrid id="Grd_Property" x="22.25" y="81" width="925" height="254"
								 focusOut="Grd_Property_focusOutHandler(event)" editable="true"
								 itemRollOver="Grd_Property_itemRollOverHandler(event)"
								 itemRollOut="Grd_Property_itemRollOutHandler(event)">
						<mx:columns>
							<mx:DataGridColumn width="50" dataField="Tick" headerText="" editable="false">
								<mx:itemRenderer>
									<fx:Component>
										<mx:HBox horizontalAlign="center" verticalAlign="middle">
											<mx:CheckBox selected="{data.Tick}" enabled="{data.Chk}" 
														 change="outerDocument.FnChkChange(event);"/>
										</mx:HBox>
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>								
							<mx:DataGridColumn width="200" dataField="PropertyName" headerText="Property"
											   editable="false" textAlign="left"/>
							<mx:DataGridColumn width="0" dataField="PropertyId" visible="false"/>
							<mx:DataGridColumn width="0" dataField="GetType" visible="false"/>
							<mx:DataGridColumn width="60" dataField="StarRating" editable="false"
											   headerText="Star"/>
							<mx:DataGridColumn width="60" dataField="PropertyType" editable="false"
											   headerText="Type" textAlign="center"/>
							<mx:DataGridColumn width="80" dataField="Tariff" editable="false"
											   textAlign="center"/>
							<mx:DataGridColumn width="70" textAlign="center" editable="true"
											   dataField="Discount" headerText="Markup"/>
							<mx:DataGridColumn width="100" dataField="DiscountedTariff" editable="false"
											   textAlign="center" headerText="Final Tariff"/>
							<mx:DataGridColumn width="100" dataField="Phone" editable="false"
											   textAlign="left"/>
							<mx:DataGridColumn width="100" dataField="Email" editable="false"
											   textAlign="left"/>
							<mx:DataGridColumn width="0" dataField="Locality" visible="false"/>
							<mx:DataGridColumn width="0" dataField="LocalityId" visible="false"/>
							<mx:DataGridColumn width="0" dataField="Per" visible="false"/>
							<mx:DataGridColumn width="0" dataField="Rs" visible="false"/>
							<mx:DataGridColumn width="0" dataField="DiscountAllowed" visible="false"/>
							<mx:DataGridColumn width="0" dataField="Id" visible="false"/>
						</mx:columns>
					</mx:DataGrid>
					
					<WrbHelpComp:HelpText id="Hlp_City" x="521" y="12.5" width="200" height="23"
										  onselection="{FnOnselection_City()}" pxTabIndex="27"
										  pxSetColumnsWidth="198,0" depth="1" pxSetHeight="233">
					</WrbHelpComp:HelpText>
					<WrbHelpComp:HelpText id="Hlp_Stat" x="85.999985" y="12.5" width="200" height="23"
										  onselection="{FnOnselection_State()}" pxTabIndex="26"
										  pxSetColumnsWidth="198,0" depth="1" pxSetHeight="233">
					</WrbHelpComp:HelpText>
					<s:TextInput id="Txt_PropertyFilter" x="301.25" y="51" width="200" height="23"
								 change="Txt_PropertyFilter_changeHandler(event)"
								 prompt="Property Filter" tabIndex="30"/>
					<s:TextInput id="Txt_LocalityFilter" x="525.25" y="51" width="200" height="23"
								 change="Txt_LocalityFilter_changeHandler(event)"
								 prompt="Locality Filter" tabIndex="30"/>
					<mx:Label x="461.3" y="349.45" text="Booker Email"/>
					<s:TextInput id="Txt_BookerEmail" x="561.6" y="348.45" width="200" editable="false"
								 focusEnabled="false" height="23" depth="0"/>
					<mx:Label x="49.3" y="389.45" text="New Booker Name"/>
					<s:TextInput id="Txt_NewBooker" x="178.9" y="388.45" width="200" height="23"
								 tabIndex="34" change="Txt_NewBooker_changeHandler()"/>
					<mx:Label x="433.3" y="389.45" text="New Booker Email"/>
					<s:TextInput id="Txt_NewBookerEmail" x="561.65" y="388.45" width="200" height="23"
								 tabIndex="35" change="Txt_NewBooker_changeHandler()"/>					
					<WrbComp:Button_HB id="Btn_NextTab2" x="863.25" y="424.25006" _Label="Next" depth="1"
									   click="Btn_NextTab2_clickHandler(event)"/>
					<WrbComp:Button_HB id="Btn_BackTab2" x="22.15" y="424.25" _Label="Back"
									   click="Btn_BackTab2_clickHandler(event)"/>
					<s:DropDownList id="Ddl_Booker" x="178.85" y="348.45" width="200" height="23" tabIndex="32"
									prompt="Please Select Booker" change="Ddl_Booker_changeHandler(event)"
									depth="0"/>
					<s:DropDownList id="Ddl_PropertyType" x="70" y="51" width="220" height="23" tabIndex="29"
									selectedItem="Property Type" change="Ddl_PropertyType_changeHandler(event)">
						<s:ArrayCollection>
							<fx:String>Property Type</fx:String>
							<fx:String>Managed Guest House Property</fx:String>
							<fx:String>Dedicated Property</fx:String>
							<fx:String>Client Prefered Property</fx:String>
							<fx:String>Internal Property</fx:String>
							<fx:String>External Property</fx:String>
						</s:ArrayCollection>
					</s:DropDownList>
					<mx:Label x="22.25" y="52" text="Filter"/>
					<mx:Label x="49.25" y="349.45" text="Booker Name"/>
					<!--s:Label x="73.25" y="353.97504" text="*" color="Red"/-->
					<mx:Label x="22.25" y="12" text="State"/>
					<s:Label x="72" y="16.5" text="*" color="Red"/>
					<s:Label x="75" y="642.95" text="*" color="Red"/>
					<mx:Label x="459.95" y="12" text="City"/>
					<s:Label x="502" y="16.5" text="*" color="Red"/>
					<WrbComp:Button_HB id="Btn_PropertyShow" x="867.2001" y="8" width="80" buttonMode="true"
									   _Label="Show" click="Btn_PropertyShow_clickHandler(event)"
									   focusEnabled="false"/>
				</s:Group>			
			</s:BorderContainer>
			<s:HGroup x="10" y="10" width="970" height="30" verticalAlign="top" gap="15">
				<s:BorderContainer width="150" height="30" cornerRadius="5" borderVisible="false"
								   id="Btn_Tab1">
					<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
						<s:Label x="10" y="9" text="Client &amp; Guest Details" id="Lbl_Tab1"/>
					</s:HGroup>					
				</s:BorderContainer>
				<s:BorderContainer width="150" height="30" cornerRadius="5" borderVisible="false"
								   id="Btn_Tab2">
					<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
						<s:Label x="10" y="9" text="Property Details" id="Lbl_Tab2"/>
					</s:HGroup>					
				</s:BorderContainer>
				<s:BorderContainer width="150" height="30" cornerRadius="5" borderVisible="false"
								   id="Btn_Tab3">
					<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
						<s:Label x="10" y="9" text="Booking" id="Lbl_Tab3"/>
					</s:HGroup>
					
				</s:BorderContainer>
				<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
					<s:Label id="Lbl_ClientName"/>
				</s:HGroup>
				
			</s:HGroup>
			<s:BorderContainer x="10" y="50" width="970" height="470" depth="2" id="Bdr_Tab3"
							   borderVisible="false" backgroundColor="#fbf9f9" visible="false">
				<s:Panel id="Pnl_CustomFields" x="250" y="3" width="470" height="419" depth="1"
						 title="Custom Fields" visible="false">
					<s:Label x="447" y="-22" text="X" toolTip="Close" click="Btn_PnlClose_click()"/>
					<WrbHelpComp:HelpText id="Hlp_Column1" x="245" y="11" width="200" height="20"
										  depth="11" pxSetColumnsWidth="198" pxSetHeight="154"
										  pxTabIndex="67"/>
					<s:Label id="Lbl_C1M" x="225" y="19" color="Red" text="*"/>
					<WrbHelpComp:HelpText x="245" y="43" width="200" height="20" id="Hlp_Column2"
										  depth="10" pxSetColumnsWidth="198" pxSetHeight="154"
										  pxTabIndex="68"/>
					<WrbHelpComp:HelpText x="245" y="75" width="200" height="20" id="Hlp_Column3"
										  depth="9" pxSetColumnsWidth="198" pxSetHeight="154"
										  pxTabIndex="69"/>
					<WrbHelpComp:HelpText x="245" y="107" width="200" height="20" id="Hlp_Column4"
										  depth="8" pxSetColumnsWidth="198" pxSetHeight="154"
										  pxTabIndex="70"/>
					<WrbHelpComp:HelpText x="245" y="139" width="200" height="20" id="Hlp_Column5"
										  depth="7" pxSetColumnsWidth="198" pxSetHeight="154"
										  pxTabIndex="71"/>
					<WrbHelpComp:HelpText x="245" y="171" width="200" height="20" id="Hlp_Column6"
										  depth="6" pxSetColumnsWidth="198" pxSetHeight="154"
										  pxTabIndex="72"/>
					<WrbHelpComp:HelpText x="245" y="203" width="200" height="20" id="Hlp_Column7"
										  depth="5" pxSetColumnsWidth="198" pxSetHeight="154"
										  pxTabIndex="73"/>
					<WrbHelpComp:HelpText x="245" y="234" width="200" height="20" id="Hlp_Column8"
										  depth="4" pxSetColumnsWidth="198" pxSetHeight="154"
										  pxTabIndex="74"/>
					<WrbHelpComp:HelpText x="245" y="266" width="200" height="20" id="Hlp_Column9"
										  depth="3" pxSetColumnsWidth="198" pxSetHeight="154"
										  pxTabIndex="75"/>
					<WrbHelpComp:HelpText x="245" y="298" width="200" height="20" id="Hlp_Column10"
										  depth="2" pxSetColumnsWidth="198" pxSetHeight="154"
										  pxTabIndex="76"/>
					<s:Label id="Lbl_C2M" x="225" y="51" color="Red" text="*"/>
					<s:Label id="Lbl_C3M" x="225" y="83" color="Red" text="*"/>
					<s:Label id="Lbl_C4M" x="225" y="115" color="Red" text="*"/>
					<s:Label id="Lbl_C5M" x="225" y="147" color="Red" text="*"/>
					<s:Label id="Lbl_C6M" x="225" y="179" color="Red" text="*"/>
					<s:Label id="Lbl_C7M" x="225" y="211" color="Red" text="*"/>
					<s:Label id="Lbl_C8M" x="225" y="242" color="Red" text="*"/>
					<s:Label id="Lbl_C9M" x="225" y="274" color="Red" text="*"/>
					<s:Label id="Lbl_C10M" x="225" y="306" color="Red" text="*"/>
					<s:Label id="Lbl_C1Name" x="14" y="15" width="200" height="12" text="Column1Name"/>
					<s:Label id="Lbl_C2Name" x="14" y="47" width="200" height="12"
							 text="Column2Name"/>
					<s:Label id="Lbl_C3Name" x="14" y="79" width="200" height="12"
							 text="Column3Name"/>
					<s:Label id="Lbl_C4Name" x="14" y="111" width="200" height="12"
							 text="Column4Name"/>
					<s:Label id="Lbl_C5Name" x="14" y="143" width="200" height="12"
							 text="Column5Name"/>
					<s:Label id="Lbl_C6Name" x="14" y="175" width="200" height="12"
							 text="Column6Name"/>
					<s:Label id="Lbl_C7Name" x="14" y="207" width="200" height="12"
							 text="Column7Name"/>
					<s:Label id="Lbl_C8Name" x="14" y="238" width="200" height="12"
							 text="Column8Name"/>
					<s:Label id="Lbl_C9Name" x="14" y="270" width="200" height="12"
							 text="Column9Name"/>
					<s:Label id="Lbl_C10Name" x="14" y="302" width="200" height="12"
							 text="Column10Name"/>
					<s:HGroup x="9" y="337" width="449" height="32" horizontalAlign="center">
						<WrbComp:Button_HB id="Btn_PnlSave" _Label="Add"
										   click="Btn_PnlSave_clickHandler()"/>
						<WrbComp:Button_HB id="Btn_PnlClose" _Label="Close" click="Btn_PnlClose_click()"/>
					</s:HGroup>
				</s:Panel>
				<WrbComp:Button_HB id="Btn_BackTab3" x="12" y="433" _Label="Back"
								   click="Btn_BackTab3_clickHandler(event)"/>
				<WrbComp:Button_HB id="Btn_Backed" x="848" y="433" width="110" height="32"
								   _Label="Confirm Booking" click="Btn_Backed_clickHandler(event)"/>
				<WrbComp:Button_HB id="Btn_Add" x="443" y="185" _Label="Add to Cart"
								   click="Btn_Add_clickHandler(event)" buttonMode="true"/>
				<s:TextArea id="Txt_SpecialRequirements" x="583.85" y="433" width="225" height="32"
							maxChars="1000" tabIndex="47"/>
				<s:TextArea id="Txt_ExtraCCemail" x="239.75" y="433" width="225" height="32"
							maxChars="1000" tabIndex="47"/>
				<mx:Label x="135.85" y="438.45" text="Extra CC Email"/>
				<mx:Label x="534.9" y="438.45" text="Note"/>
				<s:DropDownList id="Ddl_ServicePaymentMode" x="395" y="143" width="170" height="23"
								change="Ddl_ServicePaymentMode_changeHandler(event)"
								prompt="Service Payment Mode" tabIndex="46"/>
				<s:DropDownList id="Ddl_TariffPaymentMode" x="104" y="143" width="180" height="17.25"
								change="Ddl_TariffPaymentMode_changeHandler(event)"
								prompt="Tariff Payment Mode" tabIndex="45"/>
				<mx:Label x="2" y="13" text="Property"/>
				<s:DropDownList id="Ddl_Property" x="104" y="12" width="461" height="23"
								prompt="Please Select Property" tabIndex="41"/>
				<mx:Label x="2" y="54.35" text="Apartment Type"/>
				<s:DropDownList id="Ddl_Apartment" x="104" y="56.25" width="180" height="17.25"
								change="Ddl_Room_changeHandler(event)"
								prompt="Please Select  Apartment" tabIndex="42"/>
				<mx:Label x="2" y="99.25" text="SSP"/>
				<s:DropDownList id="Ddl_SSP" x="104" y="101.15" width="180" height="17.25"
								change="Ddl_SSP_changeHandler(event)"
								prompt="Please Select SSP" tabIndex="43"/>
				<mx:Label x="30" y="11" text="Room Level" visible="false"/>
				<s:DropDownList id="Ddl_Level" x="153" y="6" width="110" height="23"
								selectedItem="Room Level" visible="false">
					<mx:ArrayCollection>
						<fx:String>Room Level</fx:String>
						<fx:String>Bed Level</fx:String>
					</mx:ArrayCollection>
				</s:DropDownList>
				<mx:Label x="304" y="144" text="Service Mode"/>
				<mx:Label x="2" y="144" text="Tariff Mode"/>
				<mx:Label x="352" y="79.25" text="Apartment Tariff"/>
				<mx:DataGrid id="Grd_GuestTab3" x="586" y="12" width="370" height="155"
							 editable="true" focusEnabled="false">
					<mx:columns>
						<mx:DataGridColumn width="50" dataField="Tick" headerText="" editable="false">
							<mx:itemRenderer>
								<fx:Component>
									<mx:HBox horizontalAlign="center" verticalAlign="middle">
										<mx:CheckBox selected="{data.Tick}" enabled="true" 
													 change="outerDocument.FnChkChangeTab3(event);"/>
									</mx:HBox>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn width="80" dataField="EmpCode" editable="false"/>
						<mx:DataGridColumn width="120" dataField="FirstName" editable="false"/>
						<mx:DataGridColumn width="120" dataField="LastName" editable="false"/>
						<mx:DataGridColumn width="0" dataField="Name" visible="false"/>
						<mx:DataGridColumn width="0" dataField="GuestId" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Id" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Txt_C1" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Txt_C2" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Txt_C3" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Txt_C4" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Txt_C5" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Txt_C6" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Txt_C7" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Txt_C8" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Txt_C9" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Txt_C10" visible="false"/>
					</mx:columns>
				</mx:DataGrid>
				<mx:DataGrid id="Grd_PropertyAssignedGuest" x="12" y="232" width="946" height="182">
					<mx:columns>
						<mx:DataGridColumn width="0" dataField="EmpCode" visible="false"/>
						<mx:DataGridColumn width="0" dataField="FirstName" visible="false"/>
						<mx:DataGridColumn width="0" dataField="LastName" visible="false"/>
						<mx:DataGridColumn width="150" dataField="Name"/>
						<mx:DataGridColumn width="0" dataField="GuestId" visible="false"/>
						<mx:DataGridColumn width="80" dataField="ApartmentType" editable="false"/>
						<mx:DataGridColumn width="80" dataField="Tariff" editable="false"/>
						<mx:DataGridColumn width="0" dataField="ApartmentId" visible="false"/>
						<mx:DataGridColumn width="0" dataField="BedId" visible="false"/>
						<mx:DataGridColumn width="0" dataField="SSPId" visible="false"/>
						<mx:DataGridColumn width="0" dataField="BookingPropertyId" visible="false"/>
						<mx:DataGridColumn width="0" dataField="BookingPropertyTableId" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Id" visible="false"/>
						<mx:DataGridColumn width="80" dataField="TariffPaymentMode" editable="false"
										   headerText="Tariff Mode"/>
						<mx:DataGridColumn width="80" dataField="ServicePaymentMode" editable="false"
										   headerText="Service Mode"/>
						<mx:DataGridColumn width="0" dataField="Column1" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Column2" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Column3" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Column4" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Column5" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Column6" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Column7" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Column8" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Column9" visible="false"/>
						<mx:DataGridColumn width="0" dataField="Column10" visible="false"/>
						<mx:DataGridColumn width="0" dataField="BTCFilePath" visible="false"/>
						<mx:DataGridColumn width="0" dataField="RoomCaptured" visible="false"/>
					</mx:columns>
				</mx:DataGrid>
				<s:TextInput x="465" y="78.3" id="Txt_Tariff" height="23" width="80" textAlign="center"
							 editable="false" focusEnabled="false"/>
				<s:HGroup x="586" y="190.45" width="372" horizontalAlign="center" gap="0">
					<mx:Label x="586" y="190.5" text="CheckIn :" fontWeight="bold"
							  id="Lbl_ChkIn"/>
					<mx:Label x="586" y="190.5" text="21/05/2014"
							  id="Lbl_ChkInDt"/>
					<mx:Label x="586" y="190.5" id="Lbl"/>
					<mx:Label x="586" y="190.5" text="CheckOut :" fontWeight="bold"
							  id="Lbl_ChkOut"/>
					<mx:Label x="586" y="190.5" text="22/05/2014"
							  id="Lbl_ChkOutDt"/>
				</s:HGroup>
				<s:Panel x="247" y="121" width="477" height="132" title="Upload Files" id="Pnl_Upload"
						 borderVisible="false" visible="false">
					<s:TextInput x="31" y="32" width="200" id="Txt_FileName" height="32" editable="false"/>
					<s:TextInput x="23" y="5" width="200" id="Txt_Result"/>
					<WrbComp:Button_HB id="Btn_Browse" x="254" y="32" _Label="Browse"
									   click="FnBrowse()" buttonMode="true"/>
					<WrbComp:Button_HB id="Btn_Upload" x="360" y="32" _Label="Add"
									   click="FnUpload()" buttonMode="true"/>
					<s:Label x="456" y="-21" text="X" click="{Pnl_Upload.visible=false}" toolTip="Close" buttonMode="true"/>
				</s:Panel>
			</s:BorderContainer>
			<WrbComp:Button_HB id="Btn_Tab1Next" x="860" y="469.25" _Label="Next" depth="0"
							   click="Btn_Tab1Next_clickHandler(event)" buttonMode="true"/>
			<WrbHelpComp:HelpText id="Hlp_Client" x="153" y="71.5" width="350" height="20"
								  onselection="{FnOnselection_Client()}" pxSetColumnsWidth="290,150,0,0,0"
								  pxSetHeight="382" textAlign="left" pxTabIndex="2">
			</WrbHelpComp:HelpText>			
			<s:DropDownList x="604" y="111" width="55" height="23" id="Ddl_AMPM"
							selectedItem="PM" tabIndex="6">
				<mx:ArrayCollection>
					<fx:String>AM</fx:String>
					<fx:String>PM</fx:String>
				</mx:ArrayCollection>
			</s:DropDownList>
			<mx:Label x="694" y="156.25" text="Approximate Stay Days" depth="0"/>
			<s:TextInput x="854" y="155.25" width="50" height="23" id="Txt_StayDays" depth="0" 
						 editable="false" focusEnabled="false" textAlign="center" visible="true"/>
		</s:BorderContainer>
	</s:VGroup>
</s:Application>
