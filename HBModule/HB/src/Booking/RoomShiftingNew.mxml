<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   width="100%" height="100%" pageTitle="Room Shifting"
			   creationComplete="application1_creationCompleteHandler(event)" xmlns:WrbComp="WrbComp.*">
	<fx:Script>
		<![CDATA[
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			public static var Global_AC:ArrayCollection = new ArrayCollection();
			public static var GlobalXml:String = "";
			public var BookingId:int=0,FromRoomId:int=0,BookingLevel:String="",ChkInDt:String="";
			public var ToRoomId:int=0,ToRoomNo:String="",Id:int=0,RoomCaptured:int=0;
			public var CurrentStatus:String="",PropertyType:String="";
			public var TodayDt:String="",TomoDt:String="";
			public var Dt1:String = "",Dt2:String = "",Dt3:String = "",Dt4:String = "";
			public var MailSts:String = "",ProcessSts:String = "";
			public var TariffPM:String = "",ServicePM:String = "";
			public var OldTariffPM:String = "",OldServicePM:String = "";
			
			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";			
				Chk_Email.selected = true;
				Rdb_Shift.selected = true;
				FnHelp_PageLoad();
				//Dt_ChkInDt.selectedDate = new Date("29/10/2014","DD/MM/YYYY");
			}
			
			protected function FnHelp_PageLoad():void
			{
				if(Rdb_Shift.selected == true)
				{
					useWeb("RoomShifting","PageLoad_CUSTOM",[GlobalXml,'BookingLoad','Shift','','','',0,0,0,0]);
				}
				else
				{
					useWeb("RoomShifting","PageLoad_CUSTOM",[GlobalXml,'BookingLoad','Stay','','','',0,0,0,0]);
				}
			}
			
			private function Custom_WebSer_Result (Ds_Objects:Object):void				
			{				
				if (Ds_Objects.currentTarget.description.toString() == "PageLoad_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Hlp_BookingCode.dataProvider = Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "DateLoad_CUSTOM")
				{
					Dt_ChkInDtExists.selectedDate = new Date();
					Dt_ChkOutDtExists.selectedDate = new Date();
					Dt_ChkInDt.selectedDate = new Date();
					Dt_ChkOutDt.selectedDate = new Date();
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Dt_ChkInDtExists.selectedDate = new Date(Ds_Objects.result.Tables.Table.Rows[0].ChkInDt);
						Dt_ChkOutDtExists.selectedDate = new Date(Ds_Objects.result.Tables.Table.Rows[0].ChkOutDt);
						Dt_ChkInDt.selectableRange = 
							{rangeStart:new Date(Ds_Objects.result.Tables.Table.Rows[0].ChkInDtStart),
								rangeEnd:new Date(Ds_Objects.result.Tables.Table.Rows[0].ChkInDtEnd)};
						Dt_ChkInDt.selectedDate = new Date(Ds_Objects.result.Tables.Table.Rows[0].ChkInDtStart);
						Dt_ChkOutDt.selectableRange = 
							{rangeStart:new Date(Ds_Objects.result.Tables.Table.Rows[0].ChkOutDtStart)};
						Dt_ChkOutDt.selectedDate = new Date(Ds_Objects.result.Tables.Table.Rows[0].ChkOutDtStart);
					}
					if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
					{
						Ddl_ServicePM.dataProvider = Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
						Ddl_TariffPM.dataProvider = Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						PropertyType = Ds_Objects.result.Tables.Table1.Rows[0].PropertyType;
						Ddl_TariffPM.prompt = Ds_Objects.result.Tables.Table1.Rows[0].TariffPaymentMode;
						Ddl_ServicePM.prompt = Ds_Objects.result.Tables.Table1.Rows[0].ServicePaymentMode;
						TariffPM = Ds_Objects.result.Tables.Table1.Rows[0].TariffPaymentMode;
						ServicePM = Ds_Objects.result.Tables.Table1.Rows[0].ServicePaymentMode;
						OldTariffPM = Ds_Objects.result.Tables.Table1.Rows[0].TariffPaymentMode;
						OldServicePM = Ds_Objects.result.Tables.Table1.Rows[0].ServicePaymentMode;
					}					
				}
				if (Ds_Objects.currentTarget.description.toString() == "AvaliableRooms_CUSTOM")
				{
					var sda:ArrayCollection=new ArrayCollection();ToRoomId=0;ToRoomNo="";
					Ddl_Room.dataProvider=sda;Ddl_Room.prompt="Please Select Room";
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Ddl_Room.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "AvaliableFromRooms_CUSTOM")
				{
					var RoomSts:String = "";
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						RoomSts = Ds_Objects.result.Tables.Table.Rows[0].RoomSts;
						if(RoomSts != "")
						{
							alignAlert(Alert.show(RoomSts,"Alert Message !",
								Alert.OK,null,null,iconWarning,Alert.OK),10,"");
						}
						if(RoomSts == "")
						{
							MailSts = "No";
							if(Chk_Email.selected == true)
							{
								if(ProcessSts == "Modification")
								{
									MailSts = "Yes";
								}
								/*if((CurrentStatus == "Booked")&&(ToRoomId == 0))
								{
								Mail = "Yes";
								}*/
							}
							var Ac_Hdr:ArrayCollection=new ArrayCollection
								([{BookingId:BookingId,FromRoomId:FromRoomId,ChkInDt:Dt_ChkInDt.text,
									ChkOutDt:Dt_ChkOutDt.text,ToRoomId:FromRoomId,ToRoomNo:Txt_FromRoom.text,
									BookingLevel:BookingLevel,Id:Id,RoomCaptured:RoomCaptured,
									CurrentStatus:CurrentStatus,
									//
									TariffMode:TariffPM,ServiceMode:ServicePM,
									//
									Mail:MailSts}]);
							var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");				
							useWeb("RoomShifting","Save_CUSTOM",[GlobalXml,HdrXml]);
						}
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					if(Rdb_Shift.selected == false)
					{
						alignAlert(Alert.show("Stay Modified Successfully.",
							"Message !",Alert.OK,null, null, iconTickLarge, Alert.OK),10,"");
					}
					else
					{
						alignAlert(Alert.show("Room Shifted Successfully.",
							"Message !",Alert.OK,null, null, iconTickLarge, Alert.OK),10,"");
					}
					/*if(PropertyType == "ExP")
					{
					alignAlert(Alert.show("Stay Modified Successfully.",
					"Message !",Alert.OK,null, null, iconTickLarge, Alert.OK),10,"");
					}
					else
					{
					if(CurrentStatus == "Booked")
					{
					alignAlert(Alert.show("Stay Modified Successfully.",
					"Message !",Alert.OK,null, null, iconTickLarge, Alert.OK),10,"");
					}
					else
					{
					alignAlert(Alert.show("Room Shifted Successfully.",
					"Message !",Alert.OK,null, null, iconTickLarge, Alert.OK),10,"");
					}
					}*/
					FnClear();
				}
			}
			
			public function FnOnselection_Booking():void
			{
				if(Hlp_BookingCode.selected())
				{
					Hlp_BookingCode.text = Hlp_BookingCode.Select_Row.BookingCode;
					Txt_Guest.text = Hlp_BookingCode.Select_Row.Guest;
					Txt_PropertyName.text = Hlp_BookingCode.Select_Row.PropertyName;
					Txt_FromRoom.text = Hlp_BookingCode.Select_Row.RoomNoId;
					RoomCaptured = Hlp_BookingCode.Select_Row.RoomCapturedId;
					BookingId = Hlp_BookingCode.Select_Row.BookingId;
					FromRoomId = Hlp_BookingCode.Select_Row.RoomId;
					BookingLevel = Hlp_BookingCode.Select_Row.BookingLevelId;
					CurrentStatus = Hlp_BookingCode.Select_Row.CurrentStatus;
					Txt_Status.text = CurrentStatus;
					FnClearnotpageload();
					if(Rdb_Shift.selected == true)
					{
						useWeb("RoomShifting","DateLoad_CUSTOM",
							[GlobalXml,'DateLoad','Shift','','','',BookingId,FromRoomId,RoomCaptured,0]);
					}
					else
					{
						useWeb("RoomShifting","DateLoad_CUSTOM",
							[GlobalXml,'DateLoad','Stay','','','',BookingId,FromRoomId,RoomCaptured,0]);
					}
					
				}
				else
				{
					FnClear();
				}
				Dt_ChkOutDt.setFocus();
			}
			
			protected function Btn_Avaliable_clickHandler(event:MouseEvent):void
			{
				Ddl_Room.setFocus();
				if((BookingId == 0)||(FromRoomId == 0)||(BookingLevel == ""))
				{
					alignAlert(Alert.show("*  Booking Code is Required.","Requierd Field(s) !",
						Alert.OK,null,null,iconErrLarge,Alert.OK),10,"");
					return;
				}
				var FDt:String=Dt_ChkInDt.text;					
				var FY:String = FDt.substr(6,10);
				var FM:String = FDt.substr(3,2);
				var FD:String = FDt.substr(0,2);
				var ChkInDt:String=FY+'-'+FM+'-'+FD+' '+'12:00:00 PM';
				var TDt:String=Dt_ChkOutDt.text;
				var TY:String = TDt.substr(6,10);
				var TM:String = TDt.substr(3,2);
				var TD:String = TDt.substr(0,2);
				var ChkOutDt:String=TY+'-'+TM+'-'+TD+' '+'11:59:00 AM';
				useWeb("RoomShifting","AvaliableRooms_CUSTOM",[GlobalXml,'AvaliableRooms',
					BookingLevel,'',ChkInDt,ChkOutDt,BookingId,FromRoomId,RoomCaptured,0]);
			}
			
			protected function Dt_ChkInDt_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				if(Dt_ChkInDt.selectedDate)
				{
					var Dt:String = Dt_ChkInDt.text;										
					var Y:String = Dt.substr(6,10);
					var M:String = String(Dt.substr(3,2));
					var D:String =String(Number(Dt.substr(0,2))+1);
					var RangeStart:String = Y+'/'+M+'/'+D;
					Dt_ChkOutDt.selectableRange = {rangeStart:new Date(RangeStart)};
					Dt_ChkOutDt.selectedDate = new Date(RangeStart);
					//
					var Dtr:String = Dt_ChkInDt.text;					
					var Yr:String = Dt.substr(6,10);
					var Mr:String = Dt.substr(3,2);
					var Dr:String = Dt.substr(0,2);
					var RangeStartr:String = Yr+'/'+Mr+'/'+Dr;
					//
					var RangeStart1r:String = Yr+'/'+Mr+'/'+String(Number(Dr) + 1);
					//
					var sdar:String=Dt_ChkOutDt.text;
					var Y1r:String = sdar.substr(6,10);
					var M1r:String = sdar.substr(3,2);
					var D1r:String = sdar.substr(0,2);
					//var D:String =String(Number(Dt.substr(0,2))+1);
					var ToDtr:String = Y1r+'/'+M1r+'/'+D1r;
					//Dt_ToDt.selectableRange = {rangeStart:new Date(RangeStart),rangeEnd:new Date(RangeEnd)};
					//Dt_ChkOutDt.selectableRange = {rangeStart:new Date(RangeStart)};
					if(new Date(RangeStartr) >= new Date(ToDtr))
					{
						Dt_ChkOutDt.selectedDate = new Date(RangeStart1r);
					}
					else
					{
						Dt_ChkOutDt.selectedDate = new Date(ToDtr);
					}
				}
			}
			
			protected function Dt_ChkOutDt_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				if(Dt_ChkOutDt.selectedDate)
				{
					var dsa:ArrayCollection=new ArrayCollection();
					Ddl_Room.dataProvider=dsa;Ddl_Room.prompt="Please Select Room";
					ToRoomId=0;ToRoomNo="";
					//
					var Dt:String = Dt_ChkInDt.text;					
					var Y:String = Dt.substr(6,10);
					var M:String = Dt.substr(3,2);
					var D:String = Dt.substr(0,2);
					var RangeStart:String = Y+'/'+M+'/'+D;
					//
					var RangeStart1:String = Y+'/'+M+'/'+String(Number(D) + 1);
					//
					var sda:String=Dt_ChkOutDt.text;
					var Y1:String = sda.substr(6,10);
					var M1:String = sda.substr(3,2);
					var D1:String = sda.substr(0,2);
					//var D:String =String(Number(Dt.substr(0,2))+1);
					var ToDt:String = Y1+'/'+M1+'/'+D1;
					//Dt_ToDt.selectableRange = {rangeStart:new Date(RangeStart),rangeEnd:new Date(RangeEnd)};
					//Dt_ChkOutDt.selectableRange = {rangeStart:new Date(RangeStart)};
					if(new Date(RangeStart) > new Date(ToDt))
					{
						Dt_ChkOutDt.selectedDate = new Date(RangeStart1);
					}
					else
					{
						Dt_ChkOutDt.selectedDate = new Date(ToDt);
					}
				}
			}
			
			protected function Ddl_Room_changeHandler(event:IndexChangeEvent):void
			{
				ToRoomId=Ddl_Room.selectedItem.RoomId;
				ToRoomNo=Ddl_Room.selectedItem.label;
			}
			
			protected function FnInPMGHDdPSave():void
			{
				var Err1:String = "";
				if((BookingId == 0)||(FromRoomId == 0)||(BookingLevel == ""))
				{
					alignAlert(Alert.show("*  Booking Code is Required.\n","Required Field(s) !",
						Alert.OK,null,null,iconErrLarge,Alert.OK),10,"");
					return;
				}
				if(ToRoomId == 0)
				{					
					if(CurrentStatus == "CheckIn")
					{
						Dt1 = Dt_ChkOutDtExists.text;
						Dt2 = Dt_ChkOutDt.text;
						//Dt3 = Dt1.substr(6,10)+'/'+Dt1.substr(3,2)+'/'+Dt1.substr(0,2);
						//Dt4 = Dt2.substr(6,10)+'/'+Dt2.substr(3,2)+'/'+Dt2.substr(0,2);
						//if(new Date(Dt3) < new Date(Dt4))
						if((Dt1 != Dt2) || (TariffPM != OldTariffPM) || (ServicePM != OldServicePM))
						{
							ProcessSts = "Modification";
							var FDt:String=Dt_ChkInDt.text;					
							var FY:String = FDt.substr(6,10);
							var FM:String = FDt.substr(3,2);
							var FD:String = FDt.substr(0,2);
							var ChkInDt:String=FY+'-'+FM+'-'+FD+' '+'12:00:00 PM';
							var TDt:String=Dt_ChkOutDt.text;
							var TY:String = TDt.substr(6,10);
							var TM:String = TDt.substr(3,2);
							var TD:String = TDt.substr(0,2);
							var ChkOutDt:String=TY+'-'+TM+'-'+TD+' '+'11:59:00 AM';
							useWeb("RoomShifting","AvaliableFromRooms_CUSTOM",[GlobalXml,'AvaliableFromRoom',
								BookingLevel,'',ChkInDt,ChkOutDt,BookingId,FromRoomId,RoomCaptured,0]);
						}
						else
						{
							alignAlert(Alert.show("*  Invalid Process.\n","Alert Message !",
								Alert.OK,null,null,iconWarning,Alert.OK),10,"");
							return;
						}
					}
					if(CurrentStatus == "Booked")
					{
						Dt1 = Dt_ChkInDtExists.text;
						Dt2 = Dt_ChkInDt.text;
						Dt3 = Dt_ChkOutDtExists.text;
						Dt4 = Dt_ChkOutDt.text;
						//
						Dt3 = Dt1.substr(6,10)+'/'+Dt1.substr(3,2)+'/'+Dt1.substr(0,2);
						Dt4 = Dt2.substr(6,10)+'/'+Dt2.substr(3,2)+'/'+Dt2.substr(0,2);
						//
						if((Dt_ChkInDtExists.text != Dt_ChkInDt.text) || 
							(Dt_ChkOutDtExists.text != Dt_ChkOutDt.text) ||
							(TariffPM != OldTariffPM) || (ServicePM != OldServicePM))
						{
							ProcessSts = "Modification";
							var FDt1:String=Dt_ChkInDt.text;					
							var FY1:String = FDt1.substr(6,10);
							var FM1:String = FDt1.substr(3,2);
							var FD1:String = FDt1.substr(0,2);
							var ChkInDt1:String=FY1+'-'+FM1+'-'+FD1+' '+'12:00:00 PM';
							var TDt1:String=Dt_ChkOutDt.text;
							var TY1:String = TDt1.substr(6,10);
							var TM1:String = TDt1.substr(3,2);
							var TD1:String = TDt1.substr(0,2);
							var ChkOutDt1:String=TY1+'-'+TM1+'-'+TD1+' '+'11:59:00 AM';
							useWeb("RoomShifting","AvaliableFromRooms_CUSTOM",[GlobalXml,'AvaliableFromRoom',
								BookingLevel,'',ChkInDt1,ChkOutDt1,BookingId,FromRoomId,RoomCaptured,0]);
						}
						else
						{
							alignAlert(Alert.show("*  Invalid Process.\n","Alert Message !",
								Alert.OK,null,null,iconWarning,Alert.OK),10,"");
							return;
						}
					}					
				}
				if(ToRoomId != 0)
				{
					if((Dt_ChkInDtExists.text != Dt_ChkInDt.text) || 
						(Dt_ChkOutDtExists.text != Dt_ChkOutDt.text))
					{
						ProcessSts = "Modification";
					}
					if((Dt_ChkInDtExists.text == Dt_ChkInDt.text) && 
						(Dt_ChkOutDtExists.text == Dt_ChkOutDt.text))
					{
						ProcessSts = "Shifting";
					}
					MailSts = "No";
					if(Chk_Email.selected == true)
					{
						if(ProcessSts == "Modification")
						{
							MailSts = "Yes";
						}						
					}
					var Ac_Hdr:ArrayCollection=new ArrayCollection
						([{BookingId:BookingId,FromRoomId:FromRoomId,ChkInDt:Dt_ChkInDt.text,
							ChkOutDt:Dt_ChkOutDt.text,ToRoomId:ToRoomId,ToRoomNo:ToRoomNo,
							BookingLevel:BookingLevel,Id:Id,RoomCaptured:RoomCaptured,
							CurrentStatus:CurrentStatus,
							//
							TariffMode:TariffPM,
							ServiceMode:ServicePM,
							//
							Mail:MailSts}]);
					var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");				
					useWeb("RoomShifting","Save_CUSTOM",[GlobalXml,HdrXml]);
				}
			}
			
			protected function FnSave():void
			{
				Ddl_Room.setFocus();
				var Err:String="";
				if((PropertyType != "InP")&&(PropertyType != "MGH")&&(PropertyType != "DdP")&&
					(PropertyType != "ExP"))
				{
					Err = Err + "*  Booking Code is Required.\n";
				}
				if(Err != "")
				{
					alignAlert(Alert.show(Err,"Requierd Field(s) !",
						Alert.OK,null,null,iconErrLarge,Alert.OK),10,"");
					return;
				}
				if((PropertyType == "InP")||(PropertyType == "MGH")||(PropertyType == "DdP"))
				{
					FnInPMGHDdPSave();
				}
				if((PropertyType == "ExP")||(PropertyType == "CPP"))
				{
					if((BookingId == 0)||(BookingLevel == ""))
					{
						Err = Err + "*  Booking Code is Required.\n";
					}
					if(Err != "")
					{
						alignAlert(Alert.show(Err,"Required Field(s) !",
							Alert.OK,null,null,iconErrLarge,Alert.OK),10,"");
						return;
					}
					MailSts = "No";ProcessSts = "Modification";
					if(Chk_Email.selected == true)
					{
						MailSts = "Yes";
						/*if(PropertyType == "ExP")
						{
						Mail = "Yes";
						}
						if((PropertyType == "InP")||(PropertyType == "MGH")||(PropertyType == "DdP"))
						{
						if(CurrentStatus == "Booked")
						{
						Mail = "Yes";
						}
						}*/
					}
					var Ac_Hdr:ArrayCollection=new ArrayCollection
						([{BookingId:BookingId,FromRoomId:FromRoomId,ChkInDt:Dt_ChkInDt.text,
							ChkOutDt:Dt_ChkOutDt.text,ToRoomId:ToRoomId,ToRoomNo:ToRoomNo,
							BookingLevel:BookingLevel,Id:Id,RoomCaptured:RoomCaptured,
							CurrentStatus:CurrentStatus,
							//
							TariffMode:TariffPM,ServiceMode:ServicePM,
							//
							Mail:MailSts}]);
					var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");				
					useWeb("RoomShifting","Save_CUSTOM",[GlobalXml,HdrXml]);
				}				
			}
			
			protected function FnClear():void
			{
				Hlp_BookingCode.fnClear();
				Txt_Guest.text="";
				Txt_PropertyName.text="";
				Txt_FromRoom.text="";
				BookingLevel="";
				BookingId=0;
				FromRoomId=0;
				var dsa:ArrayCollection=new ArrayCollection();
				Ddl_Room.dataProvider=dsa;
				Ddl_Room.prompt="Please Select Room";
				ToRoomId=0;ToRoomNo="";
				Id=0;
				RoomCaptured=0;
				CurrentStatus="";
				PropertyType="";
				Txt_Status.text="";
				Chk_Email.selected = true;
				var dsa1:ArrayCollection = new ArrayCollection();
				Ddl_ServicePM.dataProvider = null; 
				Ddl_ServicePM.dataProvider = dsa1;
				Ddl_TariffPM.dataProvider = null; 
				Ddl_TariffPM.dataProvider = dsa1;
				Ddl_ServicePM.prompt = "Service Payment Mode";
				Ddl_TariffPM.prompt = "Tariff Payment Mode";
				TariffPM = "";
				ServicePM = "";
				OldTariffPM = "";
				OldServicePM = "";
				Btn_Avaliable.enabled = true;
				Ddl_Room.enabled = true;
				Dt_ChkInDt.enabled = true;
				Dt_ChkInDt.styleName="";
				Lbl_ToRoomMandatory.visible = true;
				Dt_ChkInDt.text = "";
				Dt_ChkOutDt.text = "";
				Dt_ChkInDtExists.text = "";
				Dt_ChkOutDtExists.text = "";
				//Dt_ChkInDt.selectedDate = new Date();
				//Dt_ChkOutDt.selectedDate = new Date();
				//Dt_ChkInDtExists.selectedDate = new Date();
				//Dt_ChkOutDtExists.selectedDate = new Date();
				FnHelp_PageLoad();
			}
			
			protected function FnClearnotpageload():void
			{
				var dsa:ArrayCollection = new ArrayCollection();
				Ddl_Room.dataProvider = dsa;
				Ddl_Room.prompt = "Please Select Room";
				ToRoomId = 0;
				ToRoomNo = "";
				Id = 0;
				PropertyType = "";				
				Dt_ChkInDt.text = "";
				Dt_ChkInDtExists.text = "";
				Dt_ChkOutDt.text = "";
				Dt_ChkOutDtExists.text = "";
				Chk_Email.selected = true;
				var dsa1:ArrayCollection = new ArrayCollection();
				Ddl_ServicePM.dataProvider = null; 
				Ddl_ServicePM.dataProvider = dsa1;
				Ddl_TariffPM.dataProvider = null; 
				Ddl_TariffPM.dataProvider = dsa1;
				Ddl_ServicePM.prompt = "Service Payment Mode";
				Ddl_TariffPM.prompt = "Tariff Payment Mode";
				TariffPM = "";
				ServicePM = "";
				OldTariffPM = "";
				OldServicePM = "";
				Btn_Avaliable.enabled = true;
				Ddl_Room.enabled = true;
				Dt_ChkInDt.styleName="";
				Lbl_ToRoomMandatory.visible = true;
				//Dt_ChkInDt.selectedDate = new Date();
				//Dt_ChkOutDt.selectedDate = new Date();
				//Dt_ChkInDtExists.selectedDate = new Date();
				//Dt_ChkOutDtExists.selectedDate = new Date();
			}
			
			protected function Ddl_TariffPM_changeHandler(event:IndexChangeEvent):void
			{
				TariffPM = Ddl_TariffPM.selectedItem.label;
			}
			
			protected function Ddl_ServicePM_changeHandler(event:IndexChangeEvent):void
			{
				ServicePM = Ddl_ServicePM.selectedItem.label;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:RadioButtonGroup id="RadioGroup" change="FnClear()"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script source = "..\\Common\\CommonScript.as"/>
	<fx:Script source = "..\\Common\\Functions.as"/>
	<fx:Style source="..\\Common\\ApplicationCSS.css"/>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace WrbHelpComp "WrbHelpComp.*";
		@namespace WrbComp "WrbComp.*";
		.DisabledDateField
		{
			borderColor: #000000;
			chromeColor: #ffffff;
			contentBackgroundColor:#ffffff;
			color:#431d1c;
			focusColor:#746868;
			disabledColor:#431d1c;
		}
	</fx:Style>
	<s:HGroup x="0" y="0" width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
		<s:BorderContainer x="4" y="6" width="915" height="529" backgroundColor="#fbf9f9"
						   borderVisible="false">
			<mx:Label x="127" y="31" text="Booking Code" fontWeight="bold"/>
			<mx:Label x="478.5" y="86" text="Guest" fontWeight="bold"/>
			<mx:Label x="127" y="271" text="CheckIn Date" fontWeight="bold"/>
			<mx:Label x="238.5" y="249" text="Old" fontWeight="bold"/>
			<mx:Label x="238.5" y="302" text="New" fontWeight="bold"/>
			<mx:Label x="478.5" y="271" text="CheckOut Date" fontWeight="bold"/>
			<mx:Label x="243" y="419" text="To Room" fontWeight="bold"/>
			<WrbHelpComp:HelpText id="Hlp_BookingCode" x="238.5" y="30" width="200" height="23"
								  depth="1" onselection="{FnOnselection_Booking()}"
								  pxSetColumnsWidth="100,0,0,100,200,200,0,0,0" pxTabIndex="1"/>
			<s:TextInput id="Txt_Guest" x="583" y="85" width="200" height="23" editable="false"
						 focusEnabled="false"/>
			<mx:Label x="478.5" y="141" text="Status" fontWeight="bold"/>
			<s:TextInput id="Txt_Status" x="583" y="140" width="200" height="23" editable="false"
						 focusEnabled="false"/>
			<mx:Label x="127" y="86" text="Property Name" fontWeight="bold"/>
			<s:TextInput id="Txt_PropertyName" x="238.5" y="85" width="200" height="23"
						 editable="false" focusEnabled="false"/>
			<mx:Label x="127" y="141" text="From Room" fontWeight="bold"/>
			<mx:Label x="127" y="195" text="Tariff  Mode" fontWeight="bold"/>
			<mx:Label x="478.5" y="195" text="Service  Mode" fontWeight="bold"/>
			<s:TextInput id="Txt_FromRoom" x="238.5" y="140" width="200" height="23" editable="false"
						 focusEnabled="false"/>
			<s:DropDownList id="Ddl_Room" x="377" y="418" width="200" height="23" tabIndex="4"
							change="Ddl_Room_changeHandler(event)" prompt="Please Select Room"/>
			<WrbComp:Button_HB id="Btn_Avaliable" x="415.5" y="356" _Label="Show"
							   click="Btn_Avaliable_clickHandler(event)"/>
			<mx:DateField x="291" y="301" id="Dt_ChkInDt" formatString="DD/MM/YYYY"
						  change="Dt_ChkInDt_changeHandler(event)" enabled="true" tabIndex="2"/>
			<!--styleName="DisabledDateField" focusEnabled="false"/-->
			<mx:DateField x="583" y="301" id="Dt_ChkOutDt" formatString="DD/MM/YYYY"
						  change="Dt_ChkOutDt_changeHandler(event)" tabIndex="3"/>
			<mx:DateField x="291" y="248" id="Dt_ChkInDtExists" formatString="DD/MM/YYYY"
						  styleName="DisabledDateField" enabled="false"/>
			<mx:DateField x="583" y="248" id="Dt_ChkOutDtExists" formatString="DD/MM/YYYY"
						  styleName="DisabledDateField" enabled="false"/>
			<s:HGroup x="11" y="471" width="893" height="35" horizontalAlign="center" verticalAlign="middle">
				<WrbComp:Button_HB _Label="Save" click="FnSave()"/>
				<WrbComp:Button_HB _Label="Clear" click="FnClear()"/>
			</s:HGroup>
			<s:Label x="224" y="35.5" text="*" color="red"/>
			<s:Label x="364" y="423.5" text="*" color="red" id="Lbl_ToRoomMandatory"/>
			<s:CheckBox x="617" y="420.5" label="EMail" id="Chk_Email"/>
			<s:DropDownList id="Ddl_TariffPM" x="238.5" y="194" width="200" height="23"
							prompt="Tariff Payment Mode" change="Ddl_TariffPM_changeHandler(event)"/>
			<s:DropDownList id="Ddl_ServicePM" x="583" y="194" width="200" height="23"
							prompt="Service Payment Mode" change="Ddl_ServicePM_changeHandler(event)"/>
			<s:HGroup x="479" y="35" width="304" gap="50" horizontalAlign="center">
				<s:RadioButton label="Room Shifting" groupName="RadioGroup" id="Rdb_Shift"/>
				<s:RadioButton label="Stay Modification" groupName="RadioGroup" id="Rdb_Stay"/>
			</s:HGroup>
		</s:BorderContainer>
	</s:HGroup>
</s:Application>