<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbComp="WrbComp.*"
			   xmlns:WrbHelpComp="WrbHelpComp.*"			   
			   width="100%" height="100%" creationComplete="creationCompleteHandler(event)"
			   keyDown="application1_keyDownHandler(event)" pageTitle="Property Management">
	<fx:Declarations>
		<mx:EmailValidator id="EmailValidator" valid="EmailValidator_validHandler(event)"
						   invalid="EmailValidator_invalidHandler(event)"/>
		
		<mx:EmailValidator id="EmailValidator1" valid="EmailValidator_validHandler1(event)"
						   invalid="EmailValidator_invalidHandler1(event)"/>
		
		<mx:EmailValidator id="EmailValidator2" valid="EmailValidator_validHandler2(event)"
						   invalid="EmailValidator_invalidHandler2(event)"/>
		
		<s:RadioButtonGroup id="Rdbg_Payment"  change="CourierChange()"/> 
		<mx:NumberFormatter id="NF_Two" precision="2" rounding="nearest"/>		
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script source = "..\\Common\\CommonScript.as"/>
	<fx:Script source = "..\\Common\\Functions.as"/>
	<fx:Style source="..\\Common\\ApplicationCSS.css" />
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import flash.net.FileReference;
			
			import flexlib.controls.textClasses.StringBoundaries;
			
			import mx.controls.Alert;
			import mx.effects.AddItemAction;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			public var ErrString:String="";
			public var Ac_Clear:ArrayCollection=new ArrayCollection();
			public var Ac_Clear1:ArrayCollection=new ArrayCollection();
			public var Ac_Clear2:ArrayCollection=new ArrayCollection();
			public var Ac_Clear3:ArrayCollection=new ArrayCollection();
			public var Ac_Clear4:ArrayCollection=new ArrayCollection();
			public var Ac_Clear5:ArrayCollection=new ArrayCollection();
			public var Ac_Email:ArrayCollection=new ArrayCollection();
			
			public var DragStr:String="";
			public var DropStr:String="";
			public var objItems:ArrayCollection=new ArrayCollection();
			public var objIndex:ArrayCollection=new ArrayCollection();
			public var Ac_SelectedItems: ArrayCollection = new ArrayCollection();
			public var Ac_SelectedIndices: ArrayCollection = new ArrayCollection();
			public var Ac_Second:ArrayCollection= new ArrayCollection();
			public var Ac_First:ArrayCollection= new ArrayCollection();
			public var Len_selectedItems:int=0,Len_SelectedIndices:int=0;
			public static var GlobalXml:String="";
			public static var Global_AC:ArrayCollection=new ArrayCollection();
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			 
			public var StateId:int=0,PropertyId:int=0,Id:int=0;
			public var CityId:int=0;
			public var LocalityId:int=0;
			//Apartment Variables
			public var AparmentId:int=0,BlockId:int=0,RoomBedId:int=0;
			public var RoomBlockId:int=0,RoomApartmentId:int=0;
			public var Room_Types:int=0,RoomCount:int=0;
			public static var Mode:String="";
			//Owner Variables
			public var OwnerId:int=0;
			public var CityMode:String="";
			public var Apartment_AC:ArrayCollection=new ArrayCollection();
			public var OwnerCityId:int=0,OwnerLocalityId:int=0,TypeId:int=0,Type:String="";
			public var OwnerStateId:int=0;
			//Agreement Variables
			public var AgreementId:int=0,Flag1:int=0,Checks:int=0;;
			public static var SavCntl_Flag:String="";
			public var AgreementApartmentId:int=0;
			public var AgreementApartmentName:String="";
			public static var CopyFlag:Boolean=false;
			public var CopyId:int=0;
			public var Email:String="";
			//Image Upload
			private var fileRef:FileReference = new FileReference();
			private var fileTypes:Array = new Array();
			
			//setup the filters (types of files to be browsed)
			
			private var imageTypes:FileFilter = new FileFilter("Images (*.jpg; *.jpeg; *.gif; *.png)" ,"*.jpg; *.jpeg; *.gif; *.png");
			private var documentTypes:FileFilter = new FileFilter("Documents (*.pdf), (*.doc), (*.rtf), (*.txt)",("*.pdf; *.doc; *.rtf, *.txt"));
			
			// Set Up URLRequest
			[Bindable]
			private var arrColl:ArrayCollection;
			
			/* URL of the file to download. */
			private var FILE_URL:String = "";
			
			
			private var urlReq:URLRequest;
			
			public var uploadURL:URLRequest = new URLRequest();
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				Global_AC = funLoginInfo("<gScrId>1</gScrId><gUsrFk>1</gUsrFk>");				
				GlobalXml = "";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";		
				Lst_DSOM.dataProvider=Ac_Clear;
				Lst_DSRM.dataProvider=Ac_Clear1;				
				Lst_DSARM.dataProvider=Ac_Clear2;				
				Lst_DSPM.dataProvider=Ac_Clear3;				
				Lst_DSOR.dataProvider=Ac_Clear4;
				Lst_DSSAL.dataProvider=Ac_Clear5;
				/*SCtrl_Apartment.setButtonRights("Refresh",true);
				SCtrl_Apartment.setButtonRights("Search",true);
				SCtrl_Apartment.setButtonRights("Clear",true);
				SCtrl_Apartment.setButtonRights("Delete",true);*/
				SaveCl_Property.setButtonRights("Delete",true);				
				PropertyClick();
				refresh()
				chk_Active.visible=false;
				bdr_Check.visible=false;
				chk_Restaurant.visible=false;
				chk_ConferenceHall.visible=false;
				chk_CyberCafe.visible=false;
				chk_Laundry.visible=false;
				chk_Pub.visible=false;
				chk_Gym.visible=false;
				chk_SwimPool.visible=false;
				chk_ShowOnWebsite.visible=false;
			}	
			protected function application1_keyDownHandler(event:KeyboardEvent):void
			{
				if(SavCntl_Flag=="PT")
				{
					SaveCl_Property.KeyHandler(event);
				}
				else if(SavCntl_Flag=="AP")
				{
					sav_Apartment.KeyHandler(event);
				}
				else if(SavCntl_Flag=="ON")
				{
					SavCnl_Owner.KeyHandler(event);
				}
				else if(SavCntl_Flag=="RB")
				{
					sav_Rooms_Bed.KeyHandler(event);
				}
				else if(SavCntl_Flag=="AG")
				{
					SaveCtl_Agreement.KeyHandler(event);
				}
				
			}	
			private function refresh():void
			{
				useWeb("Property","State_CUSTOM",[GlobalXml,'State',0,0,'','']);
				useWeb("Property","User_CUSTOM",[GlobalXml,'User',0,0,'','']);
				useWeb("Property","PAGELOAD_CUSTOM",[GlobalXml,'Type',0,0,'','']);
			}
			private function Custom_WebSer_Result (Ds_Objects:Object):void				
			{
				if (Ds_Objects.currentTarget.description.toString() == "PAGELOAD_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						dd_Type.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;		
					}
				}
				//Property Value get
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					if(Mode=="Property")
					{
						if (PropertyId == 0)
						{
							alignAlert(Alert.show("Property Saved Successfully.","Message !",
								Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
						}
						else
						{
							alignAlert(Alert.show("Property Updated Successfully.","Message !",
								Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
						}
						PropertyId=Ds_Objects.result.Tables.Table.Rows[0].Id;
						SearchDtls(PropertyId,0);
						if((dd_Category.selectedItem!="Internal Property")||(dd_Category.selectedItem!="Managed G H"))
						{
							//PropertyClear();
						}
						//
					}
					if(Mode=="PropertyApartment")
					{
						if (AparmentId == 0)
						{
							alignAlert(Alert.show("Property Apartment Saved Successfully.","Message !",
								Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
						}
						else
						{
							alignAlert(Alert.show("Property Apartment Updated Successfully.","Message !",
								Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
						}
						Apartment_Clear();
					}
					if(Mode=="PropertyRoom")
					{
						if (RoomBedId == 0)
						{
							alignAlert(Alert.show("Room and Bed Saved Successfully.","Message !",
								Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
						}
						else
						{
							alignAlert(Alert.show("Room and Bed  Updated Successfully.","Message !",
								Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
						}
						RoomBed_Clear();
					}
					if(Mode=="PropertyOwners")
					{
						if (OwnerId == 0)
						{
							alignAlert(Alert.show("Owner Saved Successfully.","Message !",
								Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
						}
						else
						{
							alignAlert(Alert.show("Owner Updated Successfully.","Message !",
								Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
						}
						OwnerClear();
					}
					if(Mode=="PropertyAgreement")
					{
						if (AgreementId == 0)
						{
							alignAlert(Alert.show("Agreement Saved Successfully.","Message !",
								Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
						}
						else
						{
							alignAlert(Alert.show("Agreement Updated Successfully.","Message !",
								Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
						}
						Agreement_Clear();
					}
					
				}
				if (Ds_Objects.currentTarget.description.toString() == "Delete_CUSTOM")
				{	
					alignAlert(Alert.show("Deleted Successfully.","Message !",Alert.OK, null, null,iconTickLarge, Alert.OK),10,"");
					PropertyClear();	
				}
				if (Ds_Objects.currentTarget.description.toString() == "User_CUSTOM")
				{
					Lst_SCOM.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					Lst_SCRM.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;			
					Lst_SCARM.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection; 			
					Lst_SCPM.dataProvider=Ds_Objects.result.Tables.Table3.Rows as ArrayCollection;				
					Lst_SCOR.dataProvider=Ds_Objects.result.Tables.Table4.Rows as ArrayCollection; 
					Lst_SCSAL.dataProvider=Ds_Objects.result.Tables.Table5.Rows as ArrayCollection;
					
				}
				if (Ds_Objects.currentTarget.description.toString() == "State_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length>0)
					{	
						dd_State.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection
						dd_OwnerState.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection
					}
					
					
				}
				if (Ds_Objects.currentTarget.description.toString() == "City_CUSTOM")
				{
					if(CityMode=="Property")
					{
						if(Ds_Objects.result.Tables.Table.Rows.length>0)
						{
							dd_City.dataProvider=null;//dd_City.prompt="Please Select City";
							CityId=0;
							dd_City.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection	
						}
						else
						{
							dd_OwnerCity.dataProvider=null;//dd_OwnerCity.prompt="Please Select City";
							CityId=0;
						}
					}
					else
					{
						if(Ds_Objects.result.Tables.Table.Rows.length>0)
						{
							dd_OwnerCity.dataProvider=null;//dd_OwnerCity.prompt="Please Select City";
							OwnerCityId=0;
							dd_OwnerCity.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection
						}
						else
						{
							dd_OwnerCity.dataProvider=null;//dd_OwnerCity.prompt="Please Select City";
							OwnerCityId=0;
						}
						
					}
					
				}
				if (Ds_Objects.currentTarget.description.toString() == "Locality_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length>0)
					{
						Hlp_Locality.dataProvider=null;//Hlp_Locality.prompt="Please Select Locality";
						LocalityId=0;
						Hlp_Locality.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection	
					}
					else
					{
						Hlp_Locality.dataProvider=null;//Hlp_Locality.prompt="Please Select Locality";
						LocalityId=0;
					}
				}				
				if (Ds_Objects.currentTarget.description.toString() == "LocalityArea_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length>0)
					{
						txt_LocalityArea.dataProvider=null;//txt_LocalityArea.prompt="Please Select Locality";
						OwnerLocalityId=0
						txt_LocalityArea.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection	
					}
					else
					{
						txt_LocalityArea.dataProvider=null;//txt_LocalityArea.prompt="Please Select Locality";
						OwnerLocalityId=0
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "SelectApartment_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length>0)
					{						
						
						RoomCount=Ds_Objects.result.Tables.Table.Rows[0].RoomCount;
						lbl_RoomCount.text="Pending Room Count : "+String(Room_Types-RoomCount);	
						if(RoomCount>=Room_Types)
						{
							Ddl_Apartment_RB.selectedItem="";
							RoomApartmentId=0;
							Ddl_Apartment_RB.prompt="Please Select Apartment";
							alignAlert(Alert.show("Room Entry Already Finished.","Error !",
								Alert.OK, null, null, iconErrLarge, Alert.OK),10,"");
						}
					}					
				}
				if (Ds_Objects.currentTarget.description.toString() == "Copy_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{	
							Btn_Copy.visible=false;
							Btn_Copy.width=-5;
						
							//SaveCl_Property.setButtonRights("Delete",false);
							txt_PropertyName.text=Ds_Objects.result.Tables.Table.Rows[0].PropertyName;
							txt_PropertyCode.text=Ds_Objects.result.Tables.Table.Rows[0].Code;
							dd_Category.selectedIndex=0;
							dd_State.text=Ds_Objects.result.Tables.Table.Rows[0].StateName;
							dd_City.text=Ds_Objects.result.Tables.Table.Rows[0].CityName;
							Hlp_Locality.text=Ds_Objects.result.Tables.Table.Rows[0].Locality;
							//dd_State.prompt=Ds_Objects.result.Tables.Table.Rows[0].StateName;
							//dd_City.prompt=Ds_Objects.result.Tables.Table.Rows[0].CityName;
							//Hlp_Locality.prompt=Ds_Objects.result.Tables.Table.Rows[0].Locality;
							txt_PropertyDescription.text=Ds_Objects.result.Tables.Table.Rows[0].PropertDescription;
							txt_Address.text=Ds_Objects.result.Tables.Table.Rows[0].Propertaddress;
							txt_DiretionsLandmarks.text=Ds_Objects.result.Tables.Table.Rows[0].Directions;
							txt_ContactNumbers.text=Ds_Objects.result.Tables.Table.Rows[0].Phone;
							txt_PostalCode.text=Ds_Objects.result.Tables.Table.Rows[0].Postal;
							txt_LatitudeandLongitude.text=Ds_Objects.result.Tables.Table.Rows[0].LatitudeLongitude;
							txt_Keywords.text=Ds_Objects.result.Tables.Table.Rows[0].Keyword;
							txt_Prefix.text=Ds_Objects.result.Tables.Table.Rows[0].Prefix;
							chk_SwimPool.selected=Ds_Objects.result.Tables.Table.Rows[0].ServicesSwimPool;
							chk_Pub.selected=Ds_Objects.result.Tables.Table.Rows[0].ServicesPub;
							chk_Gym.selected=Ds_Objects.result.Tables.Table.Rows[0].ServicesGym;
							chk_Restaurant.selected=Ds_Objects.result.Tables.Table.Rows[0].ServicesRestaurant;
							chk_ConferenceHall.selected=Ds_Objects.result.Tables.Table.Rows[0].ServicesConfHall;
							chk_CyberCafe.selected=Ds_Objects.result.Tables.Table.Rows[0].ServicesCyberCafe;
							chk_Laundry.selected=Ds_Objects.result.Tables.Table.Rows[0].ServicesLaundry;
							chk_ShowOnWebsite.selected=Ds_Objects.result.Tables.Table.Rows[0].ShowOnWebsite;
							txt_PropertyRackTarrif.text=Ds_Objects.result.Tables.Table.Rows[0].PropertyRackTarrif;
							PropertyId=Ds_Objects.result.Tables.Table.Rows[0].Id
							dt_TodayDate.text =Ds_Objects.result.Tables.Table.Rows[0].Date;
							LocalityId=Ds_Objects.result.Tables.Table.Rows[0].LocalityId
							CityId=Ds_Objects.result.Tables.Table.Rows[0].CityId
							StateId=Ds_Objects.result.Tables.Table.Rows[0].StateId
							dd_Type.prompt=Ds_Objects.result.Tables.Table.Rows[0].PropertyType;
							TypeId=Ds_Objects.result.Tables.Table.Rows[0].TypeId;
							//dd_Type.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].PropertyType;
							txt_TotalNoRooms.text=Ds_Objects.result.Tables.Table.Rows[0].TotalNoRooms;
							txt_PropertyRackTarrifDouble.text=Ds_Objects.result.Tables.Table.Rows[0].RackTarrifDouble;
							txt_BookingPolicy.text=Ds_Objects.result.Tables.Table.Rows[0].BookingPolicy;
							txt_CancelPolicy.text=Ds_Objects.result.Tables.Table.Rows[0].CancelPolicy;
							txt_Email.text=Ds_Objects.result.Tables.Table.Rows[0].Email;
							dd_CheckIn.prompt=Ds_Objects.result.Tables.Table.Rows[0].CheckIn;
							dd_CheckInType.prompt=Ds_Objects.result.Tables.Table.Rows[0].CheckInType;
							dd_CheckOut.prompt=Ds_Objects.result.Tables.Table.Rows[0].CheckOut;
							dd_CheckOutType.prompt=Ds_Objects.result.Tables.Table.Rows[0].CheckOutType;
							dd_gracetime.prompt=Ds_Objects.result.Tables.Table.Rows[0].Gracetime;
							CategoryChange();
							
							if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
							{
								Lst_DSOM.dataProvider=Ds_Objects.result.Tables.Table1.Rows;							
								Ac_Clear=Ds_Objects.result.Tables.Table1.Rows;
								SearchUserList('Lst_SCOM',Ac_Clear,'Ac_Clear')
								
								
							}
							if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
							{
								Lst_DSRM.dataProvider=Ds_Objects.result.Tables.Table2.Rows;
								Ac_Clear1=Ds_Objects.result.Tables.Table2.Rows;
								SearchUserList('Lst_SCRM',Ac_Clear1,'Ac_Clear1')				
								
							}
							if (Ds_Objects.result.Tables.Table3.Rows.length > 0)
							{
								Lst_DSARM.dataProvider=Ds_Objects.result.Tables.Table3.Rows;
								Ac_Clear2=Ds_Objects.result.Tables.Table3.Rows;
								SearchUserList('Lst_SCARM',Ac_Clear2,'Ac_Clear2')				
								
							}
							if (Ds_Objects.result.Tables.Table4.Rows.length > 0)
							{
								Lst_DSPM.dataProvider=Ds_Objects.result.Tables.Table4.Rows;
								Ac_Clear3=Ds_Objects.result.Tables.Table4.Rows;
								SearchUserList('Lst_SCPM',Ac_Clear3,'Ac_Clear3')				
								
							}
							if (Ds_Objects.result.Tables.Table5.Rows.length > 0)
							{
								Lst_DSOR.dataProvider=Ds_Objects.result.Tables.Table5.Rows;
								Ac_Clear4=Ds_Objects.result.Tables.Table5.Rows;
								SearchUserList('Lst_SCOR',Ac_Clear4,'Ac_Clear4')		
								
								
							}
							if (Ds_Objects.result.Tables.Table6.Rows.length > 0)
							{
								Lst_DSSAL.dataProvider=Ds_Objects.result.Tables.Table6.Rows;
								Ac_Clear5=Ds_Objects.result.Tables.Table6.Rows;
								SearchUserList('Lst_SCSAL',Ac_Clear5,'Ac_Clear5')		
							}	
							if (Ds_Objects.result.Tables.Table7.Rows.length > 0)
							{
								grd_Block._setGridSrc=Ds_Objects.result.Tables.Table7.Rows as ArrayCollection ;	
							}
							alignAlert(Alert.show("Copied Successfully.","Message !",
								Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
						}
				}
				if (Ds_Objects.currentTarget.description.toString() == "SavedAggrementDetails_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						dt_DateofAgreement.enabled=false;
						dt_RentalStartDate.enabled=false;
						dt_ExpiryDate.enabled=false;
						chk_Active.visible =true;
						dt_DateofAgreement.text=Ds_Objects.result.Tables.Table.Rows[0].DateOfAgreement;
						dt_RentalStartDate.text=Ds_Objects.result.Tables.Table.Rows[0].RentalStartDate;
						txt_NoticePeriod.text=Ds_Objects.result.Tables.Table.Rows[0].NoticePeriod;
						txt_LockPeriod.text=Ds_Objects.result.Tables.Table.Rows[0].LockInPeriod;
						txt_StartingRental.text=Ds_Objects.result.Tables.Table.Rows[0].StartingRentalMonth;
						dt_ExpiryDate.text=Ds_Objects.result.Tables.Table.Rows[0].ExpiryDate;
						dd_RentalType.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].RentalType;  	
						txt_Tenure.text=Ds_Objects.result.Tables.Table.Rows[0].Tenure;
						dd_MaintenanceType.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].MaintenanceType
						chk_Rentinclusive.selected=Ds_Objects.result.Tables.Table.Rows[0].RentInclusive;
						AgreementId=Ds_Objects.result.Tables.Table.Rows[0].Id;
						dt_MaintenanceStartdate.text=Ds_Objects.result.Tables.Table.Rows[0].StartingMaintenanceMonth;
						txt_MaintenanceAmount.text=Ds_Objects.result.Tables.Table.Rows[0].MaintenanceAmount;
						hlp_AssociationName.text=Ds_Objects.result.Tables.Table.Rows[0].AssociationName;
						dd_Apartment.prompt=Ds_Objects.result.Tables.Table.Rows[0].ApartmentName;
						AgreementApartmentName=Ds_Objects.result.Tables.Table.Rows[0].ApartmentName;
						AgreementApartmentId=Ds_Objects.result.Tables.Table.Rows[0].ApartmentId;
						dd_Paid.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].Paid;
						txt_AdvanceAmount.text=Ds_Objects.result.Tables.Table.Rows[0].AdvanceAmount;
						dd_AdvanceType.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].AdvanceType;
						txt_bank.text=Ds_Objects.result.Tables.Table.Rows[0].Bank;
						txt_ChqNo.text=Ds_Objects.result.Tables.Table.Rows[0].ChqNeft;
						dt_AdvanceDate.text=Ds_Objects.result.Tables.Table.Rows[0].AdvanceDate;
						chk_Active.selected=Ds_Objects.result.Tables.Table.Rows[0].Status;
						chk_TAC.selected=Ds_Objects.result.Tables.Table.Rows[0].TAC;
						txt_TACPer.text=Ds_Objects.result.Tables.Table.Rows[0].TACPer;
//						chk_Luxury.selected=Ds_Objects.result.Tables.Table.Rows[0].Checks;
//						checkbox_changeHandler();
//						if(chk_Luxury.selected==true)
//						{
//						  RB_Rack.selected=Ds_Objects.result.Tables.Table.Rows[0].Flag;
//						  if(RB_Rack.selected=0)
//						  {
//							  RB_Rack.selected==true;
//							  Txt_Tariff.text=Ds_Objects.result.Tables.Table.Rows[0].Tariff;
//						  }
//						  else(RB_Agreed.selected=1)
//						  {
//							  RB_Agreed.selected==true;
//							  Txt_Tariff.text=Ds_Objects.result.Tables.Table.Rows[0].Tariff; 
//						  }
//						}
						checkbox1_changeHandler();
						if(chk_Active.selected == true)
						{
							chk_Active.visible =true;
							chk_Active.selected == true;
							chk_Active.enabled =true; 
						}
						else
						{ chk_Active.visible =true;
							chk_Active.selected == false;
							chk_Active.enabled =false; 
						}
					}
					
					if(Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Grd_Agreement.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					}
					if(Ds_Objects.result.Tables.Table2.Rows.length > 0)
					{
						Grd_Owner.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
					}	
					if(Ds_Objects.result.Tables.Table3.Rows.length > 0)
					{
						Grd_AgreementRoomDetails._setGridSrc=Ds_Objects.result.Tables.Table3.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "OwnerSelect_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{	
						dd_Title.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].Title
						txt_FirstName.text=Ds_Objects.result.Tables.Table.Rows[0].FirstName
						txt_Lastname.text=Ds_Objects.result.Tables.Table.Rows[0].Lastname
						txt_LedgerName.text=Ds_Objects.result.Tables.Table.Rows[0].LedgerName
						txt_EmailId.text=Ds_Objects.result.Tables.Table.Rows[0].EmailID
						txt_Phone.text=Ds_Objects.result.Tables.Table.Rows[0].Phone
						txt_AlternatePhone.text=Ds_Objects.result.Tables.Table.Rows[0].Alternatephone
						txt_OwnerAddress.text=Ds_Objects.result.Tables.Table.Rows[0].Address
						txt_AccountNumber.text=Ds_Objects.result.Tables.Table.Rows[0].AccountNumber
						txt_IFSC.text=Ds_Objects.result.Tables.Table.Rows[0].IFSC
						txt_SWIFTCode.text=Ds_Objects.result.Tables.Table.Rows[0].SWIFTCode					
						//dd_OwnerState.prompt=Ds_Objects.result.Tables.Table.Rows[0].State;
						dd_OwnerState.text=Ds_Objects.result.Tables.Table.Rows[0].State;
						if(Ds_Objects.result.Tables.Table3.Rows.length > 0)
						{
							dd_OwnerCity.dataProvider=Ds_Objects.result.Tables.Table3.Rows as ArrayCollection;
						}
						if(Ds_Objects.result.Tables.Table4.Rows.length > 0)
						{
							txt_LocalityArea.dataProvider=Ds_Objects.result.Tables.Table4.Rows as ArrayCollection;
						}
						dd_OwnerCity.text=Ds_Objects.result.Tables.Table.Rows[0].City;
						txt_LocalityArea.text=Ds_Objects.result.Tables.Table.Rows[0].LocalityArea
						//dd_OwnerCity.prompt=Ds_Objects.result.Tables.Table.Rows[0].City;
						//txt_LocalityArea.prompt=Ds_Objects.result.Tables.Table.Rows[0].LocalityArea
						txt_OwnerPostal.text=Ds_Objects.result.Tables.Table.Rows[0].Postal
						txt_TDSPer.text=Ds_Objects.result.Tables.Table.Rows[0].	TDSPer
						
						if(Ds_Objects.result.Tables.Table.Rows[0].PaymentMode==true)
						{
							Rdbg_Payment.selectedValue=1; 
						}
						else
						{
							Rdbg_Payment.selectedValue=0; 
						}
						//rd_Couriercheque.selected=true;
						//rd_DirectCredit.selected=false;			
						txt_PayeeName.text=Ds_Objects.result.Tables.Table.Rows[0].PayeeName
						txt_Bank.text=Ds_Objects.result.Tables.Table.Rows[0].Bank
						txt_BranchAddress.text=Ds_Objects.result.Tables.Table.Rows[0].BranchAddress
						dd_AccountType.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].AccountType
						OwnerId=0;
						//PropertyId=Ds_Objects.result.Tables.Table.Rows[0].PropertyId;
						OwnerStateId=Ds_Objects.result.Tables.Table.Rows[0].StateId;
						OwnerCityId=Ds_Objects.result.Tables.Table.Rows[0].CityId;
						OwnerLocalityId=Ds_Objects.result.Tables.Table.Rows[0].LocalityId;
						txt_PAN.text=Ds_Objects.result.Tables.Table.Rows[0].PANNO;
						txt_TIN.text=Ds_Objects.result.Tables.Table.Rows[0].TIN
						txt_ST.text=Ds_Objects.result.Tables.Table.Rows[0].ST
						txt_VAT.text=Ds_Objects.result.Tables.Table.Rows[0].VAT
						if(Ds_Objects.result.Tables.Table2.Rows.length > 0)
						{
							
							Grd_ListApartments.dataProvider =Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
							myArrayCollection=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
							//ApartmentLoadFun(Apartment_AC);
						}
						if(Ds_Objects.result.Tables.Table1.Rows.length > 0)
						{
							
							var Temp_Apartment_AC:ArrayCollection= new ArrayCollection();
							Temp_Apartment_AC=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
							SetValueFrmCtrl(Temp_Apartment_AC);
						}
						if(Ds_Objects.result.Tables.Table5.Rows.length > 0)
						{
							Grd_OtherContacts._setGridSrc=Ds_Objects.result.Tables.Table5.Rows as ArrayCollection
						}
					}
					else
					{
						alignAlert(Alert.show("PAN NO OR EmailId  Not Match.","Error !",
							Alert.OK, null, null, iconWarning, Alert.OK),10,"");
					}
					
				}
				if (Ds_Objects.currentTarget.description.toString() == "Search_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{	
						if(Mode=="Property")
						{
							Btn_Copy.visible=true;
							Btn_Copy.width=100;
							SaveCl_Property.setButtonRights("Delete",false);
							txt_PropertyName.text=Ds_Objects.result.Tables.Table.Rows[0].PropertyName;
							txt_PropertyCode.text=Ds_Objects.result.Tables.Table.Rows[0].Code;
							dd_Category.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].Category;
							if (Ds_Objects.result.Tables.Table8.Rows.length > 0)
							{
								dd_City.dataProvider=Ds_Objects.result.Tables.Table8.Rows as ArrayCollection
							}
							if (Ds_Objects.result.Tables.Table9.Rows.length > 0)
							{
								Hlp_Locality.dataProvider=Ds_Objects.result.Tables.Table9.Rows as ArrayCollection
							}	
							dd_State.text=Ds_Objects.result.Tables.Table.Rows[0].StateName;
							dd_City.text=Ds_Objects.result.Tables.Table.Rows[0].CityName;
							Hlp_Locality.text=Ds_Objects.result.Tables.Table.Rows[0].Locality;
							//dd_State.prompt=Ds_Objects.result.Tables.Table.Rows[0].StateName;
							//dd_City.prompt=Ds_Objects.result.Tables.Table.Rows[0].CityName;
							//Hlp_Locality.prompt=Ds_Objects.result.Tables.Table.Rows[0].Locality;
							txt_PropertyDescription.text=Ds_Objects.result.Tables.Table.Rows[0].PropertDescription;
							txt_Address.text=Ds_Objects.result.Tables.Table.Rows[0].Propertaddress;
							txt_DiretionsLandmarks.text=Ds_Objects.result.Tables.Table.Rows[0].Directions;
							txt_ContactNumbers.text=Ds_Objects.result.Tables.Table.Rows[0].Phone;
							txt_PostalCode.text=Ds_Objects.result.Tables.Table.Rows[0].Postal;
							txt_LatitudeandLongitude.text=Ds_Objects.result.Tables.Table.Rows[0].LatitudeLongitude;
							txt_Keywords.text=Ds_Objects.result.Tables.Table.Rows[0].Keyword;
							txt_Prefix.text=Ds_Objects.result.Tables.Table.Rows[0].Prefix;
							chk_SwimPool.selected=Ds_Objects.result.Tables.Table.Rows[0].ServicesSwimPool;
							chk_Pub.selected=Ds_Objects.result.Tables.Table.Rows[0].ServicesPub;
							chk_Gym.selected=Ds_Objects.result.Tables.Table.Rows[0].ServicesGym;
							chk_Restaurant.selected=Ds_Objects.result.Tables.Table.Rows[0].ServicesRestaurant;
							chk_ConferenceHall.selected=Ds_Objects.result.Tables.Table.Rows[0].ServicesConfHall;
							chk_CyberCafe.selected=Ds_Objects.result.Tables.Table.Rows[0].ServicesCyberCafe;
							chk_Laundry.selected=Ds_Objects.result.Tables.Table.Rows[0].ServicesLaundry;
							chk_ShowOnWebsite.selected=Ds_Objects.result.Tables.Table.Rows[0].ShowOnWebsite;
							txt_PropertyRackTarrif.text=Ds_Objects.result.Tables.Table.Rows[0].PropertyRackTarrif;
							PropertyId=Ds_Objects.result.Tables.Table.Rows[0].Id
							dt_TodayDate.text =Ds_Objects.result.Tables.Table.Rows[0].Date;
							LocalityId=Ds_Objects.result.Tables.Table.Rows[0].LocalityId
							CityId=Ds_Objects.result.Tables.Table.Rows[0].CityId
							StateId=Ds_Objects.result.Tables.Table.Rows[0].StateId
							dd_Type.prompt=Ds_Objects.result.Tables.Table.Rows[0].PropertyType;
							TypeId=Ds_Objects.result.Tables.Table.Rows[0].TypeId;
							//dd_Type.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].PropertyType;
							txt_TotalNoRooms.text=Ds_Objects.result.Tables.Table.Rows[0].TotalNoRooms;
							txt_PropertyRackTarrifDouble.text=Ds_Objects.result.Tables.Table.Rows[0].RackTarrifDouble;
							txt_BookingPolicy.text=Ds_Objects.result.Tables.Table.Rows[0].BookingPolicy;
							txt_CancelPolicy.text=Ds_Objects.result.Tables.Table.Rows[0].CancelPolicy;
							txt_Email.text=Ds_Objects.result.Tables.Table.Rows[0].Email;
							var ChkIn:int=0,ChkOut:int=0;
							ChkIn=Ds_Objects.result.Tables.Table.Rows[0].CheckIn
							ChkOut=Ds_Objects.result.Tables.Table.Rows[0].CheckOut;
							if(ChkIn==24)
							{
								dd_CheckIn.selectedIndex=13
								dd_CheckOut.selectedIndex=13
								dd_CheckInType.selectedIndex=0
								dd_CheckOutType.selectedIndex=0
								dd_gracetime.selectedIndex=0
							}
							else
							{
								dd_CheckIn.selectedIndex=11
								dd_CheckOut.selectedIndex=11
								dd_CheckInType.selectedIndex=2
								dd_CheckOutType.selectedIndex=2
								dd_gracetime.selectedIndex=0
							}
//							dd_CheckInType.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].CheckInType;
//							dd_CheckOutType.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].CheckOutType;
//							dd_gracetime.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].GraceTime;
							CategoryChange();
							
							if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
							{
								Lst_DSOM.dataProvider=Ds_Objects.result.Tables.Table1.Rows;							
								Ac_Clear=Ds_Objects.result.Tables.Table1.Rows;
								SearchUserList('Lst_SCOM',Ac_Clear,'Ac_Clear')
								
								
							}
							if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
							{
								Lst_DSRM.dataProvider=Ds_Objects.result.Tables.Table2.Rows;
								Ac_Clear1=Ds_Objects.result.Tables.Table2.Rows;
								SearchUserList('Lst_SCRM',Ac_Clear1,'Ac_Clear1')				
								
							}
							if (Ds_Objects.result.Tables.Table3.Rows.length > 0)
							{
								Lst_DSARM.dataProvider=Ds_Objects.result.Tables.Table3.Rows;
								Ac_Clear2=Ds_Objects.result.Tables.Table3.Rows;
								SearchUserList('Lst_SCARM',Ac_Clear2,'Ac_Clear2')				
								
							}
							if (Ds_Objects.result.Tables.Table4.Rows.length > 0)
							{
								Lst_DSPM.dataProvider=Ds_Objects.result.Tables.Table4.Rows;
								Ac_Clear3=Ds_Objects.result.Tables.Table4.Rows;
								SearchUserList('Lst_SCPM',Ac_Clear3,'Ac_Clear3')				
								
							}
							if (Ds_Objects.result.Tables.Table5.Rows.length > 0)
							{
								Lst_DSOR.dataProvider=Ds_Objects.result.Tables.Table5.Rows;
								Ac_Clear4=Ds_Objects.result.Tables.Table5.Rows;
								SearchUserList('Lst_SCOR',Ac_Clear4,'Ac_Clear4')		
								
								
							}
							if (Ds_Objects.result.Tables.Table6.Rows.length > 0)
							{
								Lst_DSSAL.dataProvider=Ds_Objects.result.Tables.Table6.Rows;
								Ac_Clear5=Ds_Objects.result.Tables.Table6.Rows;
								SearchUserList('Lst_SCSAL',Ac_Clear5,'Ac_Clear5')		
							}	
							if (Ds_Objects.result.Tables.Table7.Rows.length > 0)
							{
								grd_Block._setGridSrc=Ds_Objects.result.Tables.Table7.Rows as ArrayCollection ;	
							}
						}
						if(Mode=="PropertyApartment")
						{
							BlockId=Ds_Objects.result.Tables.Table.Rows[0].BlockId;
							Ddl_BlockName.prompt=Ds_Objects.result.Tables.Table.Rows[0].BlockName;
							Txt_ApartmentName.text=Ds_Objects.result.Tables.Table.Rows[0].ApartmentName;
							Txt_ApartmentNo.text=Ds_Objects.result.Tables.Table.Rows[0].ApartmentNo;
							Ddl_ApartmentType.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].ApartmentType;
							Ddl_SellableApartmentType.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].SellableApartmentType;
							Ddl_OwnershipMode.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].OwnershipType;
							Txt_RackTariff.text=Ds_Objects.result.Tables.Table.Rows[0].RackTariff;
							Rdb_Per.selected=Ds_Objects.result.Tables.Table.Rows[0].DiscountModePer;
							Rdb_Rs.selected=Ds_Objects.result.Tables.Table.Rows[0].DiscountModeRS;
							Txt_MaxDiscountAllowed.text=Ds_Objects.result.Tables.Table.Rows[0].DiscountAllowed;
							Ddl_Status.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].Status;
							AparmentId=Ds_Objects.result.Tables.Table.Rows[0].Id;
						}
						if(Mode=="PropertyRoom")
						{
							RoomBlockId=Ds_Objects.result.Tables.Table.Rows[0].BlockId;
							Ddl_Block_RB.prompt=Ds_Objects.result.Tables.Table.Rows[0].BlockName;
							Ddl_Apartment_RB.prompt=Ds_Objects.result.Tables.Table.Rows[0].ApartmentNo;
							RoomApartmentId=Ds_Objects.result.Tables.Table.Rows[0].ApartmentId;
							Ddl_RoomType_RB.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].RoomType;
							Ddl_RoomCategory_RB.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].RoomCategory;							
							Txt_RackTariff_RB.text=Ds_Objects.result.Tables.Table.Rows[0].RackTariff;
							Txt_DoubleTariff_RB.text=Ds_Objects.result.Tables.Table.Rows[0].DoubleOccupancyTariff;
							Rdb_Per_RB.selected=Ds_Objects.result.Tables.Table.Rows[0].DiscountModePer;
							Rdb_Rs_RB.selected=Ds_Objects.result.Tables.Table.Rows[0].DiscountModeRS;
							Txt_MaxDiscount_RB.text=Ds_Objects.result.Tables.Table.Rows[0].DiscountAllowed;
							RoomBedId=Ds_Objects.result.Tables.Table.Rows[0].Id;
							Txt_RoomNo_RB.text=Ds_Objects.result.Tables.Table.Rows[0].RoomNo;
							DD_RoomsStatus.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].RoomStatus;
							Room_Types=0;
							//RoomApartmentId = Ddl_Apartment_RB.selectedItem.Id;
							if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
							{
								Grd_RoomBed._setGridSrc=Ds_Objects.result.Tables.Table1.Rows 
									as ArrayCollection ;	
							}
							else
							{
								Grd_RoomBed._clear();
							}						
							Ddl_RoomCategory_RB_changeHandler();
						}
						if(Mode=="PropertyOwners")
						{
							
							dd_Title.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].Title
							txt_FirstName.text=Ds_Objects.result.Tables.Table.Rows[0].FirstName
							txt_Lastname.text=Ds_Objects.result.Tables.Table.Rows[0].Lastname
							txt_LedgerName.text=Ds_Objects.result.Tables.Table.Rows[0].LedgerName
							txt_EmailId.text=Ds_Objects.result.Tables.Table.Rows[0].EmailID
							txt_Phone.text=Ds_Objects.result.Tables.Table.Rows[0].Phone
							txt_AlternatePhone.text=Ds_Objects.result.Tables.Table.Rows[0].Alternatephone
							txt_OwnerAddress.text=Ds_Objects.result.Tables.Table.Rows[0].Address
							txt_AccountNumber.text=Ds_Objects.result.Tables.Table.Rows[0].AccountNumber
							txt_IFSC.text=Ds_Objects.result.Tables.Table.Rows[0].IFSC
							txt_SWIFTCode.text=Ds_Objects.result.Tables.Table.Rows[0].SWIFTCode					
							//dd_OwnerState.prompt=Ds_Objects.result.Tables.Table.Rows[0].State;
							dd_OwnerState.text=Ds_Objects.result.Tables.Table.Rows[0].State;
							if(Ds_Objects.result.Tables.Table3.Rows.length > 0)
							{
								dd_OwnerCity.dataProvider=Ds_Objects.result.Tables.Table3.Rows as ArrayCollection;
							}	
							if(Ds_Objects.result.Tables.Table4.Rows.length > 0)
							{
								txt_LocalityArea.dataProvider=Ds_Objects.result.Tables.Table4.Rows as ArrayCollection;
							}
							dd_OwnerCity.text=Ds_Objects.result.Tables.Table.Rows[0].City;
							txt_LocalityArea.text=Ds_Objects.result.Tables.Table.Rows[0].LocalityArea
							//dd_OwnerCity.prompt=Ds_Objects.result.Tables.Table.Rows[0].City;
							//txt_LocalityArea.prompt=Ds_Objects.result.Tables.Table.Rows[0].LocalityArea
							txt_OwnerPostal.text=Ds_Objects.result.Tables.Table.Rows[0].Postal
							txt_TDSPer.text=Ds_Objects.result.Tables.Table.Rows[0].	TDSPer
							
							if(Ds_Objects.result.Tables.Table.Rows[0].PaymentMode==true)
							{
								Rdbg_Payment.selectedValue=1; 
							}
							else
							{
								Rdbg_Payment.selectedValue=0; 
							}
							//rd_Couriercheque.selected=true;
							//rd_DirectCredit.selected=false;			
							txt_PayeeName.text=Ds_Objects.result.Tables.Table.Rows[0].PayeeName
							txt_Bank.text=Ds_Objects.result.Tables.Table.Rows[0].Bank
							txt_BranchAddress.text=Ds_Objects.result.Tables.Table.Rows[0].BranchAddress
							dd_AccountType.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].AccountType
							OwnerId=Ds_Objects.result.Tables.Table.Rows[0].Id;
							PropertyId=Ds_Objects.result.Tables.Table.Rows[0].PropertyId;
							OwnerStateId=Ds_Objects.result.Tables.Table.Rows[0].StateId;
							OwnerCityId=Ds_Objects.result.Tables.Table.Rows[0].CityId;
							OwnerLocalityId=Ds_Objects.result.Tables.Table.Rows[0].LocalityId;
							txt_PAN.text=Ds_Objects.result.Tables.Table.Rows[0].PANNO;
							txt_TIN.text=Ds_Objects.result.Tables.Table.Rows[0].TIN
							txt_ST.text=Ds_Objects.result.Tables.Table.Rows[0].ST
							txt_VAT.text=Ds_Objects.result.Tables.Table.Rows[0].VAT
							if(Ds_Objects.result.Tables.Table2.Rows.length > 0)
							{
								
								Grd_ListApartments.dataProvider =Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
								myArrayCollection=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
								//ApartmentLoadFun(Apartment_AC);
							}
							if(Ds_Objects.result.Tables.Table1.Rows.length > 0)
							{
								
								var Temp_Apartment_AC:ArrayCollection= new ArrayCollection();
								Temp_Apartment_AC=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
								SetValueFrmCtrl(Temp_Apartment_AC);
							}
							if(Ds_Objects.result.Tables.Table5.Rows.length > 0)
							{
								Grd_OtherContacts._setGridSrc=Ds_Objects.result.Tables.Table5.Rows as ArrayCollection
							}
							
						}
						if(Mode=="PropertyAgreement")
						{
							dt_DateofAgreement.enabled=false;
							dt_RentalStartDate.enabled=false;
							dt_ExpiryDate.enabled=false;
							chk_Active.visible =true;
							dt_DateofAgreement.text=Ds_Objects.result.Tables.Table.Rows[0].DateOfAgreement;
							dt_RentalStartDate.text=Ds_Objects.result.Tables.Table.Rows[0].RentalStartDate;
							txt_NoticePeriod.text=Ds_Objects.result.Tables.Table.Rows[0].NoticePeriod;
							txt_LockPeriod.text=Ds_Objects.result.Tables.Table.Rows[0].LockInPeriod;
							txt_StartingRental.text=Ds_Objects.result.Tables.Table.Rows[0].StartingRentalMonth;
							dt_ExpiryDate.text=Ds_Objects.result.Tables.Table.Rows[0].ExpiryDate;
							dd_RentalType.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].RentalType;  	
							txt_Tenure.text=Ds_Objects.result.Tables.Table.Rows[0].Tenure;
							dd_MaintenanceType.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].MaintenanceType
							chk_Rentinclusive.selected=Ds_Objects.result.Tables.Table.Rows[0].RentInclusive;
							AgreementId=Ds_Objects.result.Tables.Table.Rows[0].Id;
							dt_MaintenanceStartdate.text=Ds_Objects.result.Tables.Table.Rows[0].StartingMaintenanceMonth;
							txt_MaintenanceAmount.text=Ds_Objects.result.Tables.Table.Rows[0].MaintenanceAmount;
							hlp_AssociationName.text=Ds_Objects.result.Tables.Table.Rows[0].AssociationName;
							dd_Apartment.prompt=Ds_Objects.result.Tables.Table.Rows[0].ApartmentName;
							AgreementApartmentName=Ds_Objects.result.Tables.Table.Rows[0].ApartmentName;
							AgreementApartmentId=Ds_Objects.result.Tables.Table.Rows[0].ApartmentId;
							dd_Paid.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].Paid;
							txt_AdvanceAmount.text=Ds_Objects.result.Tables.Table.Rows[0].AdvanceAmount;
							dd_AdvanceType.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].AdvanceType;
							txt_bank.text=Ds_Objects.result.Tables.Table.Rows[0].Bank;
							txt_ChqNo.text=Ds_Objects.result.Tables.Table.Rows[0].ChqNeft;
							dt_AdvanceDate.text=Ds_Objects.result.Tables.Table.Rows[0].AdvanceDate;
							chk_Active.selected=Ds_Objects.result.Tables.Table.Rows[0].Status;
							chk_TAC.selected=Ds_Objects.result.Tables.Table.Rows[0].TAC;
							txt_TACPer.text=Ds_Objects.result.Tables.Table.Rows[0].TACPer;
//							chk_Luxury.selected=Ds_Objects.result.Tables.Table.Rows[0].Checks;
//							checkbox_changeHandler();
//							if(chk_Luxury.selected==true)
//							{
//								RB_Rack.selected=Ds_Objects.result.Tables.Table.Rows[0].Flag;
//								if(RB_Rack.selected=0)
//								{
//									RB_Rack.selected==true;
//									Txt_Tariff.text=Ds_Objects.result.Tables.Table.Rows[0].Tariff;
//								}
//								else(RB_Agreed.selected=1)
//								{
//									RB_Agreed.selected==true;
//									Txt_Tariff.text=Ds_Objects.result.Tables.Table.Rows[0].Tariff; 
//								}
//							}
							checkbox1_changeHandler();
							
							if(chk_Active.selected == true)
							{
							 chk_Active.visible =true;
							 chk_Active.selected == true;
							 chk_Active.enabled =true; 
							}
							else
							{ chk_Active.visible =true;
								chk_Active.selected == false;
								chk_Active.enabled =false; 
							}
							if(Ds_Objects.result.Tables.Table1.Rows.length > 0)
							{
								Grd_Agreement.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
							}
							if(Ds_Objects.result.Tables.Table2.Rows.length > 0)
							{
								Grd_Owner.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
							}	
							if(Ds_Objects.result.Tables.Table3.Rows.length > 0)
							{
								Grd_AgreementRoomDetails._setGridSrc=Ds_Objects.result.Tables.Table3.Rows as ArrayCollection;
							}
							
						}
						
					}
				}
				//Apartment Value Get
				if (Ds_Objects.currentTarget.description.toString() == "Block_CUSTOM")
				{
					Ddl_BlockName.dataProvider=null;
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Ddl_BlockName.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						Ddl_Block_RB.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
					Ddl_BlockName.prompt="Please Select Block";Ddl_Block_RB.prompt="Please Select Block";
				}
				if (Ds_Objects.currentTarget.description.toString() == "Apartment_ROOMBED_CUSTOM")
				{
					Ddl_Apartment_RB.dataProvider=null;
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Ddl_Apartment_RB.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
					Ddl_Apartment_RB.prompt="Please Select Apartmenrt";
				}
				if (Ds_Objects.currentTarget.description.toString() == "Owner_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						
						Grd_ListApartments.dataProvider =Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						myArrayCollection=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						//ApartmentLoadFun(Apartment_AC);
					}
					if(Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						txt_Bank.dataProvider= Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					}
					if(dd_Category.selectedItem!="Internal Property")
					{
						if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
						{	
							dd_Title.selectedItem=Ds_Objects.result.Tables.Table2.Rows[0].Title
							txt_FirstName.text=Ds_Objects.result.Tables.Table2.Rows[0].FirstName
							txt_Lastname.text=Ds_Objects.result.Tables.Table2.Rows[0].Lastname
							txt_LedgerName.text=Ds_Objects.result.Tables.Table2.Rows[0].LedgerName
							txt_EmailId.text=Ds_Objects.result.Tables.Table2.Rows[0].EmailID
							txt_Phone.text=Ds_Objects.result.Tables.Table2.Rows[0].Phone
							txt_AlternatePhone.text=Ds_Objects.result.Tables.Table2.Rows[0].Alternatephone
							txt_OwnerAddress.text=Ds_Objects.result.Tables.Table2.Rows[0].Address
							txt_AccountNumber.text=Ds_Objects.result.Tables.Table2.Rows[0].AccountNumber
							txt_IFSC.text=Ds_Objects.result.Tables.Table2.Rows[0].IFSC
							txt_SWIFTCode.text=Ds_Objects.result.Tables.Table2.Rows[0].SWIFTCode					
							//dd_OwnerState.prompt=Ds_Objects.result.Tables.Table2.Rows[0].State;
							dd_OwnerState.text=Ds_Objects.result.Tables.Table2.Rows[0].State;
							if(Ds_Objects.result.Tables.Table5.Rows.length > 0)
							{
								dd_OwnerCity.dataProvider=Ds_Objects.result.Tables.Table5.Rows as ArrayCollection;
							}
							if(Ds_Objects.result.Tables.Table6.Rows.length > 0)
							{
								txt_LocalityArea.dataProvider=Ds_Objects.result.Tables.Table6.Rows as ArrayCollection;
							}
							dd_OwnerCity.text=Ds_Objects.result.Tables.Table2.Rows[0].City;
							txt_LocalityArea.text=Ds_Objects.result.Tables.Table2.Rows[0].LocalityArea;
							//dd_OwnerCity.prompt=Ds_Objects.result.Tables.Table2.Rows[0].City;
							//txt_LocalityArea.prompt=Ds_Objects.result.Tables.Table2.Rows[0].LocalityArea
							txt_OwnerPostal.text=Ds_Objects.result.Tables.Table2.Rows[0].Postal
							txt_TDSPer.text=Ds_Objects.result.Tables.Table2.Rows[0].	TDSPer
							
							if(Ds_Objects.result.Tables.Table2.Rows[0].PaymentMode==true)
							{
								Rdbg_Payment.selectedValue=1; 
							}
							else
							{
								Rdbg_Payment.selectedValue=0; 
							}
							//rd_Couriercheque.selected=true;
							//rd_DirectCredit.selected=false;			
							txt_PayeeName.text=Ds_Objects.result.Tables.Table2.Rows[0].PayeeName
							txt_Bank.text=Ds_Objects.result.Tables.Table2.Rows[0].Bank
							txt_BranchAddress.text=Ds_Objects.result.Tables.Table2.Rows[0].BranchAddress
							dd_AccountType.selectedItem=Ds_Objects.result.Tables.Table2.Rows[0].AccountType
							OwnerId=Ds_Objects.result.Tables.Table2.Rows[0].Id;
							PropertyId=Ds_Objects.result.Tables.Table2.Rows[0].PropertyId;
							OwnerStateId=Ds_Objects.result.Tables.Table2.Rows[0].StateId;
							OwnerCityId=Ds_Objects.result.Tables.Table2.Rows[0].CityId;
							OwnerLocalityId=Ds_Objects.result.Tables.Table2.Rows[0].LocalityId;
							txt_PAN.text=Ds_Objects.result.Tables.Table2.Rows[0].PANNO;
							txt_TIN.text=Ds_Objects.result.Tables.Table2.Rows[0].TIN
							txt_ST.text=Ds_Objects.result.Tables.Table2.Rows[0].ST
							txt_VAT.text=Ds_Objects.result.Tables.Table2.Rows[0].VAT
							if(Ds_Objects.result.Tables.Table4.Rows.length > 0)
							{
								
								Grd_ListApartments.dataProvider =Ds_Objects.result.Tables.Table4.Rows as ArrayCollection;
								myArrayCollection=Ds_Objects.result.Tables.Table4.Rows as ArrayCollection;
								//ApartmentLoadFun(Apartment_AC);
							}
							if(Ds_Objects.result.Tables.Table3.Rows.length > 0)
							{
								
								var Temp_Apartment_AC:ArrayCollection= new ArrayCollection();
								Temp_Apartment_AC=Ds_Objects.result.Tables.Table3.Rows as ArrayCollection;
								SetValueFrmCtrl(Temp_Apartment_AC);
							}
							if(Ds_Objects.result.Tables.Table7.Rows.length > 0)
							{
								Grd_OtherContacts._setGridSrc=Ds_Objects.result.Tables.Table7.Rows as ArrayCollection
							}
						}
					}
					
					
				}
				if (Ds_Objects.currentTarget.description.toString() == "Agreement_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						
						dd_Apartment.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						
					}
					else
					{
						dd_Apartment.dataProvider=null;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "LastDate_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Grd_AgreementRoomDetails._setGridSrc=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;	
					}
					if(Ds_Objects.result.Tables.Table2.Rows.length > 0)
					{
						chk_TAC.selected=Ds_Objects.result.Tables.Table2.Rows[0].TAC;
						txt_TACPer.text=Ds_Objects.result.Tables.Table2.Rows[0].TACPer;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "AgreementDelete_CUSTOM")
					{
						alignAlert(Alert.show("Agreement Deactivated Successfully.","Message !",Alert.OK, 
							null, null, iconTickLarge, Alert.OK),10,"");
						Agreement_Clear();
					} 
//				if (Ds_Objects.currentTarget.description.toString() == "ADelete_CUSTOM")
//				{
//					alignAlert(Alert.show("Agreement Deleted Successfully.","Message !",Alert.OK, 
//						null, null, iconTickLarge, Alert.OK),10,"");
//					Agreement_Clear();
//				} 
				if (Ds_Objects.currentTarget.description.toString() == "ApartmentOwner_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						
						Grd_Owner.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						
					}
					else
					{
						Grd_Owner.dataProvider=null;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Managed_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						
						Grd_RoomsAndBedsHdr._setGridSrc=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						
					}
					else
					{
						var Temp_ACRoom:ArrayCollection=new ArrayCollection();
						Grd_RoomsAndBedsHdr._setGridSrc=Temp_ACRoom;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "ImageUpload_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						ImageCount=Ds_Objects.result.Tables.Table.Rows[0].CNT
						if(ImageCount !=0)
						{
							ImageCount=ImageCount+1;
						}
						if(Ds_Objects.result.Tables.Table1.Rows.length > 0)
						{
							Grd_Image.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
						}
						else
						{
							Grd_Image.dataProvider=null;
						}
						
						init();
						FilePath.text="";
						
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "ImageDelete_CUSTOM")
				{
					
					alignAlert(Alert.show("Deleted Successfully.","Message !",Alert.OK, null, null,iconTickLarge, Alert.OK),10,"");
					PropertyImageId=0;
					txt_ImageName.text="";
					FILE_URL="";
					FilePath.text="";
					//useWeb("Property","ImageUpload_CUSTOM",[GlobalXml,'ImageCount',PropertyId,0,"",'']);
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						ImageCount=Ds_Objects.result.Tables.Table.Rows[0].CNT
						if(ImageCount !=0)
						{
							ImageCount=ImageCount+1;
						}
						if(Ds_Objects.result.Tables.Table1.Rows.length > 0)
						{
							Grd_Image.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
						}
						else
						{
							Grd_Image.dataProvider=null;
						}
						
						init();
						FilePath.text="";
						
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Delete_NEWCUSTOM")
				{	
					alignAlert(Alert.show("Deleted Successfully",null,Alert.OK, null, null,iconTickLarge, Alert.OK),10,"");
					//Clear();	
				}	
				
			}
			
			//Owner Apartment Load
			private function ApartmentLoadFun(TempApartment_AC:ArrayCollection):void
			{
//				grp_loadApartment.removeAllElements();
//				var Y:int=0;
//				for(var s:int=0;s<TempApartment_AC.length;s++)
//				{
//					var Obj:CheckBox=new CheckBox();
//					Obj.id=TempApartment_AC[s].Id+","+TempApartment_AC[s].ApartmentId;
//					Obj.label=	TempApartment_AC[s].ApartmentName;
//					Obj.y=Y
//					grp_loadApartment.addElement(Obj as CheckBox)
//						Y=Y+20;
//				}
			}
			public function FnChkChange(event:Event):void
			{
				
				var Ac:ArrayCollection=new ArrayCollection();				
				Ac=Grd_ListApartments.dataProvider as ArrayCollection;				
				var Index:int=Grd_ListApartments.selectedIndex;				
				if(Ac[Index].Tick==0)
				{
					Ac[Index].Tick=1;
				}
				else
				{
					Ac[Index].Tick=0;
				}
			}
			//Property Start
			private function SearchUserList(ScLst:String,tempAC:ArrayCollection,ArrName:String):void
			{
				var SCtemp_AC:ArrayCollection=new ArrayCollection();
				SCtemp_AC=this[ScLst].dataProvider
				for(var i:int=0;i<tempAC.length;i++)
				{
					for(var j:int=0;j<SCtemp_AC.length;j++)
					{
						if(tempAC[i].UserId==SCtemp_AC[j].UserId)
						{
							SCtemp_AC.removeItemAt(j);						}
					}
				}
				this[ArrName]=SCtemp_AC;
				this[ScLst].dataProvider=this[ArrName];
			}
			protected function Btn_LstSingle_clickHandler(SClist:String,DSlist:String):void
			{
				Ac_SelectedItems = new ArrayCollection();Ac_SelectedIndices = new ArrayCollection();
				Ac_First = new ArrayCollection();Ac_Second = new ArrayCollection();
				Ac_Clear=new ArrayCollection();
				Len_selectedItems = 0;Len_SelectedIndices=0;
				
				//Ac_SelectedItems.addItem(Lst_SCOM.selectedItems);
				Ac_SelectedItems.addItem(this[SClist].selectedItems);
				
				//Ac_SelectedIndices.addItem(Lst_SCOM.selectedIndices);
				Ac_SelectedIndices.addItem(this[SClist].selectedIndices);
				
				//Len_selectedItems = Lst_SCOM.selectedItems.length;
				Len_selectedItems = this[SClist].selectedItems.length;
				
				Len_SelectedIndices = this[SClist].selectedItems.length;
				
				Ac_First=this[SClist].dataProvider as ArrayCollection;
				Ac_Second=this[DSlist].dataProvider as ArrayCollection;
				var tempA_C:ArrayCollection= new ArrayCollection();
				for(var i:int=0;i<Len_selectedItems;i++)
				{
					if((Ac_Second.length==0)||(Ac_Second==null))
					{
						Ac_Second.addItem({label:Ac_SelectedItems[0][i].label,Id:Ac_SelectedItems[0][i].Id,UserId:Ac_SelectedItems[0][i].UserId,UserType:Ac_SelectedItems[0][i].UserType});
					}
					else
					{
						Ac_Second.addItemAt({label:Ac_SelectedItems[0][i].label,Id:Ac_SelectedItems[0][i].Id,UserId:Ac_SelectedItems[0][i].UserId,UserType:Ac_SelectedItems[0][i].UserType},
							Ac_Second.length);
					}
					
					tempA_C.addItemAt({UserId:Ac_SelectedItems[0][i].UserId},tempA_C.length);
				}
				for(var j:int=0;j<tempA_C.length;j++)
				{
					for(var s:int=0;s<Ac_First.length;s++)
					{
						if(Ac_First[s].UserId==tempA_C[j].UserId)
						{
							Ac_First.removeItemAt(s);
							s=0;
						}
						
					}				
				}
				this[SClist].dataProvider=Ac_Clear;this[SClist].dataProvider=Ac_Clear;
				this[SClist].dataProvider=Ac_First;this[DSlist].dataProvider=Ac_Second;	
			}
			
			protected function Btn_Lst1Single_clickHandler(SClist:String,DSlist:String):void
			{
				Ac_SelectedItems = new ArrayCollection();Ac_SelectedIndices = new ArrayCollection();
				Ac_First = new ArrayCollection();Ac_Second = new ArrayCollection();
				Ac_Clear=new ArrayCollection();
				Len_selectedItems = 0;Len_SelectedIndices=0;
				Ac_SelectedItems.addItem(this[DSlist].selectedItems);
				Ac_SelectedIndices.addItem(this[DSlist].selectedIndices);
				Len_selectedItems = this[DSlist].selectedItems.length;
				Len_SelectedIndices = this[DSlist].selectedItems.length;
				Ac_First=this[DSlist].dataProvider as ArrayCollection;
				Ac_Second=this[SClist].dataProvider as ArrayCollection;
				var tempA_C:ArrayCollection= new ArrayCollection();
				for(var i:int=0;i<Len_selectedItems;i++)
				{
					if((Ac_Second.length==0)||(Ac_Second==null))
					{
						Ac_Second.addItem({label:Ac_SelectedItems[0][i].label,Id:Ac_SelectedItems[0][i].Id,UserId:Ac_SelectedItems[0][i].UserId,UserType:Ac_SelectedItems[0][i].UserType});
					}
					else
					{
						Ac_Second.addItemAt({label:Ac_SelectedItems[0][i].label,Id:Ac_SelectedItems[0][i].Id,UserId:Ac_SelectedItems[0][i].UserId,UserType:Ac_SelectedItems[0][i].UserType},
							Ac_Second.length);
					}
					tempA_C.addItemAt({UserId:Ac_SelectedItems[0][i].UserId},tempA_C.length);
				}
				for(var j:int=0;j<tempA_C.length;j++)
				{
					for(var s:int=0;s<Ac_First.length;s++)
					{
						if(Ac_First[s].UserId==tempA_C[j].UserId)
						{
							if(Ac_First[s].Id!=0)
							{
								useWeb("Property","UserDelete_CUSTOM",[GlobalXml,'UserDelete',Ac_First[s].Id,0,'','']);
							}							
							Ac_First.removeItemAt(s);
							s=0;
						}
						
					}
				}
				this[DSlist].dataProvider=Ac_Clear;this[SClist].dataProvider=Ac_Clear;
				this[DSlist].dataProvider=Ac_First;this[SClist].dataProvider=Ac_Second;			
			}			
			
//			public function Custom_Grid_Delete(index:int,arrGrid:ArrayCollection,GrdId:String):void
//			{              
//				if(arrGrid[index].Id!="")
//				{												
//					useWeb("Property","Delete_NEWCUSTOM",[GlobalXml,"AGGREMENTDELETE",0,arrGrid[index].Id]);
//				}
//			}
			protected function Btn_LstAll_clickHandler(SClist:String,DSlist:String):void
			{
				Ac_First = new ArrayCollection();Ac_Second = new ArrayCollection();
				Ac_Clear=new ArrayCollection();
				Ac_First = this[SClist].dataProvider as ArrayCollection;
				Ac_Second = this[DSlist].dataProvider as ArrayCollection;
				if(Ac_Second.length==0)
				{
					this[DSlist].dataProvider=Ac_First;
				}
				else
				{
					for(var i:int=0;i<Ac_First.length;i++)
					{
						if((Ac_Second.length==0)||(Ac_Second==null))
						{
							Ac_Second.addItem({label:Ac_First[i].label,Id:Ac_First[i].Id,UserId:Ac_First[i].UserId,UserType:Ac_First[i].UserType});
						}
						else
						{
							Ac_Second.addItemAt({label:Ac_First[i].label,Id:Ac_First[i].Id,UserId:Ac_First[i].UserId,UserType:Ac_First[i].UserType},
								Ac_Second.length);
						}
					}
					this[DSlist].dataProvider=Ac_Second;
				}
				this[SClist].dataProvider=null;this[SClist].dataProvider=Ac_Clear;
			}
			
			protected function Btn_Lst1All_clickHandler(SClist:String,DSlist:String):void
			{
				Ac_First = new ArrayCollection();Ac_Second = new ArrayCollection();
				Ac_Clear=new ArrayCollection();
				Ac_First = this[DSlist].dataProvider as ArrayCollection;
				Ac_Second = this[SClist].dataProvider as ArrayCollection;
				if(Ac_Second.length==0)
				{
					this[SClist].dataProvider=Ac_First;
					for(var i:int=0;i<Ac_First.length;i++)
					{
						if(Ac_First[i].Id!=0)
						{
							useWeb("Property","UserDelete_CUSTOM",[GlobalXml,'UserDelete',Ac_First[i].Id,0,'','']);
						}
					}
					
				}
				else
				{
					for(var i:int=0;i<Ac_First.length;i++)
					{
						if(Ac_First[i].Id!=0)
						{
							useWeb("Property","UserDelete_CUSTOM",[GlobalXml,'UserDelete',Ac_First[i].Id,0,'','']);
						}
						if((Ac_Second.length==0)||(Ac_Second==null))
						{
							Ac_Second.addItem({label:Ac_First[i].label,Id:Ac_First[i].Id,UserId:Ac_First[i].UserId,UserType:Ac_First[i].UserType});
						}
						else
						{
							Ac_Second.addItemAt({label:Ac_First[i].label,Id:Ac_First[i].Id,UserId:Ac_First[i].UserId,UserType:Ac_First[i].UserType},
								Ac_Second.length);
						}
					}
					this[SClist].dataProvider=Ac_Second;
				}
				this[DSlist].dataProvider=null;this[DSlist].dataProvider=Ac_Clear;
			}
			private function CloseUserPOP():void
			{
				POSOut.play();
			}
			private function OpenUserPOP():void
			{
				POSIn.play();
			}
			private function ProprertyValidation():String
			{
				var flag:Boolean=true;
				ErrString="";
				if(txt_PropertyName.text=="")
				{
					if(flag==true)
					{
						txt_PropertyName.setFocus();
						flag=false;
						
					}
					ErrString=ErrString+"* PropertyName is Required.\n";
				}
				if(txt_PropertyCode.text=="")
				{
					if(flag==true)
					{
						txt_PropertyCode.setFocus();
						flag=false;
						
					}
					ErrString=ErrString+"* PropertyCode is Required.\n";
				}
				if(dd_Category.selectedItem!="Managed G H")
				{
					if(TypeId==0)
					//if(dd_Type.selectedItem=="Please Select Type")
					{
						if(flag==true)
						{
							dd_Type.setFocus();
							flag=false;
							
						}
						ErrString=ErrString+"* Type is Required.\n";
					}
				}				
				if(dd_Category.selectedItem=="Please Select Category")
				{
					if(flag==true)
					{
						dd_Category.setFocus();
						flag=false;
						
					}
					ErrString=ErrString+"* Category is Required.\n";
				}
				if(StateId==0)
				{
					if(flag==true)
					{
						dd_State.setFocus();
						flag=false;
						
					}
					ErrString=ErrString+"* State is Required.\n";
				}
				if(CityId==0)
				{
					if(flag==true)
					{
						dd_City.setFocus();
						flag=false;
						
					}
					ErrString=ErrString+"* City is Required.\n";
				}
				//if(Hlp_Locality.text="")
				if(LocalityId==0)
				{
					if(flag==true)
					{
						Hlp_Locality.setFocus();
						flag=false;
						
					}
					ErrString=ErrString+"* Locality is Required.\n";
				}
				if(txt_PropertyDescription.text=="")
				{
					if(flag==true)
					{
						txt_PropertyDescription.setFocus();
						flag=false;
						
					}
					ErrString=ErrString+"* Property Description is Required.\n";
				}
				if(txt_Address.text=="")
				{
					if(flag==true)
					{
						txt_Address.setFocus();
						flag=false;
						
					}
					ErrString=ErrString+"* Address is Required.\n";
				}
				if(txt_DiretionsLandmarks.text=="")
				{
					if(flag==true)
					{
						txt_DiretionsLandmarks.setFocus();
						flag=false;
						
					}
					ErrString=ErrString+"* Diretions/Landmarks is Required.\n";
				}
				if(txt_ContactNumbers.text=="")
				{
					if(flag==true)
					{
						txt_ContactNumbers.setFocus();
						flag=false;
						
					}
					ErrString=ErrString+"* Contact Numbers is Required.\n";
				}
				if(txt_PostalCode.text=="")
				{
					if(flag==true)
					{
						txt_PostalCode.setFocus();
						flag=false;
						
					}
					ErrString=ErrString+"* PostalCode is Required.\n";
				}
				if((dd_Category.selectedItem!="External Property")&&(dd_Category.selectedItem!="Client Prefered")&&(dd_Category.selectedItem!="Other Hotels"))
				{
					if((grd_Block._getGridSrc==null)||(grd_Block._getGridSrc.length==0))
					{
						if(flag==true)
						{
							grd_Block._setFocus(0);
							flag=false;
							
						}
						ErrString=ErrString+"* Block Details are Required.\n";
					}
				}
				else
				{
					
				}
				
				var tempList_AC1:ArrayCollection= new ArrayCollection();
				tempList_AC1=Lst_DSOM.dataProvider as ArrayCollection
					var flag_AC:Boolean=false;
					if(tempList_AC1.length==0)
					{					
							flag_AC=false											
					}
					else
					{						
							flag_AC=true
						
					}
					tempList_AC1=Lst_DSRM.dataProvider as ArrayCollection
					if(tempList_AC1.length==0)
					{
						if(flag_AC!=true)
						{
							flag_AC=false
						}
												
					}
					else
					{
							flag_AC=true
						
					}
					tempList_AC1=Lst_DSARM.dataProvider as ArrayCollection
					if(tempList_AC1.length==0)
					{
						if(flag_AC!=true)
						{
							flag_AC=false
						}						
					}
					else
					{
							flag_AC=true
					}
					tempList_AC1=Lst_DSPM.dataProvider as ArrayCollection
					if(tempList_AC1.length==0)
					{
						if(flag_AC!=true)
						{
							flag_AC=false
						}						
					}
					else
					{
						
							flag_AC=true
						
					}
					tempList_AC1=Lst_DSOR.dataProvider as ArrayCollection
					if(tempList_AC1.length==0)
					{
						if(flag_AC!=true)
						{
							flag_AC=false
						}						
					}
					else
					{
							flag_AC=true
						
					}
					tempList_AC1=Lst_DSSAL.dataProvider as ArrayCollection
					if(tempList_AC1.length==0)
					{
						if(flag_AC!=true)
						{
							flag_AC=false
						}						
					}
					else
					{
							flag_AC=true					
					}							
					if(flag_AC==false)
					{
						ErrString=ErrString+"* Property Users are Required.\n";
					}
				
				return ErrString;
			}
			private function PropertyClear():void
			{
				CopyId=0;
				CopyFlag=false;
				PYOut.play();
				Btn_Copy.visible=false;
				Btn_Copy.width=-5; 
				SaveCl_Property.setButtonRights("Delete",true);
				txt_PropertyName.text="";
				txt_PropertyCode.text="";				
				dd_Category.selectedItem="Please Select Category";
				dd_Type.prompt="Please Select Type";
				//dd_Type.selectedItem="Please Select Type";
				//dd_State.selectedItem="";
				//dd_City.selectedItem="";
				dd_State.text="";
				dd_City.text="";
				Hlp_Locality.text="";
				dd_City.dataProvider=null;
				//dd_Locality.dataProvider=null;
				//dd_Locality.selectedItem="";
				//dd_State.prompt="Please Select State"
				//dd_City.prompt="Please Select City"
				//Hlp_Locality.prompt="Please Select Locality"
				//dd_Locality.prompt="Please Select Locality"
				var Ac:ArrayCollection=new ArrayCollection();
				Hlp_Locality.dataProvider=Ac;
				//Hlp_Locality.fnClear();
				txt_PropertyDescription.text="";
				txt_Address.text="";
				txt_DiretionsLandmarks.text="";
				txt_ContactNumbers.text="";
				txt_PostalCode.text="";
				txt_LatitudeandLongitude.text="";
				txt_Keywords.text="";
				txt_Prefix.text="";
				txt_PropertyRackTarrifDouble.text="";
				txt_PropertyRackTarrif.text="";
				txt_Email.text="";
				chk_SwimPool.selected=false;
				chk_Pub.selected=false;
				chk_Gym.selected=false;
				chk_Restaurant.selected=false;
				chk_ConferenceHall.selected=false;
				chk_CyberCafe.selected=false;
				chk_Laundry.selected=false;
				chk_ShowOnWebsite.selected=false;
				//lbl_TotalNoRooms.visible=false;
				Brd_RackTraiffProperty.visible=false;
				//txt_TotalNoRooms.visible=false;
				//txt_PropertyRackTarrif.visible=false;
				//txt_PropertyRackTarrif.text="";
				//lbl_PropertyRackTarrif.visible=false;
				PropertyId=0
				dt_TodayDate.selectedDate= new Date();
				txt_TotalNoRooms.text="";
				txt_BookingPolicy.text="";
				txt_CancelPolicy.text="";
				Ac_Clear1=new ArrayCollection();
				Ac_Clear2=new ArrayCollection();
				Ac_Clear3=new ArrayCollection();
				Ac_Clear4=new ArrayCollection();
				Ac_Clear5=new ArrayCollection();
				
				grd_Block._Visible=true;
				lbl_BlockInfo.visible=true;
				
				Lst_DSOM.dataProvider=Ac_Clear;
				Lst_DSRM.dataProvider=Ac_Clear1;
				Lst_DSARM.dataProvider=Ac_Clear2;
				Lst_DSPM.dataProvider=Ac_Clear3;
				Lst_DSOR.dataProvider=Ac_Clear4;
				Lst_DSSAL.dataProvider=Ac_Clear5;
				grd_Block._clear();
				LocalityId=0;
				CityId=0;
				StateId=0;
				refresh()
				dd_CheckIn.prompt="12";
				dd_CheckInType.prompt="PM";
				dd_CheckOut.prompt="12";
				dd_CheckOutType.prompt="PM";
				dd_gracetime.prompt="0";
				bdr_Check.visible=false;
//				brdProperty.visible=true;
//				brdApartment.visible=true;
//				Bdr_RoomsBeds.visible=true;
//				brd_Owner.visible=true;
//				brd_Agreement.visible=true;
//				
//				brdProperty.width=100;
//				brdApartment.width=100;
//				Bdr_RoomsBeds.width=100;
//				brd_Owner.width=100;
//				brd_Agreement.width=100;
				
			}
			private function PropertySave():void
			{
				dd_Category.setFocus();
				
				ErrString=ProprertyValidation();
//				if(ErrMsg!="")
//				{
//					var Flag:Boolean=true;
//					if(Flag == true)
//					{
//						txt_email.setFocus();Flag=false;
//					}
//					ErrStr=ErrStr+Str_Email;	
//					return;
//				}
				if(ErrString!=="")
				{
					alignAlert(Alert.show(ErrString,"Requierd !",Alert.OK, null, null,iconErrLarge, Alert.OK),10,"");
					return;
				}
				var arrHdr1:ArrayCollection = new ArrayCollection
					([{
						PropertyName:txt_PropertyName.text,
						Code:txt_PropertyCode.text,
						Category:dd_Category.selectedItem,
						//State:dd_State.selectedItem.label,
						//City:dd_City.selectedItem.label,
						Localityarea:"",
						PropertDescription:txt_PropertyDescription.text,
						Propertaddress:txt_Address.text,
						Directions:txt_DiretionsLandmarks.text,
						Phone:txt_ContactNumbers.text,
						Postal:txt_PostalCode.text,
						LatitudeLongitude:txt_LatitudeandLongitude.text,
						Keyword:txt_Keywords.text,
						Prefix:txt_Prefix.text,
						ServicesSwimPool:chk_SwimPool.selected,
						ServicesPub:chk_Pub.selected,
						ServicesGym:chk_Gym.selected,
						ServicesRestaurant:chk_Restaurant.selected,
						ServicesConfHall:chk_ConferenceHall.selected,
						ServicesCyberCafe:chk_CyberCafe.selected,
						ServicesLaundry:chk_Laundry.selected,
						ShowOnWebsite:chk_ShowOnWebsite.selected,
						Id:PropertyId,
						Date:dt_TodayDate.text,
						LocalityId:LocalityId,
						CityId:CityId,
						StateId:StateId,
						TotalNoRooms:txt_TotalNoRooms.text,
						Type:TypeId,//dd_Type.selectedItem.data,
						PropertyRackTarrif:txt_PropertyRackTarrif.text,
						RackTarrifDouble:txt_PropertyRackTarrifDouble.text,
						BookingPolicy:txt_BookingPolicy.text,
						CancelPolicy:txt_CancelPolicy.text,
						CopyFlag:CopyFlag,
						CopyId:CopyId,
						Email:txt_Email.text,
						CheckIn:dd_CheckIn.selectedItem,
						CheckInType:dd_CheckInType.selectedItem,
						CheckOut:dd_CheckOut.selectedItem,
						CheckOutType:dd_CheckOutType.selectedItem,
						GraceTime:dd_gracetime.selectedItem						
					}]);				
				var tempList_AC:ArrayCollection= new ArrayCollection();
				var tempListSave_AC:ArrayCollection= new ArrayCollection();
				tempList_AC=Lst_DSOM.dataProvider as ArrayCollection
				for(var i:int=0;i<tempList_AC.length;i++)
				{
					tempListSave_AC.addItemAt({UserName:tempList_AC[i].label,UserId:tempList_AC[i].UserId,Id:tempList_AC[i].Id,UserType:tempList_AC[i].UserType},tempListSave_AC.length);
				}
				tempList_AC=Lst_DSRM.dataProvider as ArrayCollection
				for(var i:int=0;i<tempList_AC.length;i++)
				{
					tempListSave_AC.addItemAt({UserName:tempList_AC[i].label,UserId:tempList_AC[i].UserId,Id:tempList_AC[i].Id,UserType:tempList_AC[i].UserType},tempListSave_AC.length);
				}
				tempList_AC=Lst_DSARM.dataProvider as ArrayCollection
				for(var i:int=0;i<tempList_AC.length;i++)
				{
					tempListSave_AC.addItemAt({UserName:tempList_AC[i].label,UserId:tempList_AC[i].UserId,Id:tempList_AC[i].Id,UserType:tempList_AC[i].UserType},tempListSave_AC.length);
				}
				tempList_AC=Lst_DSPM.dataProvider as ArrayCollection
				for(var i:int=0;i<tempList_AC.length;i++)
				{
					tempListSave_AC.addItemAt({UserName:tempList_AC[i].label,UserId:tempList_AC[i].UserId,Id:tempList_AC[i].Id,UserType:tempList_AC[i].UserType},tempListSave_AC.length);
				}
				tempList_AC=Lst_DSOR.dataProvider as ArrayCollection
				for(var i:int=0;i<tempList_AC.length;i++)
				{
					tempListSave_AC.addItemAt({UserName:tempList_AC[i].label,UserId:tempList_AC[i].UserId,Id:tempList_AC[i].Id,UserType:tempList_AC[i].UserType},tempListSave_AC.length);
				}
				tempList_AC=Lst_DSSAL.dataProvider as ArrayCollection
				for(var i:int=0;i<tempList_AC.length;i++)
				{
					tempListSave_AC.addItemAt({UserName:tempList_AC[i].label,UserId:tempList_AC[i].UserId,Id:tempList_AC[i].Id,UserType:tempList_AC[i].UserType},tempListSave_AC.length);
				}				
				var HdrXml1:String = ObjToXmlStr_Comm(arrHdr1,"HdrXml") 
				var GridXml:String ="";
				GridXml += "<ROOT>";
				GridXml += ObjToXmlStr_Comm(grd_Block._getGridSrc as ArrayCollection,"GridXml")
				GridXml += "</ROOT>";
				var GridXml2:String ="";
				GridXml2 += "<ROOT>";
				GridXml2 += ObjToXmlStr_Comm(tempListSave_AC,"GridXml")
				GridXml2 += "</ROOT>";
				//Mode="Property";
				useWeb("Property","Save_CUSTOM",[GlobalXml,HdrXml1,GridXml,GridXml2]);
				
				
			}
			protected function PropertySearch():void
			{			 
				chk_Active.visible =false;
				PopUpManager.addPopUp( SearchPopUp , this, true);
				SearchPopUp.Prc_name="Property"
				var SearchParam:Array =new Array();
				SearchPopUp.HlpIndex="SEARCH"
				SearchParam[0]=GlobalXml;
				SearchParam[1]=0;
				SearchParam[2]=0;	
			    SearchParam[3]="";	
				SearchPopUp.Prc_Param=SearchParam
				SearchPopUp.HlpSrchGlobal=""
				SearchPopUp.dataPanel.focusEnabled=true
				SearchPopUp.Pageint()					
				SearchPopUp.addEventListener("PopupEnter",funpopupEnter);
				SearchPopUp.addEventListener("PopupClose",funpopupClose);
				PopUpManager.centerPopUp(SearchPopUp);
			}
			
			private function funpopupClose(event:Event):void
			{
				
			}
			private function funpopupEnter(event:Event):void
			{				
				SearchDtls(SearchPopUp.SelectRow.Id,0);			
			}
			
			private function SearchDtls(Id:int,_PrdFk:int):void
			{
				//Mode="Property";
				var Load:Array =new Array();
				Load[0]=GlobalXml; Load[1]=Id;Load[2]=0;Load[3]="";    
				useWeb(Mode,"Search_CUSTOM",Load);
			}
			private function ChangeType():void
			{
				TypeId=dd_Type.selectedItem.data;
				Type=dd_Type.selectedItem.label;
				//useWeb("Property","City_CUSTOM",[GlobalXml,'Type',0,0,'','']);
			}
			
			private function ChangeState():void
			{
				CityMode="Property"
					StateId=dd_State.Select_Row.StateId;
					dd_City.text="";CityId=0;
				//StateId=dd_State.selectedItem.StateId
				useWeb("Property","City_CUSTOM",[GlobalXml,'City',0,StateId,'','']);
			}
			private function ChangeCity():void
			{
				CityId=dd_City.Select_Row.CityId;
				dd_City.text=dd_City.Select_Row.label;
				//CityId=dd_City.selectedItem.CityId;
				var Ac:ArrayCollection=new ArrayCollection();
				Hlp_Locality.text="";LocalityId=0;
				Hlp_Locality.dataProvider=Ac;//Hlp_Locality.fnClear();
				useWeb("Property","Locality_CUSTOM",[GlobalXml,'Locality',0,CityId,'','']);
			}
			private function ChangeLocality():void
			{
				LocalityId=Hlp_Locality.Select_Row.LocalityId;
				Hlp_Locality.text=Hlp_Locality.Select_Row.label;
					//LocalityId=Hlp_Locality.selectedItem.LocalityId;
					//Hlp_Locality.text=Hlp_Locality.Select_Row.Locality;
				
			}
			private function PropertyDelete():void
			{
				if(PropertyId == 0)
				{
					alignAlert(Alert.show("This is an Invalid Process.","Alert Message !",Alert.OK, 
						null, null,iconWarning, Alert.OK),10,'');					
					return;
				}	
				alignAlert(Alert.show("Do you want to delete this item?", "Warning",Alert.YES | Alert.NO, null,
					DeleteProp, iconWarning, Alert.NO),10,"");		
			}
			private function DeleteProp(event:CloseEvent):void 
			{	
				if (event.detail==Alert.YES) 
				{	
					var Load:Array = new Array();
					Load[0]= GlobalXml; Load[1]= PropertyId;Load[2]= "";Load[3]= 0;  
					useWeb("Property","Delete_CUSTOM",Load);
				}
			}
			public function Custom_Grid_Delete(index:int,arrGrid:ArrayCollection,GridId:String):void
			{
				if(arrGrid[index].Id!=0)
				{
					useWeb("Property","UserDelete_CUSTOM",[GlobalXml,'BlockDelete',arrGrid[index].Id,0,'','']);
					useWeb("Property","Delete_NEWCUSTOM",[GlobalXml,"ROOMSANDBEDSDELETE",arrGrid[index].Id,0,'','']);
					useWeb("PropertyAgreement","ADelete_CUSTOM",[GlobalXml,"AGGREMENTDELETE",arrGrid[index].Id,0,'','']);
				}
			}
			public function PropertyClick():void
			{
				GeneralPopMove()
				Mode="Property";
				SavCntl_Flag="PT";
				btn_Property.Button_B_mouseOverHandler();				
				btn_Apartment.Button_OutHandler();					
				Btn_RoomsBeds.Button_OutHandler();
				Btn_Owner.Button_OutHandler();
				Btn_Agreement.Button_OutHandler();
				
				Brd_RackTraiffProperty.visible=false;
				dd_Category.setFocus();
				brdProperty.visible=true;
				brdApartment.visible=false;
				Bdr_RoomsBeds.visible=false;
				brd_Owner.visible=false;
				brd_Agreement.visible=false;
				Btn_ImageUpload.Button_OutHandler();
				Brd_imageUpload.visible=false;
				CategoryChange(); 
//				lbl_TotalNoRooms.visible=false;
//				txt_TotalNoRooms.visible=false;
//				lbl_PropertyRackTarrif.visible=false;
//				txt_PropertyRackTarrif.visible=false;
			}
			//Apartment Start
			public function AparmentClick():void
			{		
				GeneralPopMove()
				if(PropertyId!=0)
				{
					Mode="PropertyApartment";
					SavCntl_Flag="AP";
					sav_Apartment.setButtonRights("Delete",true);
					sav_Apartment.setButtonRights("Clear",true);
					sav_Apartment.setButtonRights("Refresh",true);					
					brdProperty.visible=false;
					brdApartment.visible=true;
					Bdr_RoomsBeds.visible=false;
					brd_Owner.visible=false;
					brd_Agreement.visible=false;
					Rdb_Per.selected=true;
					Apartment_Clear();
					FnHelp_Block();
					btn_Apartment.Button_B_mouseOverHandler();
					btn_Property.Button_OutHandler();
					Btn_RoomsBeds.Button_OutHandler();
					Btn_Owner.Button_OutHandler();
					Btn_Agreement.Button_OutHandler();
					Btn_ImageUpload.Button_OutHandler();
					Brd_imageUpload.visible=false;
				}
				else
				{
					alignAlert(Alert.show("Please Create Property","Alert Message !",Alert.OK, 
						null, null,iconWarning, Alert.OK),10,'');
					btn_Property.Button_B_mouseOverHandler();
					btn_Apartment.Button_OutHandler();					
					Btn_RoomsBeds.Button_OutHandler();
					Btn_Owner.Button_OutHandler();
					Btn_Agreement.Button_OutHandler();
					Btn_ImageUpload.Button_OutHandler();
					
				}
			}			
			
			public function FnHelp_Block():void
			{
				useWeb("Property","Block_CUSTOM",[GlobalXml,'Block',PropertyId,0,'','']);				
				var arrParam:ArrayCollection = new ArrayCollection
					([
						{Action:GlobalXml,Param1:"Block",Param2:PropertyId,Param3:0,prcName:"Property",ctrlName:"hlpBlock",grdWidth:"100,0"},
						{Action:GlobalXml,Param1:"RoomType",Param2:PropertyId,Param3:0,prcName:"Property",ctrlName:"hlpRoomType",grdWidth:"100,0"},
						{Action:GlobalXml,Param1:"RoomCategory",Param2:PropertyId,Param3:0,prcName:"Property",ctrlName:"hlpRoomCategory",grdWidth:"100,0"}
					]);					
				Grd_RoomsAndBedsHdr._bindHlpTextData(arrParam);
				arrParam = null;
				if(dd_Category.selectedItem=="Managed G H")
				{
					useWeb("Property","Managed_CUSTOM",[GlobalXml,'Managed',PropertyId,0,'','']);	
				}
			}
			
			private function FnValidation_Apartment():String
			{
				ErrString="";var Flag:Boolean=true;
				if(BlockId==0)
				{
					Ddl_BlockName.setFocus();Flag=false;
					ErrString = ErrString + "*  Block Name is Required.\n";
				}
//				if(	Txt_ApartmentName.text=="")
//				{
//					if(Flag==true)
//					{
//						Txt_ApartmentName.setFocus();Flag=false;
//					}
//					ErrString=ErrString+"*  Apartment Name is Required.\n";
//				}
				if(	Txt_ApartmentNo.text=="")
				{
					if(Flag==true)
					{
						Txt_ApartmentNo.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  Apartment No is Required.\n";
				}
				if(Ddl_ApartmentType.selectedItem == "Please Select Apartment Type")
				{
					if(Flag==true)
					{
						Ddl_ApartmentType.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  Apartment Type is Required.\n";
				}
				if(Ddl_SellableApartmentType.selectedItem == "Please Select SellableApartment Type")
				{
					if(Flag==true)
					{
						Ddl_SellableApartmentType.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  Sellable Apartment Type is Required.\n";
				}
				if(	Txt_RackTariff.text=="")
				{
					if(Flag==true)
					{
						Txt_RackTariff.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  Rack Tariff is Required.\n";
				}
				if(	Txt_MaxDiscountAllowed.text=="")
				{
					if(Flag==true)
					{
						Txt_MaxDiscountAllowed.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  Max Discount Allowed is Required.\n";
				}
				return ErrString;
			}
			
			protected function Apartment_Save():void
			{
				ErrString=FnValidation_Apartment();	
				if(ErrString!=="")
				{
					alignAlert(Alert.show(ErrString,"Requierd Field(s) !",Alert.OK, null, null,iconErrLarge, Alert.OK),10,"");
					return;
				}
				var arrHdr1:ArrayCollection = new ArrayCollection
					([{
						BlockId:BlockId,BlockName:"",
						ApartmentName:Txt_ApartmentName.text,
						ApartmentNo:Txt_ApartmentNo.text,
						ApartmentType:Ddl_ApartmentType.selectedItem,
						SellableApartmentType:Ddl_SellableApartmentType.selectedItem,
						OwnershipType:Ddl_OwnershipMode.selectedItem,
						RackTariff:Txt_RackTariff.text,
						DiscountModePer:Rdb_Per.selected,
						DiscountModeRS:Rdb_Rs.selected,
						DiscountAllowed:Txt_MaxDiscountAllowed.text,
						Id:AparmentId,
						PropertyId:PropertyId,						
						Status:Ddl_Status.selectedItem
					}]);				
				//Mode="PropertyApartment";
				var HdrXml1:String = ObjToXmlStr_Comm(arrHdr1,"HdrXml");			
				useWeb("PropertyApartment","Save_CUSTOM",[GlobalXml,HdrXml1]);	
			}
			
			protected function Ddl_BlockName_changeHandler():void
			{
				BlockId=Ddl_BlockName.selectedItem.Id;
			}
			
			protected function Apartment_Clear():void
			{
				BlockId=0;Txt_ApartmentName.text="";Txt_MaxDiscountAllowed.text="";
				Txt_ApartmentNo.text="";Ddl_ApartmentType.selectedItem="Please Select Apartment Type";
				Ddl_SellableApartmentType.selectedItem="Please Select SellableApartment Type";
				Ddl_OwnershipMode.selectedItem="Please Select Ownership Mode";Txt_RackTariff.text="";
				Ddl_Status.selectedItem="Active";BlockId=0;AparmentId=0;FnHelp_Block();
			}
			
			protected function Apartment_Search():void
			{
				chk_Active.visible =false;
				SearchPopUp = new frmsearchwindow();
				PopUpManager.addPopUp( SearchPopUp , this, true);
				SearchPopUp.Prc_name="PropertyApartment"
				var SearchParam:Array =new Array();
				SearchPopUp.HlpIndex="SEARCH"
				SearchParam[0]=GlobalXml;
				SearchParam[1]=PropertyId;
				SearchParam[2]=0;	
				SearchParam[3]=""	
				SearchPopUp.Prc_Param=SearchParam
				SearchPopUp.HlpSrchGlobal=""
				SearchPopUp.dataPanel.focusEnabled=true
				SearchPopUp.Pageint()					
				SearchPopUp.addEventListener("PopupEnter",funpopupEnter1);
				SearchPopUp.addEventListener("PopupClose",funpopupClose1);
				PopUpManager.centerPopUp(SearchPopUp);
			}
			
			private function funpopupClose1(event:Event):void
			{
				
			}
			
			private function funpopupEnter1(event:Event):void
			{				
				SearchDtls1(SearchPopUp.SelectRow.Id,0);			
			}
			
			private function SearchDtls1(Id:int,_PrdFk:int):void
			{
				//Mode="PropertyApartment";
				var Load:Array =new Array();
				Load[0]=GlobalXml; Load[1]=PropertyId;Load[2]=Id;Load[3]="";    
				useWeb(Mode,"Search_CUSTOM",Load);
			}
			//Rooms and Beds start
			protected function FnRoomsBedsClk():void
			{
				GeneralPopMove();
				if(PropertyId!=0)
				{
					Mode="PropertyRoom";
					SavCntl_Flag="RB";
					sav_Rooms_Bed.setButtonRights("Delete",true);
					sav_Rooms_Bed.setButtonRights("Clear",true);
					sav_Rooms_Bed.setButtonRights("Refresh",true);		
					brdProperty.visible=false;brdApartment.visible=false;Bdr_RoomsBeds.visible=true;
					brd_Owner.visible=false;brd_Agreement.visible=false;
					Rdb_Per_RB.selected=true;RoomBed_Clear();
					FnHelp_Block();
					btn_Property.Button_OutHandler();
					btn_Apartment.Button_OutHandler();					
					Btn_RoomsBeds.Button_B_mouseOverHandler();
					Btn_Owner.Button_OutHandler();
					Btn_Agreement.Button_OutHandler();
					Btn_ImageUpload.Button_OutHandler();
					Brd_imageUpload.visible=false;
				}
				else
				{
					alignAlert(Alert.show("Please Create Property","Alert Message !",Alert.OK, 
						null, null,iconWarning, Alert.OK),10,'');					
					btn_Property.Button_B_mouseOverHandler();
					btn_Apartment.Button_OutHandler();					
					Btn_RoomsBeds.Button_OutHandler();
					Btn_Owner.Button_OutHandler();
					Btn_Agreement.Button_OutHandler();
					Btn_ImageUpload.Button_OutHandler();
					
				}
			}
			
			public function FnValidation_RoomBed():String
			{
				ErrString="";var Flag:Boolean=true;
				if(dd_Category.selectedItem!="Managed G H")
				{
					if(RoomBlockId==0)
					{
						Ddl_Block_RB.setFocus();Flag=false;
						ErrString = ErrString + "*  Block No is Required.\n";
					}
									
					if(Ddl_RoomType_RB.selectedItem=="Please Select Room Type")
					{
						if(Flag==true)
						{
							Ddl_RoomType_RB.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Room Type is Required.\n";
					}
					if(Txt_RoomNo_RB.text=="")
					{
						if(Flag==true)
						{
							Txt_RoomNo_RB.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Room No is Required.\n";
					}
			
					if(RoomApartmentId==0)
					{
						if(Flag==true)
						{
							Ddl_Apartment_RB.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Apartment No is Required.\n";
					}					
					if(Txt_RackTariff_RB.text=="")
					{
						if(Flag==true)
						{
							Txt_RackTariff_RB.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Rack Tariff is Required.\n";
					}
					if(Ddl_RoomCategory_RB.selectedItem=="Please Select Room Category")
					{
						if(Flag==true)
						{
							Ddl_RoomCategory_RB.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Room Category is Required.\n";
					}
				}
				else
				{
					if((Grd_RoomsAndBedsHdr._getGridSrc==null)||(Grd_RoomsAndBedsHdr._getGridSrc.length==0))
					{
						ErrString=ErrString+"*  Room Details are Required.\n";
						Grd_RoomsAndBedsHdr
					}
					
				}
				/*if(Txt_MaxDiscount_RB.text=="")
				{
				if(Flag==true)
				{
				Txt_MaxDiscount_RB.setFocus();Flag=false;
				}
				ErrString=ErrString+"*  Maximum Discount Allowed is Required.\n";
				}*/
				return ErrString;
			}
			
			protected function RoomBed_Clear():void
			{
				RoomBlockId=0;RoomApartmentId=0;Ddl_RoomCategory_RB.selectedItem="Please Select Room Category";
				Ddl_RoomType_RB.selectedItem="Please Select Room Type";Txt_RoomNo_RB.text="";
				Txt_RackTariff_RB.text="";Txt_DoubleTariff_RB.text="";Txt_MaxDiscount_RB.text="";
				Ddl_Apartment_RB.dataProvider=null;AparmentId=0;
				Ddl_Apartment_RB.prompt="Please Select Apartmenrt";
				Grd_RoomBed._clear();FnHelp_Block();RoomBedId=0;lbl_RoomCount.text="";
				Grd_RoomsAndBedsHdr._clear();
				DD_RoomsStatus.selectedIndex=0;
			}			
			protected function RoomBed_Save():void
			{
				ErrString=FnValidation_RoomBed();	
				if(ErrString!=="")
				{
					alignAlert(Alert.show(ErrString,"Requierd Field(s) !",Alert.OK, null, null,iconErrLarge, Alert.OK),10,"");
					return;
				}
				var Ac_RoomBed:ArrayCollection = new ArrayCollection
					([{
						BlockId:RoomBlockId,
						//BlockName:Ddl_Block_RB.selectedItem.label,
						//ApartmentNo:Ddl_Apartment_RB.selectedItem.label,
						ApartmentId:RoomApartmentId,
						RoomType:Ddl_RoomType_RB.selectedItem,RoomNo:Txt_RoomNo_RB.text,
						RackTariff:Txt_RackTariff_RB.text,
						DoubleOccupancyTariff:Txt_DoubleTariff_RB.text,						
						RoomCategory:Ddl_RoomCategory_RB.selectedItem,						
						DiscountModePer:Rdb_Per_RB.selected,
						DiscountModeRS:Rdb_Rs_RB.selected,
						DiscountAllowed:Number(Txt_MaxDiscount_RB.text),
						Id:RoomBedId,
						PropertyId:PropertyId,
						RoomStatus:DD_RoomsStatus.selectedItem
					}]);				
				//Mode="PropertyRoom";
				if(dd_Category.selectedItem!="Managed G H")
				{
					var HdrXml1:String="";
					HdrXml1 += "<ROOT>";
					HdrXml1 += ObjToXmlStr_Comm(Ac_RoomBed,"HdrXml");
					HdrXml1 += "</ROOT>";
				}
				else
				{
					var HdrXml1:String="";
					HdrXml1 += "<ROOT>";
					HdrXml1 += ObjToXmlStr_Comm(Grd_RoomsAndBedsHdr._getGridSrc as ArrayCollection,"HdrXml");
					HdrXml1 += "</ROOT>";
				}				
				var GridXml:String="";
				GridXml += "<ROOT>";
				GridXml += ObjToXmlStr_Comm(Grd_RoomBed._getGridSrc,"GridXml")
				GridXml += "</ROOT>";
				useWeb("PropertyRoom","Save_CUSTOM",[GlobalXml,HdrXml1,GridXml]);
			}
			
			protected function Ddl_Block_RB_changeHandler(event:IndexChangeEvent):void
			{
				RoomBlockId = Ddl_Block_RB.selectedItem.Id;
				useWeb("PropertyRoom","Apartment_ROOMBED_CUSTOM",[GlobalXml,'APARTMENT',PropertyId,RoomBlockId,'']);
			}
			
			protected function Ddl_Apartment_RB_changeHandler(event:IndexChangeEvent):void
			{
				Room_Types=0;
				RoomApartmentId = Ddl_Apartment_RB.selectedItem.Id;
				if(Ddl_Apartment_RB.selectedItem.SellableApartmentType=="1 BHK")
				{
					Room_Types=1;
					lbl_RoomCount.text="Pending Room Count : 1"
				}
				else if(Ddl_Apartment_RB.selectedItem.SellableApartmentType=="2 BHK")
				{
					Room_Types=2;
					lbl_RoomCount.text="Pending Room Count : 2"
				}
				else if(Ddl_Apartment_RB.selectedItem.SellableApartmentType=="3 BHK")
				{
					Room_Types=3;
					lbl_RoomCount.text="Pending Room Count : 3"
				}
				else if(Ddl_Apartment_RB.selectedItem.SellableApartmentType=="4 BHK")
				{
					Room_Types=4;
					lbl_RoomCount.text="Pending Room Count : 4"
				}
				else if(Ddl_Apartment_RB.selectedItem.SellableApartmentType=="HUB")
				{
					Room_Types=5;
					lbl_RoomCount.text=""
				}
				useWeb("PropertyRoom","SelectApartment_CUSTOM",[GlobalXml,'SelectApartment',PropertyId,RoomApartmentId,'']);
			}
			
			public function RoomBed_Search():void
			{
				chk_Active.visible =false;
				SearchPopUp = new frmsearchwindow();
				PopUpManager.addPopUp( SearchPopUp , this, true);
				SearchPopUp.Prc_name="PropertyRoom"
				var SearchParam:Array =new Array();
				SearchPopUp.HlpIndex="SEARCH"
				SearchParam[0]=GlobalXml;
				SearchParam[1]=PropertyId;
				SearchParam[2]=0;	
				SearchParam[3]=""	
				SearchPopUp.Prc_Param=SearchParam
				SearchPopUp.HlpSrchGlobal=""
				SearchPopUp.dataPanel.focusEnabled=true
				SearchPopUp.Pageint()					
				SearchPopUp.addEventListener("PopupEnter",funpopupEnter2);
				SearchPopUp.addEventListener("PopupClose",funpopupClose2);
				PopUpManager.centerPopUp(SearchPopUp);
			}
			
			private function funpopupClose2(event:Event):void
			{
				
			}
			
			private function funpopupEnter2(event:Event):void
			{				
				SearchDtls2(SearchPopUp.SelectRow.Id,0);			
			}
			
			private function SearchDtls2(Id:int,_PrdFk:int):void
			{
				//Mode="PropertyRoom";
				var Load:Array =new Array();
				Load[0]=GlobalXml; Load[1]=PropertyId;Load[2]=Id;Load[3]="";    
				useWeb(Mode,"Search_CUSTOM",Load);
			}
			private function CategoryChange():void
			{
				
				Brd_RackTraiffProperty.visible=false;
				btn_Apartment.visible=true;
				Btn_RoomsBeds.visible=true;
				Btn_Owner.visible=true;
				Btn_Agreement.visible=true;
				grd_Block._Visible=true;
				lbl_BlockInfo.visible=true;
				lbl_Type.visible=true;
				lbl_TypeStar.visible=true;
				dd_Type.visible=true;
				Brd_OwnerAddress.visible=true;
				Brd_OwnerExternalData.visible=false;
				Brd_ApartmentDetails.visible=true;
				Grd_RoomBed._Visible=true;
				ldl_BedInfo.visible=true;
				Brd_AgreementDetails1.visible=true;
				Brd_AgreementDetails2.visible=true;
				Brd_AgreementDetails3.visible=false;
				Btn_Agreement.width=120;
				btn_Apartment.width=120;
				Btn_RoomsBeds.width=120;
				Btn_Owner.width=120;				
				txt_PANNo.visible=false;
				lbl_PANNo.visible=false;
				//lbl_StarPanNo.visible=false;
				Brd_RoomsandBedsHdr.visible=false;
				chk_ListAp.label="List Of  Property";
				Col_Apartment.headerText="Property Name";
				FiltFirstName.prompt="Property Name";
				Btn_Agreement._Label="Agreement";
				Btn_Agreement.funlbl();	
				Brd_OwnerExternalData
				if(dd_Category.selectedItem=="Other Hotels")
				{	
					btn_Apartment.visible=false;
					Btn_RoomsBeds.visible=false;
					Btn_Owner.visible=false;
					Btn_Agreement.visible=false;
					Btn_Agreement.width=-6;
					btn_Apartment.width=-6;
					Btn_RoomsBeds.width=-6;
					Btn_Owner.width=-6;
					txt_TotalNoRooms.text="";
					txt_PropertyRackTarrif.text="";
					txt_Prefix.text="OH";
					grd_Block._Visible=false;
					lbl_BlockInfo.visible=false;
					Brd_RackTraiffProperty.visible=false;
				}
				else if (dd_Category.selectedItem=="Internal Property")
				{				
					btn_Apartment.visible=true;
					Btn_RoomsBeds.visible=true;
					btn_Apartment.width=120;
					Btn_RoomsBeds.width=120;
					txt_Prefix.text="INP";
					txt_TotalNoRooms.text="";
					txt_PropertyRackTarrif.text="";
					txt_PANNo.visible=true;
					lbl_PANNo.visible=true;
					//lbl_StarPanNo.visible=true;
					chk_ListAp.label="List Of Apartments";
					Col_Apartment.headerText="Apartment Name";
					FiltFirstName.prompt="Apartment Name";
					Brd_RackTraiffProperty.visible=false;
				}	
				else if(dd_Category.selectedItem=="Managed G H")
				{
					btn_Apartment.visible=false;					
					Btn_Owner.visible=false;
					Btn_Agreement.visible=false;
					btn_Apartment.width=-6;					
					Btn_Owner.width=-6;
					Btn_Agreement.width=-6;
					txt_Prefix.text="MGH";
					txt_TotalNoRooms.text="";
					txt_PropertyRackTarrif.text="";
					Brd_ApartmentDetails.visible=false;
					Grd_RoomBed._Visible=false;
					ldl_BedInfo.visible=false;					
					lbl_Type.visible=false;
					lbl_TypeStar.visible=false;
					dd_Type.visible=false;
					Brd_RoomsandBedsHdr.visible=true;
					Brd_RackTraiffProperty.visible=false;
					
				}
				else if(dd_Category.selectedItem=="External Property")
				{
					Brd_RackTraiffProperty.visible=true;
					btn_Apartment.visible=false;
					Btn_RoomsBeds.visible=false;
					btn_Apartment.width=-6;
					Btn_RoomsBeds.width=-6;
					txt_Prefix.text="EXP";
					grd_Block._Visible=false;
					lbl_BlockInfo.visible=false;
					Brd_OwnerAddress.visible=false;
					Brd_OwnerExternalData.visible=true;
					Brd_AgreementDetails1.visible=false;
					Brd_AgreementDetails2.visible=false;
					Brd_AgreementDetails3.visible=true;
					Btn_Agreement._Label="Tariff";
					Btn_Agreement.funlbl();
				}
				else if(dd_Category.selectedItem=="Client Prefered")
				{
					Brd_RackTraiffProperty.visible=false;					
					Btn_Agreement.visible=false;
					btn_Apartment.visible=false;
					Btn_RoomsBeds.visible=false;
					btn_Apartment.width=-6;
					Btn_RoomsBeds.width=-6;					
					Btn_Agreement.width=-6;
					txt_Prefix.text="CTP";
					grd_Block._Visible=false;
					lbl_BlockInfo.visible=false;
				}				
				else
				{
					Brd_RackTraiffProperty.visible=false;
				}
			}
			//Owner Start
			private function CourierChange():void
			{
				if(Rdbg_Payment.selectedValue==1)
				{
					
					Star_Bank.visible=false;
					Star_Acc.visible=false;
					Star_Type.visible=false;

				}
				else
				{
					Star_Bank.visible=true;
					Star_Acc.visible=true;
					Star_Type.visible=true;
				}
			}
			private function GeneralPopMove():void
			{
				POSOut.play();				
				MFOut.play();
				PYOut.play();
				ADOut.play();
			}
			private function OwnerClick():void
			{
				if(PropertyId!=0)
				{
					Mode="PropertyOwners";
					SavCntl_Flag="ON";
					GeneralPopMove();
					OwnerClear();					
					SavCnl_Owner.setButtonRights("Delete",true);
					SavCnl_Owner.setButtonRights("Clear",true);
					brdProperty.visible=false;brdApartment.visible=false;Bdr_RoomsBeds.visible=false;
					brd_Owner.visible=true;brd_Agreement.visible=false;
					//Help_Owner();
					btn_Property.Button_OutHandler();
					btn_Apartment.Button_OutHandler();					
					Btn_RoomsBeds.Button_OutHandler();
					Btn_Owner.Button_B_mouseOverHandler();
					Btn_Agreement.Button_OutHandler();
					Btn_ImageUpload.Button_OutHandler();
					Brd_imageUpload.visible=false;
				}
				else
				{
					alignAlert(Alert.show("Please Create Property","Alert Message !",Alert.OK, 
						null, null,iconWarning, Alert.OK),10,'');
					
					
					btn_Property.Button_B_mouseOverHandler();
					btn_Apartment.Button_OutHandler();					
					Btn_RoomsBeds.Button_OutHandler();
					Btn_Owner.Button_OutHandler();
					Btn_Agreement.Button_OutHandler();
					Btn_ImageUpload.Button_OutHandler();
				}
			}
			private function Help_Owner():void
			{
				useWeb("Property","Owner_CUSTOM",[GlobalXml,'Apartment',PropertyId,0,dd_Category.selectedItem,'']);
			}
			public var myArrayCollection:ArrayCollection=new ArrayCollection();
			public var FltNm:String="";
			private function filter(Filt:String):void
			{				
				FltNm=Filt;				
				var tempAC:ArrayCollection=new ArrayCollection();	
				tempAC=myArrayCollection
				tempAC.filterFunction = filterMyArrayCollection;
				tempAC.refresh();				
			}			
			private function filterMyArrayCollection(item:Object):Boolean 
			{
				var Itm:Boolean=true;				
				if(FiltFirstName.text!="")
				{
					var searchString:String = FiltFirstName.text.toLowerCase();
					var itemName:String = (item.ApartmentName as String).toLowerCase();
					Itm=itemName.indexOf(searchString) > -1;
				}				
				return Itm;		
			}
			private function OwnerValidation():String
			{
				ErrString="";var Flag:Boolean=true;
				var TempApart_AC:ArrayCollection=new ArrayCollection();
				if(dd_Title.selectedItem=="Please Select Title")
				{
					if(Flag==true)
					{
						dd_Title.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  Title is Required.\n";
				}
				if(txt_FirstName.text=="")
				{
					if(Flag==true)
					{
						txt_FirstName.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  First Name is Required.\n";
				}
				if(txt_Lastname.text=="")
				{
					if(Flag==true)
					{
						txt_Lastname.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  Last Name is Required.\n";
				}
				if(txt_LedgerName.text=="")
				{
					if(Flag==true)
					{
						txt_LedgerName.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  Ledger Name is Required.\n";
				}
				if(txt_Phone.text=="")
				{
					if(Flag==true)
					{
						txt_Phone.setFocus();Flag=false;
					}
					ErrString=ErrString+"* Phone is Required.\n";
				}
				if((dd_Category.selectedItem!="External Property"))
				{
									
					TempApart_AC=new ArrayCollection();
					Apartment_AC=new ArrayCollection();
					Apartment_AC=Grd_ListApartments.dataProvider as ArrayCollection;
					for(var i:int=0;i<Apartment_AC.length;i++)
					{
						if(Apartment_AC[i].Tick=="1")
						{
							TempApart_AC.addItemAt(Apartment_AC[i],TempApart_AC.length);
						}
					}	
					if((TempApart_AC==null)||(TempApart_AC.length==0))
					{
						ErrString=ErrString+"*  Apartments are Required.\n";
					}
					
					if(txt_OwnerAddress.text=="")
					{
						if(Flag==true)
						{
							txt_OwnerAddress.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Address is Required.\n";
					}
					if(OwnerStateId==0)
					{
						if(Flag==true)
						{
							dd_OwnerState.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  State is Required.\n";
					}				
					if(OwnerCityId==0)
					{
						if(Flag==true)
						{
							dd_OwnerCity.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  City is Required.\n";
					}
//					if(txt_LocalityArea.text=="")
//					{
//						if(Flag==true)
//						{
//							txt_LocalityArea._setFocus();Flag=false;
//						}
//						ErrString=ErrString+"*  Locality / Area is Required.\n";
//					}
					if(txt_OwnerPostal.text=="")
					{
						if(Flag==true)
						{
							txt_OwnerPostal.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Postal is Required.\n";
					}
				}
				else
				{
					TempApart_AC=new ArrayCollection();
					Apartment_AC=new ArrayCollection();
					Apartment_AC=Grd_ListApartments.dataProvider as ArrayCollection;
					for(var i:int=0;i<Apartment_AC.length;i++)
					{
						if(Apartment_AC[i].Tick=="1")
						{
							TempApart_AC.addItemAt(Apartment_AC[i],TempApart_AC.length);
						}
					}					
					if((TempApart_AC==null)||(TempApart_AC.length==0))
					{
						ErrString=ErrString+"*  Propertys are Required.\n";
					}
					
				}
							
				if(txt_IFSC.text=="")
				{
					if(Flag==true)
					{
						txt_IFSC.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  IFSC is Required.\n";
				}
				
				
				if(txt_PayeeName.text=="")
				{
					if(Flag==true)
					{
						txt_PayeeName.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  Payee Name is Required.\n";
				}
				
				if(Rdbg_Payment.selectedValue!=1)
				{
					if(txt_Bank.text=="")
					{
						if(Flag==true)
						{
							txt_Bank.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Bank is Required.\n";
					}
					if(txt_AccountNumber.text=="")
					{
						if(Flag==true)
						{
							txt_AccountNumber.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Account Number is Required.\n";
					}
					if(dd_AccountType.selectedItem=="Please Select Account Type")
					{
						if(Flag==true)
						{
							dd_AccountType.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Account Type is Required.\n";
					}
					
					
				}
				
				
								
				return ErrString;
			}
			private function OwnerSave():void
			{
				ErrString=OwnerValidation();	
				if(ErrString!=="")
				{
					alignAlert(Alert.show(ErrString,"Requierd Field(s) !",Alert.OK, null, null,iconErrLarge, Alert.OK),10,"");
					return;
				}
				var Ac_RoomBed:ArrayCollection = new ArrayCollection
					([{
						Title:dd_Title.selectedItem,
						FirstName:txt_FirstName.text,
						Lastname:txt_Lastname.text,
						LedgerName:txt_LedgerName.text,
						EmailId:txt_EmailId.text,
						Phone:txt_Phone.text,
						AlternatePhone:txt_AlternatePhone.text,
						OwnerAddress:txt_OwnerAddress.text,
						AccountNumber:txt_AccountNumber.text,
						IFSC:txt_IFSC.text,
						SWIFTCode:txt_SWIFTCode.text,						
						OwnerState:"",
						OwnerCity:"",
						LocalityArea:"",
						OwnerPostal:txt_OwnerPostal.text,
						TDSPer:txt_TDSPer.text,			
						//Couriercheque:rd_Couriercheque.selected,
						//DirectCredit:rd_DirectCredit.selected,
						PaymentMode:Boolean(Rdbg_Payment.selectedValue),
						PayeeName:txt_PayeeName.text,
						Bank:txt_Bank.text,
						BranchAddress:txt_BranchAddress.text,
						AccountType:dd_AccountType.selectedItem,
						Id:OwnerId,
						PropertyId:PropertyId,
						OwnerCityId:OwnerCityId,
						OwnerStateId:OwnerStateId,
						OwnerLocalityId:OwnerLocalityId,
						PAN:txt_PAN.text,
						TIN:txt_TIN.text,
						ST:txt_ST.text,
						VAT:txt_VAT.text,
						RackRates:0
					}]);				
				//Mode="Owner";
				var HdrXml1:String = ObjToXmlStr_Comm(Ac_RoomBed,"HdrXml");
				Apartment_AC=new ArrayCollection();
				var Apartment_AC1:ArrayCollection=new ArrayCollection();
				Apartment_AC=Grd_ListApartments.dataProvider as ArrayCollection; 
				for(var i:int=0;i<Apartment_AC.length;i++)
				{
					if(Apartment_AC[i].Tick=="1")
					{
						Apartment_AC1.addItemAt(Apartment_AC[i],Apartment_AC1.length);
					}
				}
				var GridXml:String="";				
				GridXml += "<ROOT>";
				GridXml += ObjToXmlStr_Comm(Apartment_AC1,"GridXml")
				GridXml += "</ROOT>";
				var GridXml1:String="";				
				GridXml1 += "<ROOT>";
				GridXml1 += ObjToXmlStr_Comm(Grd_OtherContacts._getGridSrc,"GridXml")
				GridXml1 += "</ROOT>";
				
				//PropertyRoom
				useWeb("PropertyOwners","Save_CUSTOM",[GlobalXml,HdrXml1,GridXml,GridXml1]);
			}
			private function OwnerClear():void
			{
				    Help_Owner();
					Grd_OtherContacts._clear();
					dd_Title.selectedItem="Please Select Title",
					txt_FirstName.text=""
					txt_Lastname.text=""
					txt_LedgerName.text=""
					txt_EmailId.text=""
					txt_Phone.text=""
					txt_AlternatePhone.text=""
					txt_OwnerAddress.text=""
				    txt_AccountNumber.text=""
					txt_IFSC.text=""
					txt_SWIFTCode.text=""	
					dd_OwnerState.text="";//dd_OwnerState.selectedItem="";
					dd_OwnerCity.text="";//dd_OwnerCity.selectedItem="";
					txt_LocalityArea.text="";//txt_LocalityArea.selectedItem="";
					//dd_OwnerState.prompt="Please Select State";
					//dd_OwnerCity.prompt="Please Select City";
					//txt_LocalityArea.prompt="Please Select Locality";
					txt_OwnerPostal.text=""
					txt_TDSPer.text=""	
					//rd_Couriercheque.selected=true;
					//rd_DirectCredit.selected=false;			
					txt_PayeeName.text=""
					txt_Bank.text=""
					txt_BranchAddress.text=""
					dd_AccountType.selectedItem="Please Select Account Type";
					OwnerId=0;					
					OwnerStateId=0;
					OwnerCityId=0;
					OwnerLocalityId=0;
					txt_PAN.text="";
					txt_TIN.text=""
					txt_ST.text=""
					txt_VAT.text=""
					//grp_loadApartment.removeAllElements();
					Grd_ListApartments.dataProvider=null;
					Rdbg_Payment.selectedValue=0;
					chk_ListAp.selected=false;
					
			}
			public function Owner_Search():void
			{
				chk_Active.visible =false;
				SearchPopUp = new frmsearchwindow();
				PopUpManager.addPopUp( SearchPopUp , this, true);
				SearchPopUp.Prc_name="PropertyOwners"
				var SearchParam:Array =new Array();
				SearchPopUp.HlpIndex="SEARCH"
				SearchParam[0]=GlobalXml;
				SearchParam[1]=0;
				SearchParam[2]=PropertyId;	
				SearchParam[3]=""	
				SearchPopUp.Prc_Param=SearchParam
				SearchPopUp.HlpSrchGlobal=""
				SearchPopUp.dataPanel.focusEnabled=true
				SearchPopUp.Pageint()					
				SearchPopUp.addEventListener("PopupEnter",funpopupEnter3);
				SearchPopUp.addEventListener("PopupClose",funpopupClose3);
				PopUpManager.centerPopUp(SearchPopUp);
			}
			
			private function funpopupClose3(event:Event):void
			{
				
			}		
			private function funpopupEnter3(event:Event):void
			{				
				SearchDtls3(SearchPopUp.SelectRow.Id,0);			
			}
			
			private function SearchDtls3(Id:int,_PrdFk:int):void
			{
				//Mode="Owner";
				var Load:Array =new Array();
				Load[0]=GlobalXml; Load[1]=Id;Load[2]=PropertyId;Load[3]="";    
				useWeb(Mode,"Search_CUSTOM",Load);
			}
			private function ChangeStateOwner():void
			{
				CityMode="Owner"
				OwnerStateId=dd_OwnerState.Select_Row.StateId
				//OwnerStateId=dd_OwnerState.selectedItem.StateId
				useWeb("Property","City_CUSTOM",[GlobalXml,'City',0,OwnerStateId,'','']);
			}
			private function ChangeCityOwner():void
			{
				OwnerCityId=dd_OwnerCity.Select_Row.CityId;
				dd_OwnerCity.text=dd_OwnerCity.Select_Row.label;
				//OwnerCityId=dd_OwnerCity.selectedItem.CityId;
				var Ac:ArrayCollection=new ArrayCollection();
				txt_LocalityArea.dataProvider=Ac;//txt_LocalityArea.fnClear();
				useWeb("Property","LocalityArea_CUSTOM",[GlobalXml,'Locality',0,OwnerCityId,'','']);
			}
			private function ChangeOwnerLocality():void
			{
				OwnerLocalityId=txt_LocalityArea.Select_Row.LocalityId;
					//OwnerLocalityId=txt_LocalityArea.selectedItem.LocalityId;
					//txt_LocalityArea.text=txt_LocalityArea.Select_Row.Locality;
				
			}
			private function ApartmentListAllSelect():void
			{
				Apartment_AC=new ArrayCollection();
				Apartment_AC=Grd_ListApartments.dataProvider as ArrayCollection;
				for(var o:int=0;o<Apartment_AC.length;o++)
				{
					Apartment_AC[o].Tick=chk_ListAp.selected;				
				}
				Grd_ListApartments.dataProvider=Apartment_AC;
			}
			private function GetValueFrmCtrl():ArrayCollection
			{
				var Temp_OwnerAprt:ArrayCollection= new ArrayCollection();
				
				for(var o:int=0;o<Apartment_AC.length;o++)
				{
					var Chk_obj:Object=new Object();
					//Chk_obj=grp_loadApartment.getElementAt(o);
					var StrOA:String=Chk_obj.id;
					var Arr:Array=new Array();
					Arr=StrOA.split(',');
					if(Chk_obj.selected==true)
					{
						Temp_OwnerAprt.addItem({ApartmentName:Chk_obj.label,ApartmentId:Arr[1].toString(),Id:Arr[0].toString() })
					}				
				}
				return Temp_OwnerAprt;
			}
			private function SetValueFrmCtrl(ArrElet:ArrayCollection):void
			{
				Apartment_AC=Grd_ListApartments.dataProvider as ArrayCollection;
				for(var a:int=0;a<Apartment_AC.length;a++)
				{					
					for(var s:int=0;s<ArrElet.length;s++)
					{
						if(Apartment_AC[a].ApartmentId==ArrElet[s].ApartmentId)
						{
							Apartment_AC[a].Tick=1;
						}
					}
				}
				Grd_ListApartments.dataProvider =Apartment_AC;
			}			
			protected function txt_Email_focusOutHandler(event:FocusEvent):void
			{
				var Ac_Email:ArrayCollection= new ArrayCollection();
				var Email:String="";
				var Ac_Email1:Array;
				Email=txt_EmailId.text;
				if(Email!=""){
				Ac_Email1=Email.split(',');
				
				for(var i:int=0;i<Ac_Email1.length;i++)
				{
					if(Ac_Email1[i]!="")
					{
						EmailValidator.validate(Ac_Email1[i]);
					}
					else
					{
						Ac_Email1[i].errorString = "";
					}
				}
			}}
			protected function txt_Email_changeHandler(event:TextOperationEvent):void
			{
				if(txt_EmailId.text != "")
				{
					txt_EmailId.errorString = "";
				}
			}
			
			
			protected function EmailValidator_validHandler(event:ValidationResultEvent):void
			{
				txt_EmailId.errorString = "";
			}
			
			protected function EmailValidator_invalidHandler(event:ValidationResultEvent):void
			{
				txt_EmailId.errorString = event.message;
			}
			protected function txt_Mobile_changeHandler(StrId:String):void
			{
				if(this[StrId].text != "")
				{
					this[StrId].errorString = "";
				}
			}
			protected function txt_Mobile_focusOutHandler(StrId:String):void
			{
				if(this[StrId].text != "")
				{
					if(this[StrId].text.length < 10)
					{
						this[StrId].errorString = "Mobile Number Must be 10 digits.";
					}
					if(this[StrId].text.length == 10)
					{
						var Str:String = txt_Phone.text;
						
						var Str1:String = Str.substr(0, 1);
						
						if((Str1 != "9") && (Str1 != "8") && (Str1 != "7"))
						{
							this[StrId].errorString = "Mobile Number Starts With 9 or 8 or 7";
						}
					}
				}
			}
			
			
			//Agreement Start
			private function AgreementClick():void
			{
				GeneralPopMove();
				if(PropertyId!=0)
				{					
					//SaveCtl_Agreement.setButtonRights("Search",true);
					//useWeb("ContractClientPrefer","LastData_CUSTOM",[GlobalXml,'LastData',PropertyId,0]); 
					//SearchDtls6(SearchPopUp.SelectRow.Id,0);	
					
					//SearchDtls6(SearchPopUp.SelectRow.Id,0);	
					//SearchPopUp.addEventListener("PopupEnter",funpopupEnter4);
					Mode="PropertyAgreement";
					SavCntl_Flag="AG";
					Agreement_Clear();	
					Help_Agreement();
					SaveCtl_Agreement.setButtonRights("Delete",true);
					//SaveCtl_Agreement.setButtonRights("Clear",true);					
					brdProperty.visible=false;brdApartment.visible=false;Bdr_RoomsBeds.visible=false;
					brd_Owner.visible=false;brd_Agreement.visible=true;
					btn_Property.Button_OutHandler();
					btn_Apartment.Button_OutHandler();					
					Btn_RoomsBeds.Button_OutHandler();
					Btn_Owner.Button_OutHandler();
					Btn_Agreement.Button_B_mouseOverHandler();
					Btn_ImageUpload.Button_OutHandler();
					Brd_imageUpload.visible=false;					
				}
				else
				{
					alignAlert(Alert.show("Please Create Property","Alert Message !",Alert.OK, 
						null, null,iconWarning, Alert.OK),10,'');
					btn_Property.Button_B_mouseOverHandler();
					btn_Apartment.Button_OutHandler();					
					Btn_RoomsBeds.Button_OutHandler();
					Btn_Owner.Button_OutHandler();
					Btn_Agreement.Button_OutHandler();
					Btn_ImageUpload.Button_OutHandler();
				}
			}
			private var ArrFlag:Boolean=true;
			private function Help_Agreement():void
			{
				if(ArrFlag==true)
				{
					ArrFlag=false;
					var arrParam:ArrayCollection = new ArrayCollection
						([
							{Action:GlobalXml,Param1:"AgreementRooms",Param2:0,Param3:0,Param4:"",
								prcName:"PropertyAgreement",ctrlName:"hlpRoomType",grdWidth:"100,0"}							
						]);				
					Grd_AgreementRoomDetails._bindHlpTextData(arrParam);				
					useWeb("PropertyAgreement","Agreement_CUSTOM",[GlobalXml,'Apartment',PropertyId,0,dd_Category.selectedItem]);
					useWeb("PropertyAgreement","SavedAggrementDetails_CUSTOM",[GlobalXml,'SavedAggrementDetails',PropertyId,0,dd_Category.selectedItem]);
				}
				else{
					ArrFlag=true;
				}
					
				
				//useWeb("PropertyAgreement","LastDate_CUSTOM",[GlobalXml,'AgreementRooms',PropertyId,0,dd_Category.selectedItem]);
			}
			private function Agreement_Validation():String
			{
				ErrString="";var Flag:Boolean=true;
				//AddRental_Validation();
				if((dd_Category.selectedItem!="External Property"))
				{
					if(dt_DateofAgreement.text=="")
					{
						if(Flag==true)
						{
							dt_DateofAgreement.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Date of Agreement is Required.\n";
					}
					
					
					if(dt_ExpiryDate.text=="")
					{
						if(Flag==true)
						{
							dt_ExpiryDate.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  ExpiryDate  is Required.\n";
					}
					if(txt_StartingRental.text=="")
					{
						if(Flag==true)
						{
							txt_StartingRental.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Starting Rental / Month  is Required.\n";
					}
					if(dt_RentalStartDate.text=="")
					{
						if(Flag==true)
						{
							dt_RentalStartDate.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Rental Start Date is Required.\n";
					}
					if(txt_NoticePeriod.text=="")
					{
						if(Flag==true)
						{
							txt_NoticePeriod.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Notice Period  is Required.\n";
					}
					if(dd_RentalType.selectedItem=="Please Select Rental Type")
					{
						if(Flag==true)
						{
							dd_RentalType.setFocus();Flag=false;
						}
						ErrString=ErrString+"*  Rental Type  is Required.\n";
					}
					if(chk_Rentinclusive.selected==true)
					{
						if(dt_MaintenanceStartdate.text=="")
						{
							if(Flag==true)
							{
								dt_MaintenanceStartdate.setFocus();Flag=false;
							}
							ErrString=ErrString+"*  Maintenance Start date  is Required.\n";
						}
						if(txt_MaintenanceAmount.text=="")
						{
							if(Flag==true)
							{
								txt_MaintenanceAmount.setFocus();Flag=false;
							}
							ErrString=ErrString+"*  Maintenance Amount  is Required.\n";
						}
						if(hlp_AssociationName.text=="")
						{
							if(Flag==true)
							{
								hlp_AssociationName.setFocus();Flag=false;
							}
							ErrString=ErrString+"*  Association Name  is Required.\n";
						}					
					}
				}
				else
				{
					if((Grd_AgreementRoomDetails._getGridSrc==null)||(Grd_AgreementRoomDetails._getGridSrc.length==0))
						{
							if(Flag==true)
							{
								Grd_AgreementRoomDetails._setFocus(0);
								Flag=false;
								
							}
							ErrString=ErrString+"* Agreement Details are Required.\n";
						}
					
				}
//				if(chk_Luxury.selected==true)
//				{
//				if(Txt_Tariff.text=="")
//				{
//					if(Flag==true)
//					{
//						Txt_Tariff.setFocus();
//						Flag=false;
//						
//					}
//					ErrString=ErrString+"* Tariff Details are Required.\n";	
//				}
//				}
				return ErrString;
			}
			private function Agreement_Clear():void
			{
				MFOut.play();
				dt_DateofAgreement.enabled=true;
				dt_RentalStartDate.enabled=true;
				dt_ExpiryDate.enabled=true;
				dt_DateofAgreement.text="";
				dt_RentalStartDate.text="";
				txt_NoticePeriod.text="";
				txt_LockPeriod.text="";
				txt_StartingRental.text="";
				dt_ExpiryDate.text="";
				dd_RentalType.selectedIndex=0;  	
				txt_Tenure.text="";
				chk_Rentinclusive.selected=false;
				AgreementId=0;
				Grd_Agreement.dataProvider=null;
				dt_MaintenanceStartdate.text="";
				txt_MaintenanceAmount.text="";
				hlp_AssociationName.text="";
				dd_Apartment.dataProvider=null;
				dd_Apartment.prompt="Please Select Apartment";
				AgreementApartmentName="";
				AgreementApartmentId=0;
				Grd_Owner.dataProvider=null;
				dd_Paid.selectedIndex=0;
				Grd_AgreementRoomDetails._clear();
				txt_AdvanceAmount.text="";
				dd_AdvanceType.selectedIndex=0;
				txt_bank.text="";
				txt_ChqNo.text="";
				dt_AdvanceDate.text="";
				//dd_MaintenanceType.selectedItem="Please Select Type";
				Help_Agreement();
				chk_Active.visible=false;
				chk_Active.selected=false;
				txt_Escalationperiod.text="";
				txt_Escalation.text="";
				chk_TAC.selected=false;
				txt_TACPer.text="";
				checkbox1_changeHandler();
//				Txt_Tariff.text="";
//				RB_Rack.selected=true;
//				luxury_group.visible=false;
//				chk_Luxury.selected=false;
//				checkbox_changeHandler();
				
			}
			private function chk_Actives(event:CloseEvent):void 
			{	
				if (event.detail==Alert.YES) 
				{	
					var Load:Array = new Array();
					Load[0]= GlobalXml; Load[1]= AgreementId; Load[2]= "";Load[3]= 0;  
					useWeb("PropertyAgreement","AgreementDelete_CUSTOM",[GlobalXml,'Deactivate',AgreementId,0,0]);
				}
			}
			protected function checkbox1_changeHandler():void
			{
				
				txt_TACPer.enabled=chk_TAC.selected;
				if(chk_TAC.selected==false)
				{
					txt_TACPer.text="";
				}
				
			}
//			protected function checkbox_changeHandler():void
//			{
//				
//				if(chk_Luxury.selected ==true)
//				{
//					luxury_group.visible=true;
//					Checks=1;
//				}
//				else
//				{
//					luxury_group.visible=false;
//					Checks=0;
//				}
//			}
			private function AgreementSave():void
			{
			
				ErrString=Agreement_Validation();	
				if(ErrString!=="")
				{
					alignAlert(Alert.show(ErrString,"Requierd Field(s) !",Alert.OK, null, null,iconErrLarge, Alert.OK),10,"");
					return;
				} 
			 	if((chk_Active.selected == false)&&(chk_Active.enabled== false)&&(chk_Active.visible=true))
				{
					alignAlert(Alert.show("This Agreement Already Deactivated .","Alert Message !",Alert.OK, 
						null, null,iconWarning, Alert.OK),10,'');					
					return;
				}  
			
				var Ac_Agreement:ArrayCollection = new ArrayCollection
					([{
						DateofAgreement:dt_DateofAgreement.text,
						RentalStartDate:dt_RentalStartDate.text,
						NoticePeriod:txt_NoticePeriod.text,
						LockPeriod:txt_LockPeriod.text,
						StartingRental:txt_StartingRental.text,
						ExpiryDate:dt_ExpiryDate.text,
						RentalType:dd_RentalType.selectedItem,  	
						Tenure:txt_Tenure.text,
						Rentinclusive:chk_Rentinclusive.selected,
						Id:AgreementId,
						PropertyId:PropertyId,
						MaintenanceStartdate:dt_MaintenanceStartdate.text,
						MaintenanceAmount:txt_MaintenanceAmount.text,
						AssociationName:hlp_AssociationName.text,
						ApartmentName:AgreementApartmentName,
						ApartmentId:AgreementApartmentId,
						Paid:dd_Paid.selectedItem,
						AdvanceAmount:txt_AdvanceAmount.text,
						AdvanceType:dd_AdvanceType.selectedItem,
						Bank:txt_bank.text,
						ChqNEFT:txt_ChqNo.text,
						AdvanceDate:dt_AdvanceDate.text,MaintenanceType:dd_MaintenanceType.selectedItem,
						TACPer:txt_TACPer.text,
						TAC:chk_TAC.selected
//						Check:Checks,
//						Flag:Flag1,
//						Tariff:Txt_Tariff.text
					}]);				
				//Mode="PropertyAgreement";
				var HdrXml1:String = ObjToXmlStr_Comm(Ac_Agreement,"HdrXml");				
				var GridXml:String="";				
				GridXml += "<ROOT>";
				GridXml += ObjToXmlStr_Comm(Grd_Agreement.dataProvider as ArrayCollection,"GridXml")
				GridXml += "</ROOT>";
				var GridXml1:String="";				
				GridXml1 += "<ROOT>";
				GridXml1 += ObjToXmlStr_Comm(Grd_Owner.dataProvider as ArrayCollection,"GridXml")
				GridXml1 += "</ROOT>";
				var GridXml2:String="";				
				GridXml2 += "<ROOT>";
				GridXml2 += ObjToXmlStr_Comm(Grd_AgreementRoomDetails._getGridSrc as ArrayCollection,"GridXml")
				GridXml2 += "</ROOT>";
				
				//PropertyAgreement
				useWeb("PropertyAgreement","Save_CUSTOM",[GlobalXml,HdrXml1,GridXml,GridXml1,GridXml2]);
			}
			private function AddRental_Validation():String
			{
				var Flag:Boolean=true;
				if(dt_DateofAgreement.text=="")
				{
					if(Flag==true)
					{
						dt_DateofAgreement.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  Date of Agreement is Required.\n";
				}
				if(txt_StartingRental.text=="")
				{
					if(Flag==true)
					{
						txt_StartingRental.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  Starting Rental / Month  is Required.\n";
				}
				if(txt_Escalation.text=="")
				{
					if(Flag==true)
					{
						txt_Escalation.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  Escalation  is Required.\n";
				}
				if(txt_Escalationperiod.text=="")
				{
					if(Flag==true)
					{
						txt_Escalationperiod.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  Escalation period  is Required.\n";
				} 
				if((txt_Tenure.text=="")||(txt_Tenure.text=="0"))
				{
					if(Flag==true)
					{
						txt_Tenure.setFocus();Flag=false;
					}
					ErrString=ErrString+"*  Contract period Can't be Zero/Empty.\n";
				} 
				//if(txt_Tenure.text<txt_Escalationperiod.text)
					if(Number(txt_Escalationperiod.text)>Number(txt_Tenure.text))
				{
					if(Flag==true)
					{
						txt_Escalationperiod.setFocus();Flag=false;
						txt_Escalationperiod.text="";
					}
					ErrString=ErrString+"*  Escalation period Can't Be Greater than Contract Period.\n"; 
				}
				
				return ErrString;
			}
			private function EndDateChange():void
			{
				ErrString="";
				ErrString=AddRental_Validation();	
				if(ErrString!=="")
				{
					alignAlert(Alert.show(ErrString,"Requierd Field(s) !",Alert.OK, null, null,iconErrLarge, Alert.OK),10,"");
					return;
				} 
			 	var dt:Date = new Date(dt_RentalStartDate.selectedDate);
				var RentAmt:Number=Number(txt_StartingRental.text);					
			 	var Escper:Number=Number(txt_Escalation.text);
			 	var Tenure:Number=Number(txt_Tenure.text);
				
				var EPeriod:Number=Number(txt_Escalationperiod.text);
				var FrstAmt:Number=0;
				var StartRent:Number=0;
				StartRent= Number(txt_StartingRental.text)
				for(var i:int=0;EPeriod<=Tenure;EPeriod++)
				{  
					var EPeriod:Number=Number(txt_Escalationperiod.text);
					var EPR:Number=Number(EPeriod);
					var date:Date = dt_RentalStartDate.selectedDate;
					date.setMonth(date.getMonth()+EPR);
					Tenure=Tenure-EPeriod;
					//EPeriod=EPeriod-EPR;
					var Dat:String=date.toString(); 
					var Y:String = String(date.fullYear);
					var M:String = String(date.month+1); 
					var D:String =String(date.date); 
					// var Y1:String = Dat.substr(28,32);	 var M1:String = Dat.substr(3,4); var D1:String = Dat.substr(8,1); 
					var RangeStart:String = D+'/'+M+'/'+Y;  
	//CHking for Esc %  
				    var SecAmt=StartRent+FrstAmt;
					var RentAmt:Number=(Number(Escper)* Number(SecAmt)/100);
					var RentNew=SecAmt+RentAmt;
					FrstAmt=Math.round(RentNew);
					StartRent=0;
					
		 	if((Ac_AddAgreement1==null)||(Ac_AddAgreement1.length==0))
			{
				var Ac_AddAgreement1=new ArrayCollection();
					Ac_AddAgreement1.addItemAt({
						Escalation:txt_Escalation.text,
						StartDate:RangeStart,	EndDate:dt_EndDate.text,
						Rental:FrstAmt,	Id:0},0);
				} 
				else
				{
						Ac_AddAgreement1.addItemAt({
						Escalation:txt_Escalation.text,
						StartDate:RangeStart,	EndDate:dt_EndDate.text,
						Rental:FrstAmt,	Id:0						
					},Ac_AddAgreement1.length);	
				}
			}
				Grd_Agreement.dataProvider=Ac_AddAgreement1; 
				txt_Escalation.text="";
				txt_Escalationperiod.text="";
				dt_EndDate.text="";
			//	txt_StartingRental.text="";
				//txt_Tenure.text="";
			}		
					
			public function PropertyAgreement_Search():void
			{
				//chk_Active.visible=true;
				SearchPopUp = new frmsearchwindow();
				PopUpManager.addPopUp( SearchPopUp , this, true);
				SearchPopUp.Prc_name="PropertyAgreement"
				var SearchParam:Array =new Array();
				SearchPopUp.HlpIndex="SEARCH"
				SearchParam[0]=GlobalXml;
				SearchParam[1]=0;
				SearchParam[2]=PropertyId;	
				SearchParam[3]=""	
				SearchPopUp.Prc_Param=SearchParam
				SearchPopUp.HlpSrchGlobal=""
				SearchPopUp.dataPanel.focusEnabled=true
				SearchPopUp.Pageint()					
				SearchPopUp.addEventListener("PopupEnter",funpopupEnter4);
				SearchPopUp.addEventListener("PopupClose",funpopupClose4);
				PopUpManager.centerPopUp(SearchPopUp);
			}
			
			private function funpopupClose4(event:Event):void
			{
				
			}		
			private function funpopupEnter4(event:Event):void
			{	
				
				SearchDtls6(SearchPopUp.SelectRow.Id,0);			
			}
			
			private function SearchDtls6(Id:int,_PrdFk:int):void
			{
				//Mode="PropertyAgreement";
				var Load:Array =new Array();
				Load[0]=GlobalXml; Load[1]=Id;Load[2]=PropertyId;Load[3]="";    
				useWeb(Mode,"Search_CUSTOM",Load);
			}
			protected function DecimalChange(Str:String):void
			{
				var Temp_TxtString:String=this[Str].text;
				var Temp_TxtAC:Array=new Array();
				Temp_TxtAC=Temp_TxtString.split('.');
				
				if(Temp_TxtAC.length>2)
				{
					this[Str].errorString="Only 1 Decimal Point Allow.";
					this[Str].setFocus();					
				}
				//this[Str].text=Round2.format(this[Str].text);
			}
			private function ChangeMaintenFee():void
			{
				if(chk_Rentinclusive.selected==true)
				{
					MFIn.play();
				}
				else
				{
					
					MFOut.play();
					txt_MaintenanceAmount.text="";
					hlp_AssociationName.text="";
					dt_MaintenanceStartdate.text="";
					dd_Paid.selectedIndex=0;
				}
			}			
			
			protected function label1_rollOverHandler():void
			{
				if(chk_Rentinclusive.selected==true)
				{
					MFIn.play();
				}
				
			}			
			public function Custom_Grid_Enter(arrObj:Object, GridEdit:Boolean, index:int):String
			{
				ErrString="";
				
				if(arrObj.GridId=="Grd_AgreementRoomDetails")
				{
					if(arrObj.SC=="")
					{
						arrObj.SC="0";
					}
					if(arrObj.STAgreed=="")
					{
						arrObj.STAgreed="0";
					}
					if(arrObj.STRack=="")
					{
						arrObj.STRack="0";
					}
					if(arrObj.LTRack=="")
					{
						arrObj.LTRack="0";
					}
					if(arrObj.LTAgreed=="")
					{
						arrObj.LTAgreed="0";
					}
					if(arrObj.Inclusive=="true")
					{							
						arrObj.STAgreed="0";
					
						arrObj.STRack="0";
					
						arrObj.LTRack="0";
					
						arrObj.LTAgreed="0";							
					}
					
					if((arrObj.Inclusive=="false")&&(arrObj.STRack=="0")&&(arrObj.LTRack=="0")&&(arrObj.LTAgreed=="0")&&(arrObj.STAgreed=="0"))
					{
						
						ErrString="* Rack OR Agreed are Requierd";
					}
//					if((arrObj.Inclusive=="false")&&(arrObj.STRack=="0")&&(arrObj.STAgreed=="0"))
//					{
//						
//						ErrString="ST Rack OR ST Agreed is Requierd";
//					}
					//if((arrObj.Inclusive=="false")&&(arrObj.LTAgreed=="0")&&(arrObj.LTRack=="0"))
					//{
						
					//	ErrString="LT Rack OR LTAgreed are Requierd";
					//}
					
//					if((arrObj.Inclusive=="false")&&(arrObj.STRack!="0")&&(arrObj.STAgreed!="0"))
//					{
//						ErrString="ST Rack OR STAgreed Any one Service Tax is Enter.System Not Allow Both.";
//					}
					if((arrObj.Inclusive=="false")&&(arrObj.LTRack!="0")&&(arrObj.LTAgreed!="0"))
					{
						ErrString="* LTRack OR LTAgreed Any one Service Tax is Enter.System Not Allow Both.";
					}
						
				}
				else if(arrObj.GridId=="Grd_OtherContacts")
				{
					
					if(arrObj.ContactType =="")
					{
						ErrString=ErrString+"* ContactType is Required.\n";
						
					}
					if(arrObj.Name =="")
					{
						ErrString=ErrString+"* Name is Required.\n";
						
					}
				
					if(arrObj.EmailId !="")
					{
						EmailValidator1.validate(arrObj.EmailId);
						ErrString=ErrString+ErrMsg;	
						
					}					
					if(arrObj.PhoneNumber!="")
					{
						var Flg1:Boolean=true;
						var gmn:String=arrObj.PhoneNumber;
						if(gmn.length != 10)
						{
							ErrString=ErrString+"*  Mobile No is Invalid.\n";
							
						}
						else
						{
							for(var j:int=0;j<gmn.length;j++)
							{
								var gmn1:String=gmn.substring(j,j+1);Flg1=false;
								
								if((gmn1!="0")&&(gmn1!="1")&&(gmn1!="2")&&(gmn1!="3")&&(gmn1!="4")&&
									(gmn1!="5")&&(gmn1!="6")&&(gmn1!="7")&&(gmn1!="8")&&(gmn1!="9"))
								{
									ErrString=ErrString+"*  Mobile No is Invalid.\n";
									j=gmn.length;
									
								}
							}
						}						
					}
				}
				else if(arrObj.GridId=="Grd_RoomsAndBedsHdr")
				{
					if(arrObj.BlockId=="")
					{
						Grd_RoomsAndBedsHdr._setValuetoCtrl("hlpBlock","");
						ErrString+="* Invalid Block Name.Please Select Correct Block.\n";
					}
					if((arrObj.RoomType!="Attached")&&(arrObj.RoomType!="Non Attached"))
					{
						ErrString+="* Invalid RoomType.Please Select Correct RoomType.\n";
					}
					if((arrObj.RoomCategory!="Single")&&(arrObj.RoomCategory!="Double")&&(arrObj.RoomCategory!="Multiple Beds"))
					{
						ErrString+="* Invalid Room Category.Please Select Correct Room Category.\n";
					}
					var Grd_RoomsAndBedsHdrAC:ArrayCollection= new ArrayCollection();
					Grd_RoomsAndBedsHdrAC=Grd_RoomsAndBedsHdr._getGridSrc as ArrayCollection;
					if((Grd_RoomsAndBedsHdrAC!=null)||(Grd_RoomsAndBedsHdrAC.length!=0))
					{
						for(var s:int;s<Grd_RoomsAndBedsHdrAC.length;s++ )
						{
							if(Grd_RoomsAndBedsHdrAC[s].BlockId==arrObj.BlockId)
							{
								if(Grd_RoomsAndBedsHdrAC[s].RoomNo==arrObj.RoomNo)
								{
									ErrString="* RoomNo Already Exists.";
								}
							}
							
						}
					}
				}
				// sakthi changes in 31 may 2014. vivek told category wise grid count;
				else 
				{
					if(arrObj.GridId=="Roombed")
					{
						var Ac:ArrayCollection=new ArrayCollection();
						Ac=Grd_RoomBed._getGridSrc;
						if(Ddl_RoomCategory_RB.selectedItem == "Single")
						{
							if(Ac.length > 0)
							{
								ErrString="Room Category is Single, Only one bed is Allowed.";
							}
						}
						if(Ddl_RoomCategory_RB.selectedItem == "Double")
						{
							if(Ac.length > 1)
							{
								ErrString="Room Category is Double, Only two beds Allowed.";
							}
						}
					}
				}
				/*else
				{
					if(Ddl_RoomCategory_RB.selectedItem!="Multiple Beds")
					{
						//lbl_RoomCount.visible=true;
						if(lbl_RoomCount.text!="")
						{
							if(arrObj.GridId=="Roombed")
							{
								
								if((Grd_RoomBed._getGridSrc.length==0)||(Grd_RoomBed._getGridSrc==null))
								{
									//lbl_RoomCount.text="Pending Room Count : "+String(Room_Types-1)
								}
								else
								{
									if(2>Grd_RoomBed._getGridSrc.length)
									{
										
										//lbl_RoomCount.text="Pending Room Count : "+String(Room_Types-Number(Grd_RoomBed._getGridSrc.length+1))
									}
									else
									{
										ErrString="Only 2 beds Allowed.";
									}
								}
							}
						}
					}
					else
					{
						//sdf
					}
				}*/
			
				return ErrString;
			}
			public var ErrMsg:String="",ErrMsg1:String="";
			
			protected function EmailValidator_invalidHandler1(event:ValidationResultEvent):void
			{
				ErrMsg="*  Email  "+event.message+".\n";
			}
			
			
			protected function EmailValidator_validHandler1(event:ValidationResultEvent):void
			{
				ErrMsg="";
			}
			
			protected function Ddl_RoomCategory_RB_changeHandler():void
			{
				if((Ddl_RoomCategory_RB.selectedItem=="Single")||(Ddl_RoomCategory_RB.selectedItem=="Double"))
				{
					Grd_RoomBed._Visible=true;
					ldl_BedInfo.visible=true;
						//lbl_RoomCount.visible=false
				}
				else
				{
					Grd_RoomBed._Visible=true;
					ldl_BedInfo.visible=true;
					//lbl_RoomCount.visible=true;
				}
			}
			
			protected function button_hb1_clickHandler(event:MouseEvent):void
			{
				CopyFlag=true;
				useWeb("Property","Copy_CUSTOM",[GlobalXml,'Copy',PropertyId,0,"",'']);				
			}
			public function ChangeApartment():void
			{
				AgreementApartmentId=dd_Apartment.selectedItem.data
				AgreementApartmentName=dd_Apartment.selectedItem.label;
				useWeb("PropertyAgreement","ApartmentOwner_CUSTOM",[GlobalXml,'ApartmentOwner',dd_Apartment.selectedItem.data,0,dd_Category.selectedItem]);
				
			}
			protected function getHlpData(event:Event):void
			{
				
				if(event.currentTarget.ID == "hlpBlock")
				{	
					Grd_RoomsAndBedsHdr._setValuetoCtrl("hlpBlock",event.currentTarget.selectedRow.label);
					Grd_RoomsAndBedsHdr._setValuetoCtrl("txtBlockId",event.currentTarget.selectedRow.Id);
					Grd_RoomsAndBedsHdr._setValuetoCtrl("txtPropertyId",String(PropertyId));
					Grd_RoomsAndBedsHdr._setValuetoCtrl("txtRackTariff",String(0));
					Grd_RoomsAndBedsHdr._setValuetoCtrl("txtDoubleOccupancyTariff",String(0));
					Grd_RoomsAndBedsHdr._setValuetoCtrl("txtDiscountModePer",String(true));
					Grd_RoomsAndBedsHdr._setValuetoCtrl("txtDiscountModeRS",String(false));
					Grd_RoomsAndBedsHdr._setValuetoCtrl("txtDiscountAllowed",String(0));
					Grd_RoomsAndBedsHdr._setValuetoCtrl("txtId",String(0));
					Grd_RoomsAndBedsHdr._setValuetoCtrl("txtApartmentId",String(0));										
					
				}   
				event.currentTarget.selectedRow = null;	
			}
			
			 
			
			protected function dt_DateofAgreement_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				//dt_ExpiryDate.text="";
				if(dt_DateofAgreement.selectedDate)
				{
					var asd:String = dt_DateofAgreement.text;										
					var Y:String = asd.substr(6,10);
					var M:String = asd.substr(3,2);
					var D:String = asd.substr(0,2);
					var RangeStart:String = Y+'/'+M+'/'+D;
					dt_RentalStartDate.selectableRange = {rangeStart:new Date(RangeStart)};
					dt_RentalStartDate.selectedDate = new Date(RangeStart);
					
					dt_ExpiryDate.selectableRange = {rangeStart:new Date(RangeStart)};
					dt_ExpiryDate.selectedDate = new Date(RangeStart);
				}
			}
			protected function dt_startDate_changeHandler(event:CalendarLayoutChangeEvent):void
			{ 
				if(dt_RentalStartDate.selectedDate)
				{
					var asd:String = dt_RentalStartDate.text;										
					var Y:String = asd.substr(6,10);
					var M:String = asd.substr(3,2);
					var D:String = asd.substr(0,2);
					var RangeStart:String = Y+'/'+M+'/'+D;
					dt_ExpiryDate.selectableRange = {rangeStart:new Date(RangeStart)};
					dt_ExpiryDate.selectedDate = new Date(RangeStart);
				}
			}
			
			protected function dt_RentalStartDate_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				//dt_MaintenanceStartdate.text="";
				if(dt_RentalStartDate.selectedDate)
				{
					var asd:String = dt_RentalStartDate.text;										
					var Y:String = asd.substr(6,10);
					var M:String = asd.substr(3,2);
					var D:String = asd.substr(0,2);
					var RangeStart:String = Y+'/'+M+'/'+D;
					dt_MaintenanceStartdate.selectableRange = {rangeStart:new Date(RangeStart)};
					dt_MaintenanceStartdate.selectedDate = new Date(RangeStart);
				}
				
				    var Ds:Number=monthDifference(dt_RentalStartDate.selectedDate, dt_ExpiryDate.selectedDate)
					txt_Tenure.text=String(Number(Ds));
				
			}
			private function PanNoEnter():void
			{
				if(txt_PAN.text!="")
				{
					useWeb("PropertyOwners","OwnerSelect_CUSTOM",[GlobalXml,'PROPERTYOWNER',PropertyId,0,txt_PAN.text]);
				} 
				else
				{
					alignAlert(Alert.show("PANNO is Requierd ","Requierd !",Alert.OK, null, null,iconErrLarge, Alert.OK),10,"");
				}  
			}
			private function EmailIdEnter():void
			{
				if(txt_EmailId.text!="")
				{
					useWeb("PropertyOwners","OwnerSelect_CUSTOM",[GlobalXml,'PROPERTYOWNEREmailId',PropertyId,0,txt_EmailId.text]);
				}
				else
				{
					alignAlert(Alert.show("Email Id is Requierd ","Requierd !",Alert.OK, null, null,iconErrLarge, Alert.OK),10,"");
				} 
			}
			private function AdvanceClick():void
			{
				ADIn.play();
			}
			
			protected function dd_AdvanceType_changeHandler(event:IndexChangeEvent):void
			{
				if(dd_AdvanceType.selectedItem=="Chq")
				{
					lbl_ChqNEFT.text="Chq  No";
					txt_ChqNo.prompt="Chq  No";
				}
				else
				{
					lbl_ChqNEFT.text="NEFT";
					txt_ChqNo.prompt="NEFT";
				}
			}
			protected function chk_Active_changeHandler(event:Event):void
			{
				if((chk_Active.selected == false)&&(chk_Active.enabled== true)&&(chk_Active.visible=true))
				{
					alignAlert(Alert.show("Do you want to Deactivate this Agreement?", "Warning",Alert.YES | Alert.NO, null,
						chk_Actives, iconWarning, Alert.NO),10,"");
				}
			}
			
			protected function txt_Escalationperiod_focusOutHandler(event:FocusEvent):void
			{
				if(txt_Escalationperiod.text=="0")
				{
					txt_Escalationperiod.text="";
				}
				
			}
			protected function txt_Email_changeHandler1(event:TextOperationEvent):void
			{
				if(txt_Email.text != "")
				{
					txt_Email.errorString = "";
				}
			}
			protected function EmailValidator_validHandler2(event:ValidationResultEvent):void
			{
				ErrMsg="";
			}
			
			protected function EmailValidator_invalidHandler2(event:ValidationResultEvent):void
			{
				txt_Email.errorString=event.message;
				ErrMsg=event.message;
			}
			protected function txt_Email_focusOutHandler1(event:FocusEvent):void
			{
				var Ac_Email:ArrayCollection= new ArrayCollection();
				var Email:String="";
				var Ac_Email1:Array;
				Email=txt_Email.text;
				if(Email!=""){
				Ac_Email1=Email.split(',');
				
				for(var i:int=0;i<Ac_Email1.length;i++)
				{
					if(Ac_Email1[i]!="")
					{
						EmailValidator2.validate(Ac_Email1[i]);
					//	return errorString;
					}
					else
					{
						Ac_Email1[i].errorString = "";
					}
				}
				if(errorString!="")
				{
					alignAlert(Alert.show(errorString,"Invalid !",Alert.OK, null, null,iconErrLarge, Alert.OK),10,"");
					return;
				}
//				if(txt_Email.text != "")
//				{
//					EmailValidator2.validate(txt_Email.text);
//				}
//				else
//				{
//					txt_Email.errorString = "";
//				}
			}}
			//Image Uplaod
			public var ImageCount:Number=0;
			private function ImageUploadClick():void
			{
				GeneralPopMove();
				if(PropertyId!=0)
				{
					init1();
					useWeb("Property","ImageUpload_CUSTOM",[GlobalXml,'ImageCount',PropertyId,0,"",'']);
					Mode="PropertyImage";	
					brdProperty.visible=false;
					brdApartment.visible=false;
					Bdr_RoomsBeds.visible=false;
					brd_Owner.visible=false;
					brd_Agreement.visible=false;
					Brd_imageUpload.visible=true;
					btn_Property.Button_OutHandler();
					btn_Apartment.Button_OutHandler();					
					Btn_RoomsBeds.Button_OutHandler();
					Btn_Owner.Button_OutHandler();
					Btn_Agreement.Button_OutHandler();
					Btn_ImageUpload.Button_B_mouseOverHandler();
				}
				else
				{
					alignAlert(Alert.show("Please Create Property","Alert Message !",Alert.OK, 
						null, null,iconWarning, Alert.OK),10,'');
					btn_Property.Button_B_mouseOverHandler();
					btn_Apartment.Button_OutHandler();					
					Btn_RoomsBeds.Button_OutHandler();
					Btn_Owner.Button_OutHandler();
					Btn_Agreement.Button_OutHandler();
					Btn_ImageUpload.Button_OutHandler();
				}
				
				
			}
			public function init():void
			{
				// This URL should be replaced with your server side URL
//				var browserUrl:String = ExternalInterface.call("eval", "window.location.href");
//				var arr:Array =browserUrl.split("/");
				var ImageFormat:String=FilePath.text;				
				uploadURL.url = "http://sstage.in/Propertyupload.php?id="+txt_PropertyName.text+ImageCount+"&pid="+PropertyId;
				uploadURL.method = "POST"; // OR "POST" as you need it
				uploadURL.contentType = "multipart/form-data";				
				// Event Listeners for UI Buttons (Upload/Browse)
				
				Filedata.addEventListener(MouseEvent.CLICK, browseFiles);
				uploadbutton.addEventListener(MouseEvent.CLICK,uploadFiles);
				fileRef.addEventListener(Event.SELECT, selectHandler);
				
				
			}
			
			//Browse for files
			
			private function browseFiles(event:Event):void
			{
				fileTypes.push(imageTypes);
				fileTypes.push(documentTypes);
				fileRef.browse(fileTypes);
				
			}
			
			// called after user selects a file form the browse window.
			
			private function selectHandler(event:Event):void
			{
				
				FilePath.text = event.currentTarget.name.toString();
				
				//if()
				
			}
			
			// called when user clicks on the Upload button to upload the file
			
			private function uploadFiles(event:Event):void
			{
					
				fileRef.addEventListener(Event.COMPLETE, completeHandler);
				fileRef.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA,dataHandler);
				fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR,securityErrorHandler);
				fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS,httpStatusHandler);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
				fileRef.upload(uploadURL);
			}
			
			// called after a file is uploaded
			
			private function completeHandler(event:Event):void
			{
				Alert.show("File Uploaded successfully");
				
			}
			
			//called after file upload is done and Data has been returned from Server
			
			private function dataHandler(event:DataEvent):void
			{
				var browserUrl:String = ExternalInterface.call("eval", "window.location.href");
				var arr:Array =browserUrl.split("/");
				resultsTxtField.text = event.data.toString();
				if(resultsTxtField.text=="There was an error uploading the file, please try again!")
				{
					Alert.show(resultsTxtField.text);
				}
				else
				{
					useWeb("Property","ImageUpload_CUSTOM",[GlobalXml,'ImageUpload',PropertyId,0,"http://sstage.in/property_images/"+resultsTxtField.text,FilePath.text]);
				}
				
			}
			
			// called if there is an error detected by flash player browsing or uploading a file
			
			private function ioErrorHandler(event:IOErrorEvent):void
			{
				mx.controls.Alert.show(String(event),"ioError",0);
			}
			// called if a security error
			
			private function securityErrorHandler(event:SecurityErrorEvent):void
			{
				mx.controls.Alert.show(String(event),"Security Error",0);
			}
			// server will return an http status code, code 200 means all is good
			
			private function httpStatusHandler(event:HTTPStatusEvent):void
			{
				if (event.status != 200)
				{
					mx.controls.Alert.show(String(event),"Error",0);
				}
			}
			
			//Image Download
			public var PropertyImageId:int=0;
			protected function Grd_Image_doubleClickHandler(event:MouseEvent):void
			{
				FILE_URL="";
				FILE_URL=String(event.currentTarget.selectedItem.ImageLocation);
				txt_ImageName.text=event.currentTarget.selectedItem.ImageName;
				PropertyImageId=event.currentTarget.selectedItem.Id;
				init1();
			}
			private function init1():void {
				/* Initialize the array collection to an empty collection. */
				arrColl = new ArrayCollection();
				
				/* Set up the URL request to download the file specified by the FILE_URL variable. */
				urlReq = new URLRequest(FILE_URL);
				
				/* Define file reference object and add a bunch of event listeners. */
				fileRef = new FileReference();
				fileRef.addEventListener(Event.CANCEL, doEvent);
				fileRef.addEventListener(Event.COMPLETE, doEvent);
				fileRef.addEventListener(Event.OPEN, doEvent);
				fileRef.addEventListener(Event.SELECT, doEvent);
				fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS, doEvent);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR, doEvent);
				fileRef.addEventListener(ProgressEvent.PROGRESS, doEvent);
				fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR, doEvent);
			}
			
			private function doEvent(evt:Event):void {
				
				
			}
			
			private function downloadSourceCodeZip():void {
				/* Clear existing array collection. */
				//arrColl = new ArrayCollection();
				//Alert.show(FILE_URL);
				/* Hide the Text control. */
				//txt.visible = false;
				/* Begin download. */
				fileRef.download(urlReq);
			}
			
			private function showAlert(item:Object):void {
				Alert.show(item.eventString, item.type);
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				if(PropertyImageId!=0)
				{
					alignAlert(Alert.show("Do you want to delete this item?", "Warning",Alert.YES | Alert.NO, null,
						DeletePropImg, iconWarning, Alert.NO),10,"");	
					
				}
				else
				{
					alignAlert(Alert.show("It is an Invalid Process.","Error !",Alert.OK, null, null,iconErrLarge, Alert.OK),10,"");
					return;
				}
						
			}
			private function DeletePropImg(event:CloseEvent):void 
			{	
				if (event.detail==Alert.YES) 
				{	
					useWeb("Property","ImageDelete_CUSTOM",[GlobalXml,'ImageDelete',PropertyId,PropertyImageId,"",'']);
				}
			}
//			public function Custom_Grid_Delete1(index:int,arrGrid:ArrayCollection,GrdId:String):void
//			{              
//				if(arrGrid[index].Id!="")
//				{												
//					useWeb("Property","Delete_NEWCUSTOM",[GlobalXml,"ROOMSANDBEDSDELETE",0,arrGrid[index].Id]);
//				}
//			}
			
			
			protected function RB_Rack_changeHandler(event:Event):void
			{
				Txt_Tariff.text="";
				Txt_Tariff.maxChars=2;
				RB_Agreed.selected=false;
				Flag1=0;
			}
			protected function RB_Agreed_changeHandler(event:Event):void
			{
				Txt_Tariff.text="";
				Txt_Tariff.maxChars=2;
				RB_Rack.selected=false;
				Flag1=1;
				
			}
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				bdr_Check.visible=true;
			}
			
			protected function button3_clickHandler(event:MouseEvent):void
			{
				bdr_Check.visible=false;
			}
			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:Elastic id="elasticEasing"/>
		<s:Power id="powerEasing"
				 exponent="4"/>
		<s:Move id="POSIn" target="{Brd_UserList}" xTo="0"    easer="{powerEasing}"
				duration="1000" />		
		<s:Move  id="POSOut" target="{Brd_UserList}" xTo="-1900"   easer="{powerEasing}"
				 duration="1000" />			
		<s:Move id="MFIn" target="{Brd_MaintenanceFee}" xTo="480"    easer="{powerEasing}"
				duration="1000" />		
		<s:Move  id="MFOut" target="{Brd_MaintenanceFee}" xTo="1500"   easer="{powerEasing}"
				 duration="1000" />
		<s:Move id="PYIn" target="{Brd_Policy}" xTo="160"    easer="{powerEasing}"
				duration="1000" />		
		<s:Move  id="PYOut" target="{Brd_Policy}" xTo="1500"   easer="{powerEasing}"
				 duration="1000" />
		<s:Move id="ADIn" target="{Brd_Advance}" xTo="240"    easer="{powerEasing}"
				duration="1000" />		
		<s:Move  id="ADOut" target="{Brd_Advance}" xTo="1500"   easer="{powerEasing}"
				 duration="1000" />
		
		
		
		
		
		<mx:NumberFormatter id="Round2" precision="2" 							
							useThousandsSeparator="true" useNegativeSign="true" rounding="nearest"/>
		
		
		
	</fx:Declarations>
	<s:Label id="lbl_PropertyName" x="0" y="1" width="161" height="35" text="{txt_PropertyName.text}" textAlign="center" verticalAlign="middle" color="#eb1c24"/>
	<s:BorderContainer x="0" y="44" width="100%" height="100%" borderVisible="false" 
					   backgroundColor="#fbf9f9" id="brdProperty" visible="true">
		<s:TextArea x="191" y="125" width="469" height="50" tabIndex="4" prompt="Property Description" id="txt_PropertyDescription" />
		<s:TextInput x="191" y="183" width="188" height="21" tabIndex="5" prompt="Address" id="txt_Address"/>
		<s:TextArea x="191" y="278" width="469" height="50" tabIndex="11" prompt="Directions/Landmarks" id="txt_DiretionsLandmarks"/>
		<mx:Label x="51" y="65.5" text="Property Name"/>
		<mx:Label x="31" y="10" text="Property Information" color="#eb1c24"/>
		<mx:Label x="678" y="222.5" text="Block Information" color="#eb1c24" id="lbl_BlockInfo"/>
		<mx:Label x="51" y="96.5" text="Property Code"/>
		<mx:Label x="51" y="34.5" text="Property Category"/>
		<mx:Label x="51" y="139.5" text="Property Description"/>
		<mx:Label x="51" y="180.5" text="Address"/>
		<mx:Label x="51" y="292.5" text="Directions/Landmarks"/>
		<mx:Label x="51" y="338" text="Services"/>
		<mx:Label x="678" y="96.5" text="Latitude and"/>
		<mx:Label x="678" y="114.5" text="Longitude"/>
		<mx:Label x="402" y="185.5" text="City"/>
		<mx:Label x="51" y="214.5" text="State"/>
		<mx:Label x="402" y="216.5" text="Locality"/>
		<mx:Label x="402" y="246.5" text="Postal Code"/>
		<mx:Label x="51" y="249.5" text="Contact Numbers"/>
		<mx:Label x="641" y="56.5" text="Date" visible="false"/>
		<s:TextInput x="191" y="65.5" width="188" height="21" tabIndex="2" prompt="Property Name" id="txt_PropertyName"/>
		<s:TextInput x="191" y="96.5" width="188" height="21" tabIndex="3" prompt="Property Code" id="txt_PropertyCode"/>
		<s:TextInput x="762" y="87.5" width="145" height="21" tabIndex="15" prompt="Prefix" id="txt_Prefix" visible="false"/>
		<s:TextInput x="488" y="246.5" width="171" height="21" tabIndex="10" prompt="Postal Code" id="txt_PostalCode" maxChars="6" restrict="0-9"/>
		<s:TextInput x="191" y="249.5" width="188" height="21" tabIndex="9" prompt="Contact Numbers" maxChars="50" 
					 id="txt_ContactNumbers" restrict="0-9,-" toolTip="044-56632254,9598666532,Etc"/>
		<s:TextInput x="771" y="96.5" width="165" height="21" tabIndex="15" prompt="Latitude and Longitude" id="txt_LatitudeandLongitude"/>
		<mx:Label x="678" y="65.5" text="Keywords"/>
		<s:TextInput x="771" y="65.5" width="165" height="21" tabIndex="14" prompt="Keywords" id="txt_Keywords"/>
		<s:HGroup x="191" y="350" width="469" height="17" gap="36"  >
			<s:CheckBox tabIndex="20" label="SwimPool" id="chk_SwimPool"/>
			<s:CheckBox tabIndex="21" label="Pub" id="chk_Pub"/>
			<s:Spacer width="25" height="10"/>
			<s:CheckBox tabIndex="22" label="Gym" id="chk_Gym"/>
		</s:HGroup>
		<s:HGroup x="191" y="373" width="469" height="18" gap="30"  >
			<s:CheckBox tabIndex="23" label="Restaurant" id="chk_Restaurant"/>
			<s:CheckBox tabIndex="24" label="Conference Hall" id="chk_ConferenceHall"/>
			<s:CheckBox tabIndex="25" label="CyberCafe" id="chk_CyberCafe"/>
			<s:CheckBox width="112" label="Laundry" id="chk_Laundry" height="24" tabIndex="26"/>
			
		</s:HGroup> 
		<!--s:DropDownList x="191" y="214.5" width="188" height="21" prompt="Please Select State"  tabIndex="6"
						id="dd_State" change="ChangeState()"/>
		<s:DropDownList id="dd_City" x="488" y="185.5" width="171" height="21" change="ChangeCity()"
						prompt="Please Select City" tabIndex="7"/>
		<s:DropDownList id="Hlp_Locality" x="488" y="216.5" width="171" height="21" change="ChangeLocality()"
						prompt="Please Select Locality" tabIndex="8"/-->
		
		<WrbHelpComp:HelpText x="191" y="214.5" width="188" height="21" id="dd_State" 
							  pxTabIndex="5" pxSetColumnsWidth="188,0" onselection="{ChangeState()}" depth="1000" >
		</WrbHelpComp:HelpText>	
		<WrbHelpComp:HelpText  id="dd_City" x="488" y="185.5" width="171" height="21" 
							   pxTabIndex="6" pxSetColumnsWidth="0,171" onselection="{ChangeCity()}" depth="100">
		</WrbHelpComp:HelpText>	
		<WrbHelpComp:HelpText  id="Hlp_Locality" x="488" y="216.5" width="171" height="21"
							   pxTabIndex="7" pxSetColumnsWidth="171,0" onselection="{ChangeLocality()}" depth="10">
		</WrbHelpComp:HelpText>
		<s:DropDownList x="191" y="34.5" width="188" height="21" change="CategoryChange()" selectedItem="Please Select Category"  id="dd_Category" tabIndex="1">
			<mx:ArrayCollection>
				<fx:String>Please Select Category</fx:String>
				<fx:String>Internal Property</fx:String>
				<fx:String>External Property</fx:String>
				<fx:String>Managed G H</fx:String>
				<!--fx:String>Client Prefered</fx:String-->
				<fx:String>Other Hotels</fx:String>
			</mx:ArrayCollection>
		</s:DropDownList>
		
		
		<mx:Label x="678" y="34.5" text="Type" id="lbl_Type"/>
		<!--s:DropDownList x="771" y="34.5" width="165" height="21" selectedItem="Please Select Type"  id="dd_Type" tabIndex="13">
			<mx:ArrayCollection>
				<fx:String>Please Select Type</fx:String>
				<fx:String>Premium</fx:String>
				<fx:String>Budget</fx:String>
				<fx:String>Luxury</fx:String>				
			</mx:ArrayCollection>
		</s:DropDownList-->
		<s:DropDownList x="771" y="36" id="dd_Type" width="165" change="ChangeType()" tabIndex="13"
						prompt="Please Select Type"></s:DropDownList>
		<WrbComp:ProDGrid1 x="682" y="250" width="200" height="161"
						   ID="grd_Block"
						   id="grd_Block"
						   _ColDataField="Block~Description~Id"
						   _ColHdrText="Block~Description~Id"
						   _ColType="txt~txt~txt" _colVisible="1~1~0"
						   _ColWidth="80~170~0" _editable="1~1~0"
						   _required="1~0~0" _spltChar="~" _tabIndex="17"
						   _visibleColNos="2" >
		</WrbComp:ProDGrid1>
		<s:HGroup x="0" y="464" width="100%" height="30" verticalAlign="top" horizontalAlign="center" gap="5">
			<WrbComp:SaveControl id="SaveCl_Property" x="233" width="489" docClear="PropertyClear()"
								 docDelete="PropertyDelete()" docRefresh="refresh()"
								 docSave="PropertySave()" doSearch="PropertySearch()" tabIndex="25">
			</WrbComp:SaveControl>
			<WrbComp:Button_HB  height="25" click="button_hb1_clickHandler(event)" width="-5" _Label="Copy" id="Btn_Copy" visible="false">
			</WrbComp:Button_HB>
		</s:HGroup>
		<s:Label x="136" y="70" text="*" color="#eb1c24"/>
		<s:Label x="83" y="219" text="*" color="#eb1c24"/>
		<s:Label x="426" y="190" text="*" color="#eb1c24"/>
		<s:Label x="447" y="217" text="*" color="#eb1c24"/>
		<s:Label x="473" y="251" text="*" color="#eb1c24"/>
		<s:Label x="151" y="250" text="*" color="#eb1c24"/>
		<s:Label x="708" y="36" text="*" color="#eb1c24" id="lbl_TypeStar"/>
		<s:Label x="133" y="101" text="*" color="#eb1c24"/>
		<s:Label x="153" y="39" text="*" color="#eb1c24"/>
		<s:Label x="165" y="144" text="*" color="#eb1c24"/>
		<s:Label x="101" y="184" text="*" color="#eb1c24"/>
		<s:Label x="175" y="297" text="*" color="#eb1c24"/>
		<mx:Label x="51" y="393" text="Show On Website" visible="false" />
		<s:CheckBox x="191" y="394.5" tabIndex="27" id="chk_ShowOnWebsite" label="Show On Website"/>
		<mx:DateField x="762" y="55.5" id="dt_TodayDate" selectedDate="{new Date()}" formatString="DD/MM/YYYY" visible="false"/>
		<s:BorderContainer x="387" y="10" width="282" height="107" id="Brd_RackTraiffProperty" cornerRadius="5">
			<mx:Label x="14" y="5.5" text="Total No Rooms" id="lbl_TotalNoRooms" visible="true"/>
			<s:TextInput x="118" y="5.5" width="154" height="21" prompt="Total No Rooms" id="txt_TotalNoRooms" restrict="0-9" visible="true" textAlign="right"/>
			<mx:Label x="48" y="56.5" text="Single" id="lbl_PropertyRackTarrif" visible="true"/>
			<mx:Label x="189.5" y="56.5" text="Double" id="lbl_PropertyRackTarrif0" visible="true"/>
			<s:TextInput x="5" y="77.5" width="126" height="21" prompt=" Rack Tarrif" id="txt_PropertyRackTarrif" restrict="0-9." focusOut="DecimalChange('txt_PropertyRackTarrif')" visible="true" textAlign="right"/>
			<s:TextInput x="149" y="77.5" width="126" height="21" prompt=" Rack Tarrif" id="txt_PropertyRackTarrifDouble" restrict="0-9." focusOut="DecimalChange('txt_PropertyRackTarrifDouble')" visible="true" textAlign="right"/>
			<mx:Label x="109" y="39" text="Rack Tarrif" color="#eb1c24"/>
		</s:BorderContainer>
		<s:HGroup x="0" y="426" width="100%" height="30" verticalAlign="middle" horizontalAlign="center" depth="5">
			<WrbComp:Button_HB width="151" height="32" _Label="Add Property User &gt;&gt;"
							   click="OpenUserPOP()">
			</WrbComp:Button_HB>
			<WrbComp:Button_HB width="151" _Label="&lt;&lt; Policy" click="PYIn.play()">
			</WrbComp:Button_HB>
			<s:Spacer x="618" width="34" height="12"/>
		</s:HGroup>
		<mx:HRule x="0" y="417" width="100%" strokeColor="#eb1c24"/>
		<s:TextInput x="771" y="140" width="165" change="txt_Email_changeHandler1(event)" prompt="Email"
					 focusOut="txt_Email_focusOutHandler1(event)" id="txt_Email"/>
		
		<mx:Label x="678" y="139.5" text="Email"/>
		
		
						
		<s:BorderContainer x="682" y="167" width="255" height="146" depth="100"
						   visible="false" id="bdr_Check">
				
			<s:DropDownList x="77" y="12" width="66" id="dd_CheckIn" selectedIndex="11">
				<mx:ArrayCollection>
					<fx:String>1</fx:String>
					<fx:String>2</fx:String>
					<fx:String>3</fx:String>
					<fx:String>4</fx:String>
					<fx:String>5</fx:String>
					<fx:String>6</fx:String>
					<fx:String>7</fx:String>
					<fx:String>8</fx:String>
					<fx:String>9</fx:String>
					<fx:String>10</fx:String>
					<fx:String>11</fx:String>
					<fx:String>12</fx:String>
					<fx:String>24</fx:String>
				</mx:ArrayCollection>
			</s:DropDownList>
			<s:DropDownList x="156" y="12" width="66" id="dd_CheckInType" selectedIndex="2">
				<mx:ArrayCollection>
					<fx:String></fx:String>
					<fx:String>AM</fx:String>
					<fx:String>PM</fx:String>
				</mx:ArrayCollection>
			</s:DropDownList>
			<s:DropDownList x="77" y="48" width="66" id="dd_CheckOut" selectedIndex="11">
				<mx:ArrayCollection>
					<fx:String>1</fx:String>
					<fx:String>2</fx:String>
					<fx:String>3</fx:String>
					<fx:String>4</fx:String>
					<fx:String>5</fx:String>
					<fx:String>6</fx:String>
					<fx:String>7</fx:String>
					<fx:String>8</fx:String>
					<fx:String>9</fx:String>
					<fx:String>10</fx:String>
					<fx:String>11</fx:String>
					<fx:String>12</fx:String>
					<fx:String>24</fx:String>
				</mx:ArrayCollection>
			</s:DropDownList>
			<s:DropDownList x="156" y="48" width="66" id="dd_CheckOutType" selectedIndex="2">
				<mx:ArrayCollection>
					<fx:String></fx:String>
					<fx:String>AM</fx:String>
					<fx:String>PM</fx:String>
				</mx:ArrayCollection>
			</s:DropDownList>
			<s:DropDownList x="77" y="85" width="66" id="dd_gracetime" selectedIndex="0">
				<mx:ArrayCollection>
					<fx:String>0</fx:String>
					<fx:String>1</fx:String>
					<fx:String>2</fx:String>
					<fx:String>3</fx:String>
					<fx:String>4</fx:String>
				</mx:ArrayCollection>
			</s:DropDownList>
			<s:Label x="10" y="91" text="GraceTime"/>
			<s:Label x="160" y="91" text="Hours"/>
			<s:Label x="10" y="54" text="CheckOut"/>
			<s:Label x="10" y="20" text="CheckIn"/>
			<s:Button x="119" y="121" label="Close" click="button3_clickHandler(event)"/>
		</s:BorderContainer>
		<s:Button x="794" y="185" label="CheckOut Time" click="button2_clickHandler(event)"/>
		
		
		
	</s:BorderContainer>
	<s:BorderContainer x="1500" y="238" width="705" height="216" id="Brd_Policy" borderVisible="true" cornerRadius="5">
		<mx:Label x="11" y="35.5" text="Security Policy" id="lbl_TotalNoRooms0" visible="true"/>
		<mx:Label x="11" y="115.5" text="Cancel Policy" id="lbl_TotalNoRooms1" visible="true"/>
		<s:TextArea x="127" y="23" width="524" height="65" id="txt_BookingPolicy" prompt="Security Policy"/>
		<s:TextArea x="127" y="103" width="524" height="65" id="txt_CancelPolicy" prompt="Cancel Policy"/>
		<s:HGroup x="0" y="176" width="100%" height="31" horizontalAlign="center" verticalAlign="middle">
			<WrbComp:Button_HB _Label="Done>>" click="PYOut.play();">
			</WrbComp:Button_HB>
		</s:HGroup>
		<mx:Label x="0" y="1" text="Policy" color="#eb1c24"/>
	</s:BorderContainer>
	<s:BorderContainer id="Brd_UserList" x="-1900" y="40" width="100%" height="100%" borderVisible="false" visible="true" backgroundColor="#fbf9f9">
		<WrbComp:Button_HB x="1" y="1" id="Lbl_UserDone" _Label="&lt;&lt; Done" click="CloseUserPOP()">
		</WrbComp:Button_HB>
		<s:HGroup  x="0" y="0" width="100%" height="100%">	
		<s:Group x="0" y="0" width="50%" height="100%">
			<s:List x="143" y="43" allowMultipleSelection="true" id="Lst_SCOM" width="112" height="125">				
			</s:List>
			<s:List id="Lst_DSOM" x="356" y="43" width="112" height="125" allowMultipleSelection="true"
					dragEnabled="true" dragMoveEnabled="true" dropEnabled="true"/>
			<s:List x="143" y="199" allowMultipleSelection="true" id="Lst_SCRM" width="112" height="125">				
			</s:List>
			<s:List id="Lst_DSRM" x="356" y="199" width="112" height="125" allowMultipleSelection="true"
					dragEnabled="true" dragMoveEnabled="true" dropEnabled="true"/>
			<s:List x="143" y="353" allowMultipleSelection="true" id="Lst_SCARM" width="112" height="125">				
			</s:List>
			<s:List id="Lst_DSARM" x="356" y="353" width="112" height="125" allowMultipleSelection="true"
					dragEnabled="true" dragMoveEnabled="true" dropEnabled="true"/>
			<s:Button id="Btn_addARM" x="277" y="359.5" width="50" height="21" label=">"
					  click="Btn_LstSingle_clickHandler('Lst_SCARM','Lst_DSARM')"/>
			<s:Button id="Btn_addAllARM" x="277" y="390.5" width="50" height="21" label=">>"
					  click="Btn_LstAll_clickHandler('Lst_SCARM','Lst_DSARM')"/>
			<s:Button id="Btn_delARM" x="277" y="421.5" width="50" height="21" label=" &lt;"
					  click="Btn_Lst1Single_clickHandler('Lst_SCARM','Lst_DSARM')"/>
			<s:Button id="Btn_delAllARM" x="277" y="453.5" width="50" height="21" label="&lt;&lt;"
					  click="Btn_Lst1All_clickHandler('Lst_SCARM','Lst_DSARM')"/>
			<s:Label x="7" y="407.5" width="22%" height="7%" text="Assistant Resident Managers" color="#565454"/>
			<s:Button id="Btn_AddRM" x="277" y="206.5" width="50" height="21" label=">"
					  click="Btn_LstSingle_clickHandler('Lst_SCRM','Lst_DSRM')"/>
			<s:Button id="Btn_AddAllRM" x="277" y="237.5" width="50" height="21" label=">>"
					  click="Btn_LstAll_clickHandler('Lst_SCRM','Lst_DSRM')"/>
			<s:Button id="Btn_DelRM" x="277" y="268.5" width="50" height="21" label=" &lt;"
					  click="Btn_Lst1Single_clickHandler('Lst_SCRM','Lst_DSRM')"/>
			<s:Button id="Btn_DelAllRM" x="277" y="299.5" width="50" height="21" label="&lt;&lt;"
					  click="Btn_Lst1All_clickHandler('Lst_SCRM','Lst_DSRM')"/>
			<mx:Label x="7" y="254.5" width="17%" height="7%" text="Resident Managers"/>
			<s:Button id="Btn_addOM" x="277" y="49.5" width="50" height="21" label=">"
					  click="Btn_LstSingle_clickHandler('Lst_SCOM','Lst_DSOM')"/>
			<s:Button id="Btn_addAllOM" x="277" y="79.5" width="50" height="21" label=">>"
					  click="Btn_LstAll_clickHandler('Lst_SCOM','Lst_DSOM')"/>
			<s:Button id="Btn_delOM" x="277" y="110.5" width="50" height="21" label=" &lt;"
					  click="Btn_Lst1Single_clickHandler('Lst_SCOM','Lst_DSOM')"/>
			<s:Button id="Btn_delAllOM" x="277" y="141.5" width="50" height="21" label="&lt;&lt;"
					  click="Btn_Lst1All_clickHandler('Lst_SCOM','Lst_DSOM')"/>
			<mx:Label x="7" y="104.5" width="127" height="35" text="Operations Managers "/>
			
		</s:Group>
		<s:Group x="650" y="0" width="50%" height="100%">
			<s:List x="131" y="43" allowMultipleSelection="true" id="Lst_SCPM" width="112" height="125">
				
			</s:List>
			<s:List id="Lst_DSPM" x="361" y="43" width="112" height="125" allowMultipleSelection="true"
					dragEnabled="true" dragMoveEnabled="true" dropEnabled="true"/>
			<s:List x="131" y="199" allowMultipleSelection="true" id="Lst_SCOR" width="112" height="125">
				
			</s:List>
			<s:List id="Lst_DSOR" x="361" y="199" width="112" height="125" allowMultipleSelection="true"
					dragEnabled="true" dragMoveEnabled="true" dropEnabled="true"/>
			<s:List x="131" y="353" allowMultipleSelection="true" id="Lst_SCSAL" width="112" height="125">
				
			</s:List>
			<s:List id="Lst_DSSAL" x="361" y="353" width="112" height="125" allowMultipleSelection="true"
					dragEnabled="true" dragMoveEnabled="true" dropEnabled="true"/>
			<s:Button id="Btn_addSAL" x="285" y="359.5" width="50" height="21" label=">"
					  click="Btn_LstSingle_clickHandler('Lst_SCSAL','Lst_DSSAL')"/>
			<s:Button id="Btn_addAllSAL" x="285" y="390.5" width="50" height="21" label=">>"
					  click="Btn_LstAll_clickHandler('Lst_SCSAL','Lst_DSSAL')"/>
			<s:Button id="Btn_delSAL" x="285" y="421.5" width="50" height="21" label=" &lt;"
					  click="Btn_Lst1Single_clickHandler('Lst_SCSAL','Lst_DSSAL')"/>
			<s:Button id="Btn_delAllSAL" x="285" y="453.5" width="50" height="21" label="&lt;&lt;"
					  click="Btn_Lst1All_clickHandler('Lst_SCSAL','Lst_DSSAL')"/>
			<mx:Label x="5" y="405.5" width="127" height="35" text="Sales"/>
			<s:Button id="Btn_addOR" x="285" y="206.5" width="50" height="21" label=">"
					  click="Btn_LstSingle_clickHandler('Lst_SCOR','Lst_DSOR')"/>
			<s:Button id="Btn_addAllOR" x="285" y="237.5" width="50" height="21" label=">>"
					  click="Btn_LstAll_clickHandler('Lst_SCOR','Lst_DSOR')"/>
			<s:Button id="Btn_delOR" x="285" y="268.5" width="50" height="21" label=" &lt;"
					  click="Btn_Lst1Single_clickHandler('Lst_SCOR','Lst_DSOR')"/>
			<s:Button id="Btn_delAllOR" x="285" y="299.5" width="50" height="21" label="&lt;&lt;"
					  click="Btn_Lst1All_clickHandler('Lst_SCOR','Lst_DSOR')"/>
			<mx:Label x="5" y="255.5" width="127" height="35" text="Other Roles"/>
			<s:Button id="Btn_addPM" x="285" y="49.5" width="50" height="21" label=">"
					  click="Btn_LstSingle_clickHandler('Lst_SCPM','Lst_DSPM')"/>
			<s:Button id="Btn_addAllPM" x="285" y="79.5" width="50" height="21" label=">>"
					  click="Btn_LstAll_clickHandler('Lst_SCPM','Lst_DSPM')"/>
			<s:Button id="Btn_delPM" x="285" y="110.5" width="50" height="21" label=" &lt;"
					  click="Btn_Lst1Single_clickHandler('Lst_SCPM','Lst_DSPM')"/>
			<s:Button id="Btn_delAllPM" x="285" y="141.5" width="50" height="21" label="&lt;&lt;"
					  click="Btn_Lst1All_clickHandler('Lst_SCPM','Lst_DSPM')"/>
			<mx:Label x="5" y="105.5" width="127" height="35" text="Project Managers"/>
		</s:Group>
		</s:HGroup>
	</s:BorderContainer>
	<s:HGroup x="0" y="1" width="100%" height="40" horizontalAlign="center">
		<s:Spacer x="11" width="138" height="10"/>
		<WrbComp:TabButton_HB width="120" height="40" _Label="Property" click="PropertyClick()" id="btn_Property"/>
		<WrbComp:TabButton_HB width="120" height="40" _Label="Apartment" click="AparmentClick()" id="btn_Apartment"/>
		<WrbComp:TabButton_HB width="120" height="40" _Label="Rooms and Beds" id="Btn_RoomsBeds" 
							  click="FnRoomsBedsClk()"/>
		<WrbComp:TabButton_HB width="120" height="40" _Label="Owner" id="Btn_Owner" 
							  click="OwnerClick()"/>
		<WrbComp:TabButton_HB width="120" height="40" _Label="Agreement" id="Btn_Agreement" 
							  click="AgreementClick()">
		</WrbComp:TabButton_HB>
		<WrbComp:TabButton_HB width="120" height="40" _Label="Image Upload" id="Btn_ImageUpload" 
							  click="ImageUploadClick()">
		</WrbComp:TabButton_HB>
	</s:HGroup>
	<!-- Apartment Start -->
	<s:BorderContainer x="0" y="41" width="100%" height="100%" borderVisible="false" 
					   backgroundColor="#fbf9f9" id="brdApartment" visible="false">
		<s:VGroup x="0" y="0" width="100%" height="100%" horizontalAlign="center" verticalAlign="top">
			<s:BorderContainer x="27" y="60" width="902" height="252" borderVisible="false" backgroundColor="#fbf9f9">
				<mx:Label x="35" y="36" text="Block Name"/>
				<s:Label x="5" y="14" text="Apartment Information" color="#eb1c24"/>
				<s:Label x="110" y="40.5" text="*" color="#eb1c24"/>
				<s:Label x="133" y="77.5" text="*" color="#eb1c24" visible="false"/>
				<s:Label x="118" y="81.5" text="*" color="#eb1c24"/>
				<s:Label x="128" y="122.5" text="*" color="#eb1c24"/>
				<s:Label x="174" y="163.5" text="*" color="#eb1c24"/>
				<s:Label x="568" y="38.5" text="*" color="#eb1c24"/>
				<s:Label x="628" y="118" text="*" color="#eb1c24"/>
				<mx:Label x="35" y="76" text="Apartment Name" visible="false"/>
				<mx:Label x="35" y="77" text="Apartment No"/>
				<mx:Label x="35" y="118" text="Apartment Type"/>
				<mx:Label x="35" y="159" text="SellableApartment Type"/>
				<mx:Label x="505" y="36" text="Ownership Mode" visible="false"/>
				<mx:Label x="505" y="36" text="Rack Tariff"/>
				<mx:Label x="505" y="77" text="Max Discount Mode"/>
				<mx:Label x="505" y="118" text="Max Discount Allowed"/>
				<s:DropDownList x="193" y="36" width="249" id="Ddl_BlockName" tabIndex="37" 
								prompt="Please Select Block" change="Ddl_BlockName_changeHandler()"/>
				<s:DropDownList x="193" y="118" width="249" id="Ddl_ApartmentType" tabIndex="40" 
								selectedItem="Please Select Apartment Type">
					<mx:ArrayCollection>
						<fx:String>Please Select Apartment Type</fx:String>
						<fx:String>Furnished</fx:String>
						<fx:String>Semi-Furnished</fx:String>
					</mx:ArrayCollection>
				</s:DropDownList>
				<s:DropDownList x="193" y="159" width="249" id="Ddl_SellableApartmentType" tabIndex="41" 
								selectedItem="Please Select SellableApartment Type">
					<mx:ArrayCollection>
						<fx:String>Please Select SellableApartment Type</fx:String>
						<fx:String>1 BHK</fx:String>
						<fx:String>2 BHK</fx:String>
						<fx:String>3 BHK</fx:String>
						<fx:String>4 BHK</fx:String>
						<fx:String>HUB</fx:String>						
					</mx:ArrayCollection>
				</s:DropDownList> 
				<mx:Label x="505" y="159" text="Status"/>
				<s:DropDownList x="643" y="159" width="249" id="Ddl_Status" tabIndex="47" 
								selectedItem="Active">
					<mx:ArrayCollection>
						<fx:String>Active</fx:String>
						<fx:String>InActive</fx:String>
						<fx:String>Returned to Owner</fx:String>
						<fx:String>Not Saleable</fx:String>
						<fx:String>Project Work in Progress</fx:String>					
					</mx:ArrayCollection>
				</s:DropDownList>
				<s:DropDownList x="643" y="36" width="249" id="Ddl_OwnershipMode" tabIndex="42" 
								selectedItem="Please Select Ownership Mode" visible="false">
					<mx:ArrayCollection>
						<fx:String>Please Select Ownership Mode</fx:String>
						<fx:String>Owned</fx:String>
						<fx:String>Rented</fx:String>
						<fx:String>Managed</fx:String>						
					</mx:ArrayCollection>
				</s:DropDownList>
				<s:TextInput x="193" y="76.5" width="249" id="Txt_ApartmentName" prompt="Apartment Name" 
							 tabIndex="38" restrict="0-9a-zA-Z" visible="false"/>
				<s:TextInput x="193" y="77.5" width="249" id="Txt_ApartmentNo" prompt="Apartment No" 
							 tabIndex="39" restrict="0-9a-zA-Z"/>
				<s:TextInput x="643" y="36.5" width="249" id="Txt_RackTariff" restrict="0-9." 
							 prompt="Rack Tariff" textAlign="right" tabIndex="43" focusOut="DecimalChange('Txt_RackTariff')"/>
				<s:TextInput x="643" y="118" width="249" id="Txt_MaxDiscountAllowed" textAlign="right" 
							 prompt="Max Discount Allowed" tabIndex="46" restrict="0-9."/>
				<s:HGroup x="643" y="77.5">
					<s:RadioButton label="%"  id="Rdb_Per" tabIndex="44"/>
					<s:RadioButton label="Rs"  id="Rdb_Rs" tabIndex="45"/>
				</s:HGroup>
			</s:BorderContainer>			
			
		</s:VGroup>
		<mx:HRule x="0" y="451" width="100%" strokeColor="#eb1c24"/>
		<s:HGroup y="464" width="100%" height="37" horizontalAlign="center">				
			<WrbComp:SaveControl id="sav_Apartment" doSearch="Apartment_Search()" docSave="Apartment_Save()">
			</WrbComp:SaveControl>				
		</s:HGroup>
	</s:BorderContainer>
	<!-- Image upload Start -->
	<s:BorderContainer x="0" y="49" width="100%" height="100%" id="Brd_imageUpload" visible="false" borderVisible="false"
					   backgroundColor="#fbf9f9">
		<mx:Panel x="307" y="39" title="Image Uploader">
			<mx:ControlBar>
				<mx:Spacer width="80%"/>
				<mx:HBox>
					<mx:TextInput id="FilePath" width="150"  visible="true"/>
					<mx:Button id="Filedata" label="Browse File" name="Filedata" />
					<mx:Button label="UpLoad File" name="uploadbutton" id="uploadbutton" />
				</mx:HBox>
				<mx:TextArea id="resultsTxtField"  width="0"  name="resultsTxtField" visible="false"/>
			</mx:ControlBar>
		</mx:Panel>
		<mx:DataGrid id="Grd_Image" x="295" y="248" width="384" height="181" tabIndex="10"
					 dragEnabled="true" draggableColumns="false" dragMoveEnabled="true"
					 dropEnabled="true" editable="true" focusEnabled="false" doubleClickEnabled="true" 					 
					 textAlign="center" borderVisible="true" doubleClick="Grd_Image_doubleClickHandler(event)" >
			<mx:columns>				
				<mx:DataGridColumn dataField="ImageName" headerText="ImageName" 
								   width="50" editable="false"  />	
				<mx:DataGridColumn dataField="ImageLocation" width="0" visible="false"/>
				<mx:DataGridColumn dataField="Id" width="0" visible="false"/>				
			</mx:columns>
		</mx:DataGrid>		
		<mx:Button id="downloadBtn" x="517" y="172" height="40" label="Download"
					click="downloadSourceCodeZip();"  toolTip="{FILE_URL}"/>
		<s:TextInput x="307" y="172" width="189" height="40" id="txt_ImageName" enabled="false"/>
		<s:Button x="609" y="172" height="40" label="Delete" click="button1_clickHandler(event)"/>
	</s:BorderContainer>
	<!-- Rooms and Beds Start -->
	<s:BorderContainer x="0" y="40" width="100%" height="100%" id="Bdr_RoomsBeds" visible="false" 
					   borderVisible="false" backgroundColor="#fbf9f9">
		<s:HGroup y="0" width="100%" height="416" horizontalAlign="center" id="Brd_ApartmentDetails" 
				  visible="false">
		<s:Group x="32" y="0" width="856" height="417">
			<s:DropDownList id="Ddl_Block_RB" x="145" y="40" width="220" height="21" tabIndex="57"
							prompt="Please Select Block" change="Ddl_Block_RB_changeHandler(event)"/>
			<s:DropDownList id="Ddl_RoomType_RB" x="145" y="122.5" width="220" height="21" tabIndex="59"
							prompt="Please Select Room Type" selectedItem="Please Select Room Type">
				<mx:ArrayCollection>
					<fx:String>Please Select Room Type</fx:String>
					<fx:String>Attached</fx:String>
					<fx:String>Non Attached</fx:String>
				</mx:ArrayCollection>
			</s:DropDownList>
			<s:DropDownList id="Ddl_RoomCategory_RB" x="145" y="205.5" width="220" height="21"
							selectedItem="Please Select Room Category" tabIndex="61" change="Ddl_RoomCategory_RB_changeHandler()">
				<mx:ArrayCollection>
					<fx:String>Please Select Room Category</fx:String>
					<fx:String>Single</fx:String>
					<fx:String>Double</fx:String>
					<fx:String>Multiple Beds</fx:String>
				</mx:ArrayCollection>
			</s:DropDownList>
			<mx:Label x="36" y="205.5" text="Room Category"/>
			<mx:Label x="36" y="163.5" text="Room No"/>
			<mx:Label x="36" y="122.5" text="Room Type"/>
			<mx:Label x="36" y="40" text="Block No"/>
			<mx:Label x="11" y="14" text="Room Information" color="red"/>
			<mx:Label x="11" y="247" text="Beds Information" color="red" id="ldl_BedInfo"/>
			<s:Label x="90" y="40" text="*" color="red"/>
			<s:Label x="103" y="122.5" text="*" color="red"/>
			<s:Label x="94" y="163.5" text="*" color="red"/>
			<s:Label x="127" y="205.5" text="*" color="red"/>
			<s:TextInput id="Txt_RoomNo_RB" x="145" y="163.5" width="220" height="21" restrict="0-9a-zA-Z"
						 tabIndex="60" prompt="Room No"/>
			<s:HGroup x="75" y="242" width="781" height="175" horizontalAlign="center" verticalAlign="middle">
			<WrbComp:ProDGrid1 x="0" y="0" width="600" height="171" id="Grd_RoomBed"
							   _ColDataField="BedRackTarrif~DiscountModePer~DiscountModeRS~DiscountAllowed~Id"
							   _ColHdrText="Rack Tariff~%~Rs~Maximum Discount~Id"
							   _ColType="ntxt~Chk~Chk~ntxt~txt"
							   _colVisible="1~1~1~1~0"
							   _ColWidth="200~100~100~200~0"
							   _editable="1~1~1~1~0"
							   _HeaderTxtLbl="true" 
							   _required="1~0~0~0~0"
							   _spltChar="~"
							   _tabIndex="68"
							   _DuplChk="false"
							   _visibleColNos="4" ID="Roombed" _GridId="Roombed" />
		</s:HGroup>		
			<s:BorderContainer x="418" y="9" width="438" height="225" borderVisible="false"  backgroundColor="#fbf9f9">
				<mx:Label x="26" y="113.5" text="Discount Mode"/>
				<mx:Label x="26" y="154.5" text="Maximum Discount Allowed"/>
				<mx:Label x="0" y="0" text="Room Count" color="red" id="lbl_RoomCount"/>
				<s:Label x="91" y="31.5" text="*" color="red"/>
				<s:TextInput id="Txt_MaxDiscount_RB" x="189" y="154.5" width="220" height="21" restrict="0-9."
							 textAlign="right" tabIndex="66" prompt="Maximum Discount Allowed"/>
				<mx:Label x="26" y="31" text="Rack Tariff"/>
				<mx:Label x="26" y="196.5" text="Status"/>
				<s:TextInput id="Txt_RackTariff_RB" x="189" y="31" width="220" height="21" restrict="0-9."
							 tabIndex="62" textAlign="right" focusOut="DecimalChange('Txt_RackTariff_RB')" prompt="Rack Tariff"/>
				<mx:Label x="26" y="71.5" text="Double Occupancy Tariff"/>
				<s:TextInput id="Txt_DoubleTariff_RB" x="189" y="71.5" width="220" height="21" restrict="0-9."
							 tabIndex="63" textAlign="right" focusOut="DecimalChange('Txt_DoubleTariff_RB')" prompt="Double Occupancy Tariff"/>
				<s:HGroup x="189" y="113.5" gap="30">
					<s:RadioButton label="%" id="Rdb_Per_RB" groupName="radiogroup2" tabIndex="64"/>
					<s:RadioButton label="Rs" id="Rdb_Rs_RB" groupName="radiogroup2" tabIndex="65"/>
				</s:HGroup>
				<s:DropDownList x="189" y="196.5" width="220" selectedIndex="0" tabIndex="67" id="DD_RoomsStatus">
					<mx:ArrayCollection>						
						<fx:String>Active</fx:String>
						<fx:String>In Active</fx:String>
					</mx:ArrayCollection></s:DropDownList>
			</s:BorderContainer>
			<s:DropDownList id="Ddl_Apartment_RB" x="145" y="80.5" width="220" height="21" tabIndex="58"
							prompt="Please Select Apartment" change="Ddl_Apartment_RB_changeHandler(event)"/>
			<mx:Label x="36" y="80.5" text="Apartment No"/>
			<s:Label x="114" y="81.5" text="*" color="red"/>
		</s:Group>
		</s:HGroup>
		<mx:HRule x="0" y="451" width="100%" strokeColor="#eb1c24"/>
		<s:HGroup x="0" y="464" width="100%" height="32" horizontalAlign="center" verticalAlign="middle">			
			<WrbComp:SaveControl doSearch="RoomBed_Search()" docSave="RoomBed_Save()" id="sav_Rooms_Bed">
			</WrbComp:SaveControl>
		</s:HGroup>
		<s:BorderContainer x="0" y="0" width="100%" height="443" borderVisible="false" visible="false" id="Brd_RoomsandBedsHdr" backgroundColor="#fbf9f9">
			<mx:Label x="11" y="14" text="Room Information" color="red"/>
			<s:HGroup x="0" y="0" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
				<WrbComp:ProDGrid1 x="150" y="135" width="420" height="174" id="Grd_RoomsAndBedsHdr" _GridId="Grd_RoomsAndBedsHdr"
								   _ColDataField="Block~RoomType~RoomCategory~RoomNo~RackTariff~DoubleOccupancyTariff~DiscountModePer~DiscountModeRS~DiscountAllowed~PropertyId~Id~BlockId~ApartmentId~RoomStatus"
								   _ColHdrText="Block~RoomType~RoomCategory~RoomNo~RackTariff~DoubleOccupancyTariff~DiscountModePer~DiscountModeRS~DiscountAllowed~PropertyId~Id~BlockId~ApartmentId~RoomStatus"
								   _ColType="hlp~hlp~hlp~txt~txt~txt~txt~txt~txt~txt~txt~txt~txt~txt~txt"
								   _colVisible="1~1~1~1~0~0~0~0~0~0~0~0~0~0"
								   _ColWidth="100~100~100~100~0~0~0~0~0~0~0~0~0~0"
								   _editable="1~1~1~1~0~0~0~0~0~0~0~0~0~0"
								   _HeaderTxtLbl="true" 
								   _required="1~0~0~0~0~0~0~0~0~0~0~0~0~0"
								   _spltChar="~" 
								   _tabIndex="117"
								   _DuplChk="false"
								   _visibleColNos="4" ID="Grd_RoomsAndBedsHdr" _getHlpTxtData="getHlpData(event)">
				</WrbComp:ProDGrid1>
			</s:HGroup>
		</s:BorderContainer>
	</s:BorderContainer>
	<!-- Rooms and Beds End -->
	<!-- Owner Starts -->
	<s:BorderContainer x="0" y="42" width="100%" height="100%" id="brd_Owner" 
					   borderVisible="false" visible="true"  backgroundColor="#fbf9f9">
		<s:VGroup x="0" y="0" width="100%" height="100%" horizontalAlign="left" verticalAlign="top">
			<s:Group x="167" y="73" width="100%" height="449" visible="true">
				<mx:Label x="29" y="40"  text="Title "/>
				<mx:Label x="55" y="37" width="13" color="#eb1c24" text="*"/>
				<mx:Label x="93" y="70" width="13" color="#eb1c24" text="*"/>
				<mx:Label x="91" y="108" width="13" color="#eb1c24" text="*"/>
				<mx:Label x="106" y="138" width="13" color="#eb1c24" text="*"/>
				<mx:Label x="67" y="212" width="13" color="#eb1c24" text="*"/>
				<mx:Label x="807" y="306" width="13" color="#eb1c24" text="*" id="Star_Acc"/>
				<mx:Label x="787" y="337" width="13" color="#eb1c24" text="*" id="Star_Type"/>
				<mx:Label x="61" y="377" width="13" color="#eb1c24" text="*"/>
				<mx:Label x="402" y="307" width="13" color="#eb1c24" text="*" id="Star_Bank"/>
				<mx:Label x="101" y="337" width="13" color="#eb1c24" text="*"/>
				<!--mx:Label x="113" y="307" width="13" color="#eb1c24" text="*"/-->
				<mx:Label x="9" y="10"  text="Owners Information" color="#eb1c24"/>
				<mx:Label x="9" y="281"  text="Bank information" color="#eb1c24"/>
				<mx:Label x="29" y="74" text="First Name"/>
				<mx:Label x="29" y="109" text="Last Name"/>
				<mx:Label x="29" y="143" text="Ledger Name"/>
				<mx:Label x="29" y="180" text="Email ID"/>
				<mx:Label x="29" y="215" text="Phone"/>
				<mx:Label x="29" y="250" text="Alternate Phone"/>
				<mx:Label x="370" y="215" text="TDS %" visible="false"/>
				<mx:Label x="29" y="310" text="Payment Mode"/>
				<mx:Label x="29" y="342" text="Payee Name"/>
				<mx:Label x="712" y="311" text="Account Number"/>
				<mx:Label x="712" y="342" text="Account Type"/>
				<mx:Label x="370" y="311" text="Bank "/>
				<mx:Label x="370" y="346" text="Branch Address"/>
				<mx:Label x="370" y="381" text="SWIFT Code"/>
				<mx:Label x="29" y="381" text="IFSC "/>
				<s:TextInput x="130" y="74" width="220" height="21" prompt="First Name" tabIndex="73" id="txt_FirstName"/>
				<s:TextInput x="820" y="311" width="190" height="21" tabIndex="95" prompt="Account Number" id="txt_AccountNumber" restrict="0-9"/>
				<s:TextInput x="130" y="381" width="220" height="21" tabIndex="91" prompt="IFSC" id="txt_IFSC"/>
				<s:TextInput x="465" y="381" width="220" height="21" prompt="SWIFT Code" id="txt_SWIFTCode" tabIndex="94" depth="5"/>
				<s:TextInput x="130" y="342" width="220" height="21" tabIndex="90" prompt="Payee Name" id="txt_PayeeName"/>
				<s:TextInput x="465" y="346" width="220" height="21" prompt="Branch Address" tabIndex="93" depth="6" id="txt_BranchAddress"/>
				<s:TextInput x="130" y="109" width="220" height="21" tabIndex="74" prompt="Last name" id="txt_Lastname"/>
				<s:TextInput x="130" y="143" width="220" height="21" tabIndex="75" prompt="Ledger Name" id="txt_LedgerName"/>
				<s:TextInput x="130" y="180" width="220" height="21" tabIndex="76" change="txt_Email_changeHandler(event)" prompt="Email Id"
							 focusOut="txt_Email_focusOutHandler(event)" id="txt_EmailId" enter="EmailIdEnter()" />
				<s:TextInput x="130" y="215" width="220" height="21" tabIndex="77" prompt="Phone" restrict="0-9," maxChars="12" id="txt_Phone" 
							 change="txt_Mobile_changeHandler('txt_Phone')"
							 focusOut="txt_Mobile_focusOutHandler('txt_Phone')"/>
				<s:TextInput x="130" y="250" width="220" height="21" tabIndex="78" prompt="Alternate Phone" restrict="0-9," maxChars="12" id="txt_AlternatePhone"
							 change="txt_Mobile_changeHandler('txt_AlternatePhone')"
							 focusOut="txt_Mobile_focusOutHandler('txt_AlternatePhone')"/>
				<s:TextInput x="465" y="215" width="220" height="21" tabIndex="84" depth="7" visible="false" prompt="TDS %" id="txt_TDSPer" restrict="0-9"/>
				<s:DropDownList x="130" y="40" width="220" id="dd_Title" tabIndex="72" selectedItem="Please Select Title">
					<mx:ArrayCollection>
						<fx:String>Please Select Title</fx:String>
						<fx:String>Mr</fx:String>
						<fx:String>Ms</fx:String>
						<fx:String>Mrs</fx:String>
					</mx:ArrayCollection>
				</s:DropDownList>
				<s:DropDownList x="820" y="342" width="190" selectedItem="Please Select Account Type" tabIndex="96" id="dd_AccountType">
					<mx:ArrayCollection>
						<fx:String>Please Select Account Type</fx:String>
						<fx:String>Saving</fx:String>
						<fx:String>Current</fx:String>						
					</mx:ArrayCollection>
				</s:DropDownList>
				<s:HGroup x="131" y="315" width="219" horizontalAlign="center" verticalAlign="middle" 
						  gap="50">
					<s:RadioButton label="Direct" groupName="Rdbg_Payment" value="0"
								   id="Direct" buttonMode="true" tabIndex="88"/>
					<s:RadioButton label="Courier" groupName="Rdbg_Payment"  value="1"
								   id="Courier" buttonMode="true" tabIndex="89" />
				</s:HGroup>
				<!--s:RadioButton id="rd_Couriercheque" x="130" y="293" label="Courier cheque " tabIndex="65"/>
				<s:RadioButton id="rd_DirectCredit" x="130" y="317"
							   label="Direct Credit to Bank Account" tabIndex="66"/-->
				<WrbHelpComp:HelpText x="465" y="311" width="220" height="21" pxSetPrompt="Bank" depth="30" pxSetColumnsWidth="220" PxGridSetUp="-140" pxSetHeight="140"    id="txt_Bank" pxTabIndex="92">
				</WrbHelpComp:HelpText>
				<s:CheckBox x="742" y="20" label="List of Apartments" tabIndex="98" id="chk_ListAp" change="ApartmentListAllSelect()"/>								
				<mx:Label x="712" y="381" text="PAN No" id="lbl_PANNo"/>
				<s:TextInput x="820" y="381" width="190" height="21" tabIndex="97" prompt="PAN No" enter="PanNoEnter()" id="txt_PANNo" text="{txt_PAN.text}" maxChars="12"/>
				<!--s:Scroller x="742" y="43" width="200" height="200">
					<s:VGroup width="100%" height="100%">
						<s:Group id="grp_loadApartment" width="100%" height="100%" tabIndex="95">
						</s:Group>
					</s:VGroup>
				</s:Scroller-->
				<mx:DataGrid id="Grd_ListApartments" depth="100" x="722" y="45" width="250" height="226" tabIndex="10"
							 dragEnabled="true" draggableColumns="false" dragMoveEnabled="true"
							 dropEnabled="true" editable="true" focusEnabled="false" doubleClickEnabled="true" 					 
							 textAlign="center" borderVisible="true" >
					<mx:columns>				
						<mx:DataGridColumn dataField="Tick" headerText="Select" width="50"  editable="false">
							<mx:itemRenderer>
								<fx:Component>
									<mx:HBox horizontalAlign="center" verticalAlign="middle">
										<mx:CheckBox selected="{data.Tick}" enabled="true" 
													 change="outerDocument.FnChkChange(event);"/>
									</mx:HBox>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>										
						<mx:DataGridColumn dataField="ApartmentName" width="180"  id="Col_Apartment"
										   headerText="Apartment Name" editable="true" textAlign="left"/>
						<mx:DataGridColumn dataField="ApartmentId" width="0" visible="false"/>
						<mx:DataGridColumn dataField="Id" width="0" visible="false"/>				
					</mx:columns>
				</mx:DataGrid>
				<s:BorderContainer x="358" y="28" width="346" height="200" depth="6" visible="false" borderVisible="false" id="Brd_OwnerAddress" backgroundColor="#fbf9f9">
					<mx:Label x="59" y="149" width="13" color="#eb1c24" text="*"/>
					<mx:Label x="78" y="109" width="13" color="#eb1c24" text="*" visible="false"/>
					<mx:Label x="33" y="79" width="13" color="#eb1c24" text="*"/>
					<mx:Label x="41" y="42" width="13" color="#eb1c24" text="*"/>
					<mx:Label x="58" y="10" width="13" color="#eb1c24" text="*"/>
					<mx:Label x="10" y="12" text="Address"/>
					<mx:Label x="10" y="81" text="City"/>
					<mx:Label x="10" y="115" text="Locality/Area"/>
					<mx:Label x="10" y="46" text="State"/>
					<mx:Label x="10" y="151" text="Pincode "/>
					<s:TextInput x="105" y="14" width="220" height="21" tabIndex="79" prompt="Address" id="txt_OwnerAddress"/>
					<s:TextInput x="105" y="152" width="220" height="21" tabIndex="83" depth="8" prompt="Pincode" id="txt_OwnerPostal" maxChars="6" restrict="0-9"/>
					<!--s:DropDownList x="105" y="46" width="220" change="ChangeStateOwner()" prompt="Please Select State"
									selectedIndex="0" tabIndex="80" id="dd_OwnerState"></s:DropDownList>
					<s:DropDownList x="105" y="81" width="220" height="21" change="ChangeCityOwner()" selectedIndex="0" 
									prompt="Please Select City" tabIndex="81" id="dd_OwnerCity" ></s:DropDownList>
					<s:DropDownList x="105" y="115" width="220" height="21" change="ChangeOwnerLocality()" selectedIndex="0"
									prompt="Please Select City" tabIndex="82" id="txt_LocalityArea" ></s:DropDownList-->
					
					<WrbHelpComp:HelpText x="105" y="46" width="220" id="dd_OwnerState" height="21" pxTabIndex="80"
										  pxSetColumnsWidth="220,0" onselection="{ChangeStateOwner()}" depth="1000">
					</WrbHelpComp:HelpText>	
					<WrbHelpComp:HelpText  x="105" y="81" width="220" id="dd_OwnerCity" height="21" pxTabIndex="81"
										   pxSetColumnsWidth="0,220" onselection="{ChangeCityOwner()}" depth="100">
					</WrbHelpComp:HelpText>	
					<WrbHelpComp:HelpText  x="105" y="115" width="220" id="txt_LocalityArea" height="21" pxTabIndex="82"
										   pxSetColumnsWidth="220,0" onselection="{ChangeOwnerLocality()}" depth="10">
					</WrbHelpComp:HelpText>	
					
				</s:BorderContainer>
				<WrbComp:Button_HB x="478.5" y="412" width="123" _Label="Other Contacts" click="{brd_OtherContacts.visible=true}">
				</WrbComp:Button_HB>
				<s:TextInput x="870" y="18" width="135" height="22" prompt="Apartment Name" id="FiltFirstName" change="filter('ApartmentName')"/>
				
			</s:Group>			
		</s:VGroup>
		<mx:HRule x="0" y="451" width="100%" strokeColor="#eb1c24"/>
		<s:HGroup x="0" y="464" width="100%" height="32" verticalAlign="top" horizontalAlign="center">
			<WrbComp:SaveControl id="SavCnl_Owner" docSave="OwnerSave()" doSearch="Owner_Search()" docRefresh="Help_Owner()">
			</WrbComp:SaveControl>
			
		</s:HGroup>	
		<s:BorderContainer x="360" y="16" width="306" height="148" depth="5" visible="true" borderVisible="false" backgroundColor="#fbf9f9" id="Brd_OwnerExternalData" cornerRadius="5">
			<mx:Label x="17" y="24" text="PAN "/>
			<s:TextInput x="67" y="20" width="220" prompt="PAN " tabIndex="84" text="{txt_PANNo.text}" enter="PanNoEnter()" id="txt_PAN"/>
			<mx:Label x="17" y="58" text="TIN"/>
			<s:TextInput x="67" y="54" width="220" prompt="TIN" tabIndex="85" id="txt_TIN"/>
			<mx:Label x="17" y="93" text="ST"/>
			<s:TextInput x="67" y="89" width="220" prompt="ST" tabIndex="86" id="txt_ST"/>
			<mx:Label x="17" y="127" text="VAT"/>
			<s:TextInput x="67" y="123" width="220" prompt="VAT" tabIndex="87" id="txt_VAT"/>
		</s:BorderContainer>
	</s:BorderContainer>
	<s:BorderContainer x="220" y="135" width="616" height="305" borderVisible="true" id="brd_OtherContacts" visible="false">
		<WrbComp:ProDGrid1 x="44" y="21" width="498" height="228" id="Grd_OtherContacts"
						   _ColDataField="ContactType~Name~EmailId~PhoneNumber~designation~Id"
						   _ColHdrText="Contact Type~Name~EmailId~Phone Number~Designation~Id"
						   _ColType="txt~txt~txt~ntxt~txt~txt"
						   _colVisible="1~1~1~1~1~0"
						   _ColWidth="150~100~100~100~100~0"
						   _editable="1~1~1~1~1~0"
						   _HeaderTxtLbl="true" 
						   _required="0~0~0~0~0~0"
						   _spltChar="~"
						   _tabIndex="150"
						   _visibleColNos="5" ID="Grd_OtherContacts" _GridId="Grd_OtherContacts">
		</WrbComp:ProDGrid1>
		<WrbComp:Button_HB x="258.5" y="260" width="123" _Label="Close" click="{brd_OtherContacts.visible=false}">
		</WrbComp:Button_HB>
	</s:BorderContainer>
	<!-- Owner End -->
	<!-- Agreement START -->
	<s:BorderContainer x="0" y="42" width="100%" height="100%" borderVisible="false" visible="false"  backgroundColor="#fbf9f9"
					   id="brd_Agreement" >
		<mx:HRule x="0" y="451" width="100%" strokeColor="#eb1c24"/>
		<s:HGroup x="0" y="464" width="100%" height="40" horizontalAlign="center" verticalAlign="top" >
			<WrbComp:SaveControl id="SaveCtl_Agreement" docClear="Agreement_Clear()" docRefresh="Help_Agreement()" docSave="AgreementSave()" 
								 doSearch="PropertyAgreement_Search()">
			</WrbComp:SaveControl>
		</s:HGroup>
		<s:BorderContainer x="489" y="10" width="427" height="438" visible="false" borderVisible="false" backgroundColor="#fbf9f9" id="Brd_AgreementDetails2">
			<s:Label x="205" y="26" text="*" color="#eb1c24"/>
			<s:Label x="145" y="67" text="*" color="#eb1c24"/>
			<s:Label x="149" y="99" text="*" color="#eb1c24"/>
			<mx:Label x="80" y="30" text="Starting Rental / Month "/>
			<mx:Label x="80" y="100" width="74" text="Rental Type "/>
			<mx:Label x="80" y="131" text="Contract Period"/>
			<mx:Label x="80" y="208" text="Rent DOES NOT include Maintenance Fee" />
			<mx:Label x="80" y="251" text="Apartment"/>
			<mx:Label x="80" y="168" width="111" text="Maintenance Type "/>
			<s:DropDownList x="218" y="168" width="183" selectedItem="Arrears" tabIndex="116" id="dd_MaintenanceType">
				<mx:ArrayCollection>
					<fx:String>Arrears</fx:String>
					<fx:String>Advance</fx:String>						
				</mx:ArrayCollection>
			</s:DropDownList>
			
			<s:TextInput x="218" y="134.5" width="183" tabIndex="117" prompt="Contract Period" id="txt_Tenure"
						 textAlign="right" maxChars="10" editable="false" restrict="0-9."/>
			<s:TextInput x="218" y="29" width="183" prompt="Starting Rental / Month "
						 tabIndex="114" textAlign="right" id="txt_StartingRental" restrict="0-9." focusOut="DecimalChange('txt_StartingRental')"/>
			<s:DropDownList x="218" y="102" width="183" selectedItem="Please Select Rental Type" tabIndex="116" id="dd_RentalType">
				<mx:ArrayCollection>
					<fx:String>Please Select Rental Type</fx:String>
					<fx:String>Arrears</fx:String>
					<fx:String>Advance</fx:String>						
				</mx:ArrayCollection>
			</s:DropDownList>
			<s:DropDownList x="218" y="251" width="183" prompt="Please Select Apartment" tabIndex="122" id="dd_Apartment" change="ChangeApartment()" >			
			</s:DropDownList>
			<mx:DataGrid id="Grd_Owner" x="10" y="298" width="400" height="125" tabIndex="10"
						 dragEnabled="true" draggableColumns="false" dragMoveEnabled="true"
						 dropEnabled="true" editable="true" focusEnabled="false" doubleClickEnabled="true" 					 
						 textAlign="center" borderVisible="true" >
				<mx:columns>				
					<mx:DataGridColumn dataField="Owner" headerText="Owner" 
									   width="70" editable="false"  />											
					<mx:DataGridColumn dataField="SplitPer" width="50" 
									   headerText="Split %" editable="true" textAlign="right"/>
					<mx:DataGridColumn dataField="OwnerId" width="0" visible="false"/>
					<mx:DataGridColumn dataField="Id" width="0" visible="false"/>				
				</mx:columns>
			</mx:DataGrid>
			<s:CheckBox x="324" y="207.5" id="chk_Rentinclusive" tabIndex="118" change="ChangeMaintenFee()" rollOver="label1_rollOverHandler()"/>
			<mx:DateField x="218" y="63" width="92" tabIndex="115"   id="dt_ExpiryDate" change="dt_RentalStartDate_changeHandler(event)" formatString="DD/MM/YYYY" yearNavigationEnabled="true"/>
			<mx:Label x="80" y="66" text="Expiry Date"/>
			<s:CheckBox x="283" y="3" label="InActive" id="chk_Active" change="chk_Active_changeHandler(event)"/>
		</s:BorderContainer>
		<s:BorderContainer x="55" y="23" width="419" height="420" visible="false" backgroundColor="#fbf9f9" borderVisible="false" id="Brd_AgreementDetails1">
			<s:Label x="201" y="87" text="*" color="#eb1c24"/>
			<s:Label x="74" y="206" text="*" color="#eb1c24" visible="false"/>
			<mx:Label x="0" y="164" text="Rental Details" color="#eb1c24"/>
			<mx:Label x="60" y="92" text="Notice Period (In Months)"/>
			<mx:Label x="60" y="127" text="Lock In Period (In Months)"/>
			<mx:Label x="60" y="198" text="Escalation %"/>
			<mx:Label x="60" y="240" text="Escalation"/>
			<mx:Label x="60" y="255" text="Period"/>
			<mx:Label x="20" y="208" text="End Date" visible="false"/>
			<mx:DateField x="180" y="207" width="92" tabIndex="121" id="dt_EndDate" formatString="DD/MM/YYYY" visible="false" >
				
			</mx:DateField>
			<s:TextInput x="220" y="92.5" width="183" tabIndex="112" id="txt_NoticePeriod" maxChars="5" prompt="Notice Period (In Months)" restrict="0-9" textAlign="right"/>
			<s:TextInput x="220" y="127.5" width="183" tabIndex="113" id="txt_LockPeriod" maxChars="5" prompt="Lock In Period (In Months)" restrict="0-9" textAlign="right"/>
			<s:TextInput x="150" y="202.5" width="102" prompt="Escalation %" id="txt_Escalation" tabIndex="119" restrict="0-9." textAlign="right"/>
			<s:TextInput x="150" y="240.5" width="102" prompt="Escalationperiod" focusOut="txt_Escalationperiod_focusOutHandler(event)" id="txt_Escalationperiod" tabIndex="119" restrict="0-9" textAlign="right"/>
			<mx:DataGrid id="Grd_Agreement" x="0" y="288" width="400" height="125" tabIndex="10"
						 dragEnabled="true" draggableColumns="false" dragMoveEnabled="true"
						 dropEnabled="true" editable="true" focusEnabled="false" doubleClickEnabled="true" 					 
						 textAlign="center" borderVisible="true" >
				<mx:columns>				
					<mx:DataGridColumn dataField="StartDate" headerText="Start Date" 
									   width="70" editable="false"  />											
					<mx:DataGridColumn dataField="Escalation" width="50" 
									   headerText="Escalation %" editable="false" textAlign="right"/>
					<mx:DataGridColumn dataField="Rental" width="100" headerText="Rental"
									   editable="false" textAlign="right" />
					<mx:DataGridColumn dataField="EndDate" width="0" 
									   headerText="End Date" editable="false" visible="false" />
					<mx:DataGridColumn dataField="Id" width="0" visible="false"/>				
				</mx:columns>
			</mx:DataGrid>
			<WrbComp:Button_HB x="258" y="234.5" width="145" _Label="Save Escalation" click="EndDateChange()">
			</WrbComp:Button_HB>
			<mx:Label x="60" y="22" text="Date of Agreement"/>
			<s:Label x="166" y="18" text="*" color="#eb1c24"/>
			<s:Label x="155" y="56" text="*" color="#eb1c24"/>
			<mx:DateField x="230" y="21" width="92" tabIndex="110" change="dt_DateofAgreement_changeHandler(event)" id="dt_DateofAgreement" formatString="DD/MM/YYYY" yearNavigationEnabled="true"/>
			<mx:Label x="9" y="-5" text="Agreement Details" color="#eb1c24"/>
			<WrbComp:Button_HB x="258" y="192.5" width="145" _Label="Rental Deposit" click="AdvanceClick()">
			</WrbComp:Button_HB>
			<mx:DateField x="230" y="57" width="92" tabIndex="111" change="dt_startDate_changeHandler(event)"
						  id="dt_RentalStartDate" formatString="DD/MM/YYYY" yearNavigationEnabled="true"/>
			<mx:Label x="60" y="58" text="Rental Start Date"/>
			
		</s:BorderContainer>
		<s:BorderContainer x="38" y="34" width="791" height="364" visible="true"  borderVisible="false" id="Brd_AgreementDetails3" backgroundColor="#fbf9f9">
			
			<WrbComp:ProDGrid1 x="5" y="20" width="473" height="270" id="Grd_AgreementRoomDetails" visible="true"
							   _ColDataField="RoomType~RackSingle~RackDouble~RackTriple~Single~RDouble~Triple~Description~Facility~Inclusive~Tax~Amount~STRack~LTRack~LTAgreed~STAgreed~SC~Visible~Id"
							   _ColHdrText="Room Type~Single~Double~Triple~Single~Double~Triple~Description~Facility~InclusiveTax~Tax %~Amount~STRack~LTRack~LTAgreed~STAgreed~SC~Visible~Id"
							   _ColType="hlp~ntxt~ntxt~ntxt~ntxt~ntxt~ntxt~txt~txt~Chk~ntxt~ntxt~ntxt~ntxt~ntxt~ntxt~ntxt~Chk~txt"
							   _colVisible="1~1~1~1~1~1~1~1~1~1~0~0~0~1~1~1~1~1~0"
							   _ColWidth="75~60~60~60~60~60~60~75~75~80~0~0~0~70~50~50~50~70~0"
							   _editable="1~1~1~1~1~1~1~1~1~1~0~0~0~1~1~1~1~1~0"
							   _HeaderTxtLbl="true" 
							   _required="1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0"
							   _spltChar="~"
							   _tabIndex="117"
							   _DuplChk="false" 
							   _visibleColNos="18" ID="Grd_AgreementRoomDetails" _GridId="Grd_AgreementRoomDetails">
							  
			</WrbComp:ProDGrid1>
			<!--WrbComp:ProDGrid  x="38" y="34" width="797" height="270" id="Grd_AgreementRoomDetails"
							  _ColDataField="RoomType~RackSingle~RackDouble~RackTriple~Single~RDouble~Triple~Description~Facility~Inclusive~Tax~Amount~Id"
							  _ColHdrText="Room Type~Single~Double~Agreed Tariff Triple~Rack Tariff Single~Rack Tariff Double~Rack Tariff Triple~Description~Facility~Inclusive Tax~Tax %~Amount~Id"
							  _ColType="hlp~ntxt~ntxt~ntxt~ntxt~ntxt~ntxt~txt~txt~Chk~ntxt~ntxt~txt"
							  _colVisible="1~1~1~1~1~1~1~1~1~1~1~0~0"
							  _ColWidth="80~150~150~150~150~150~150~150~150~90~50~0~0"
							  _editable="1~1~1~1~1~1~1~1~1~1~1~0~0"
							  
							  _required="1~0~0~0~0~0~0~0~0~0~0~0"
							  _spltChar="~"
							  _tabIndex="117"
							  _DuplChk="false"
							  _visibleColNos="11" ID="Grd_AgreementRoomDetails" >
			</WrbComp:ProDGrid-->
			<s:Label x="80" y="5" text="     --------------Agreed Tariff----------"/>
			<s:Label x="270" y="5" text=" --------------Rack Tariff------------"/>
			<s:CheckBox x="54" y="298" label="TAC" id="chk_TAC" tabIndex="128" change="checkbox1_changeHandler()"/>
			<!--s:CheckBox x="264" y="298" label="Luxury" id="chk_Luxury" tabIndex="125" 
						change="checkbox_changeHandler()" visible="false"/-->
			<s:TextInput id="txt_TACPer" x="113" y="297" width="79" tabIndex="129" focusOut="DecimalChange('txt_TACPer')"
						 prompt="TAC %" restrict="0-9." textAlign="right" enabled="false"/>
			<s:Group x="321" y="294" width="200" height="60" id="luxury_group" visible="false" >
				<s:RadioButton x="7" y="0" width="89" height="22" label="FromRack" id="RB_Rack" 
							   change="RB_Rack_changeHandler(event)"/>
				<s:RadioButton x="104" y="0" width="89" height="22" label="FromAgreed" id="RB_Agreed" tabIndex="130" 
							   change="RB_Agreed_changeHandler(event)"/>
				<s:TextInput id="Txt_Tariff" x="31" y="31" height="21" prompt="Tariff" tabIndex="128"
						 restrict="0-9." focusOut="DecimalChange('Txt_Tariff')"/>
			</s:Group>
		</s:BorderContainer>
	</s:BorderContainer>
	<!-- Agreement End -->
	<s:BorderContainer x="1500" y="35" width="355" height="215" borderVisible="true" cornerRadius="5" id="Brd_MaintenanceFee">
		<mx:Label x="5" y="6" text="Maintenance Fee Details" color="#eb1c24"/>
		<mx:Label x="35" y="75" text="Maintenance Amount"/>
		<mx:Label x="35" y="109" text="Start Date"/>
		<mx:Label x="35" y="144" text="Paid"/>
		<mx:DateField x="174" y="108" width="92" tabIndex="125" id="dt_MaintenanceStartdate" yearNavigationEnabled="true"  formatString="DD/MM/YYYY"/>
		<s:TextInput x="174" y="75.5" width="159" prompt="Maintenance Amount" id="txt_MaintenanceAmount" focusOut=" DecimalChange('txt_MaintenanceAmount')" tabIndex="123" restrict="0-9" textAlign="right" />
		<WrbHelpComp:HelpText x="174" y="41.5" width="158" pxSetPrompt="Association Name" id="hlp_AssociationName" pxTabIndex="124">
		</WrbHelpComp:HelpText>
		<mx:Label x="35" y="41" text="Association Name"/>
		<WrbComp:Button_HB x="135" y="175" _Label="Done>>" click="MFOut.play()">
		</WrbComp:Button_HB>
		<s:DropDownList x="174" y="144" width="159" selectedItem="Please Select Paid" tabIndex="129" id="dd_Paid">
			<mx:ArrayCollection>
				<fx:String>Please Select Paid</fx:String>
				<fx:String>Monthly</fx:String>
				<fx:String>Quarterly</fx:String>
				<fx:String>Half Yearly</fx:String>
				<fx:String>Yearly</fx:String>
			</mx:ArrayCollection>
		</s:DropDownList>
	</s:BorderContainer>
	<s:BorderContainer x="1500" y="52" width="299" height="225" id="Brd_Advance" >
		<mx:Label x="13" y="13" text="Amount"/>
		<mx:Label x="13" y="48" text="Type"/>
		<mx:Label x="13" y="106" text="Chq No" id="lbl_ChqNEFT"/>
		<mx:Label x="13" y="80" text="Bank" id="lbl_bank"/>
		<mx:Label x="13" y="141" text="Date"/>
		<s:DropDownList x="68" y="48" width="201" selectedItem="Please Select Advance Type" tabIndex="129" id="dd_AdvanceType"
						change="dd_AdvanceType_changeHandler(event)">
			<mx:ArrayCollection>
				<fx:String>Please Select Advance Type</fx:String>
				<fx:String>Chq</fx:String>
				<fx:String>NEFT</fx:String>						
			</mx:ArrayCollection>
		</s:DropDownList>
		<s:TextInput x="68" y="14" width="201" id="txt_AdvanceAmount" textAlign="right" tabIndex="128" prompt="Advance Amount" restrict="0-9." focusOut=" DecimalChange('txt_AdvanceAmount')"/>
		<s:TextInput x="68" y="106.5" width="201" id="txt_ChqNo" tabIndex="131" prompt="Chq No" maxChars="16" />
		<s:TextInput x="68" y="78.5" width="201" id="txt_bank" tabIndex="130" prompt="Bank" maxChars="16" />
		<mx:DateField x="68" y="138" id="dt_AdvanceDate" yearNavigationEnabled="true" formatString="DD/MM/YYYY" tabIndex="132" selectedDate="{new Date()}"/>
		<WrbComp:Button_HB x="103" y="175" _Label="Close" click="ADOut.play()">
		</WrbComp:Button_HB>
	</s:BorderContainer>
	
</s:Application>
