<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   xmlns:WrbComp="WrbComp.*"  pageTitle="CheckIn"
			   width="100%" height="100%" creationComplete="PageLoad()"
			   keyDown="application2_keyDownHandler(event)">
	<fx:Declarations>
		<s:RadioButtonGroup id="Rdbg_Payment" change="Rdbg_Payment_changeHandler()"/>
		<s:RadioButtonGroup id="Rdbg_Discount" change="Rdbg_Discount_changeHandler()"/>
		
		<mx:NumberFormatter id="NF_Two" precision="2" rounding="nearest"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Style source = "..\\Common\\ApplicationCSS.css"/>
	<fx:Script source="..\\Common\\CommonScript.as"/>
	<fx:Script source="..\\Common\\Functions.as"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import mx.containers.Accordion;
			import mx.controls.Text;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.ColorPickerEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			import mx.graphics.codec.PNGEncoder;
			import mx.managers.PopUpManager;
			import mx.rpc.http.mxml.HTTPService;
			
			import spark.components.supportClasses.Range;
			import spark.events.IndexChangeEvent;
			public var ErrStr:String=""; 
			public static var GlobalXml:String="";
			public static var Global_AC:ArrayCollection=new ArrayCollection();
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public var Str_Image:String = "";
			public var Id:int=0,ReservationId:int=0,TaxId:int=0,TariffId:int=0,DoubleAllowedPax:int=0,SuiteAllowedPax:int=0,BookingId:int=0;
			public var Pax1:Number=0,Pax2:Number=0,Suite:Number=0,ExtraPax:Number=0,GuestId:int=0,CompanyId:int=0,ClientId:int=0,
				RoomId:int=0,StateId:int=0,SSPId:int=0,ApartmentId:int=0,BedId:int=0,UserId:int=0,RefGuestId:int=0,
				CityId:int=0,ServiceCharge:int= 0;
			public var  PropertyId:String="";
			public var Cess:Number=0,HECess:Number=0,ServiceTax:Number=0,VAT:Number=0,Tariff:Number=0;
			public var Luxuryabvper:Number=0,Luxurybelper:Number=0,LuxuryabvRs:Number=0,LuxurybelRs:Number=0;
			public var ServiceTaxAmount:Number=0,ServiceTaxblwper:Number=0;
			public var CessFlag:Boolean=true,HECessFlag:Boolean=true,LuxuryFlag:Boolean=true,ServiceTaxFlag:Boolean=true,VATFlag:Boolean=true;
			public var AC:ArrayCollection=new ArrayCollection();
			public var ArrivalDt:String="",DepartureDt:String="",Time:String="",ExpectedChkInTime:String="";
			public var Color:String="";
			public var PropertyTypeId:int=0;
			public var RoomNo:String="";
			public var GuestImage:String="";
			public var CheckStatus:String="";
			private var fileRef:FileReference = new FileReference();
			private var fileTypes:Array = new Array();
			private var imageTypes:FileFilter = new FileFilter("Images (*.jpg; *.jpeg; *.gif; *.png)" ,"*.jpg; *.jpeg; *.gif; *.png");
			private var documentTypes:FileFilter = new FileFilter("Documents (*.pdf), (*.doc), (*.rtf), (*.txt)",("*.pdf; *.doc; *.rtf, *.txt"));
			private var FILE_URL:String = "";
			public var ImageCount:Number=0;
			//public var ImageFormat:String="";
			private var urlReq:URLRequest;
			public var Save_Flag:Boolean=true; 
			public var uploadURL:URLRequest = new URLRequest();
			public var BTCSId:Number=0;
			public var Roles:String="",gname:String="";
			
			
			//public var Num1:String="",Num2:String="",Num3:String="",Num4:String="",Num5:String="";
			protected function PageLoad():void
			{
				//Global_AC=CommonClass.GBValGet(); 
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				Rdbg_Payment.selectedValue=0;Rdbg_Discount.selectedValue=1;
				Rdbg_Discount_changeHandler();Rdbg_Payment_changeHandler();
				Grd_GroupDetailsEntry._clear();
				//				Sctrl.setButtonRights("Save",true);
				//				Sctrl.setButtonRights("Refresh",true);
				//				Sctrl.setButtonRights("Delete",true);
				Txt_EmailId.editable=false;
				//	Txt_Desginat.editable=false;
				Txt_BookingLvl.editable=false;
				//	Txt_Nationality.editable=false;
				Txt_MobileNo.editable=false;
				Txt_Purpose.editable=false;
				Txt_IDProof.editable=false;
				Txt_Remarks.editable=false;
				Txt_Property.editable=false;
				Txt_AdvanceAmount.editable=false;
				//				Drp_Roomload.visible=false;
				hlp_Room.enabled=false;
				Txt_Special.editable=false;
				//	Tcl_Arrival.setTime = new Date("11/11/11,"+Time);
				Tcl_Arrival.setTime=new Date("11/11/11,12:00:00");
				
				//	Tcl_Time.setTime=new Date("11/11/11,12:00:00");
				Hlp_Reservation.dataProvider=null;
				Hlp_Reservation.enabled=false;
				btn_AvlService.enabled=false;
				lbl_RoomNo.visible=true;
				hlp_Room.visible=true;
				lbl_Apartment.visible=false;
				Txt_Apartment.visible=false;
				lbl_bed.visible=true;
				Txt_Bed.visible=true;
				Help();
				init1();
				init();
				btn_Sctrl.setButtonRights("Delete",true);
				btn_Sctrl.setButtonRights("Search",true);
				btn_Sctrl.setButtonRights("Save",true);
				btn_Sctrl.setButtonRights("Clear",true);
				//Roomload();
				//FnHelp_CustomField();
				//FnSrchHelp();
				
				var str:String = "12,12,12,12,12.00";
				//str = str.toLowerCase(); //thi$ i$ a t#%%ible exam73@
				str = str.replace(/[,]/g,"");
				//
				var start:Date=new Date();var end:Date=new Date(2015,3,1);				
				var num:Number= (end.getUTCFullYear() - start.getUTCFullYear()) * 12 +(end.getUTCMonth() - start.getUTCMonth());
				
				var assd:ArrayCollection=new ArrayCollection();
				hlp_Property.dataProvider=assd;
			}
			
			public function Help():void
			{				
				
		//		useWeb("GuestCheckIn","PageLoad_CUSTOM",[GlobalXml,"PageLoad","",0,0,0,0,0,0,65]);
				useWeb("GuestCheckIn","PageLoad_CUSTOM",[GlobalXml,"PageLoad","",0,0,0,0,0,0,Global_AC[0].UsrId]);
				//			useWeb("GuestCheckIn","PageLoad_CUSTOM",[GlobalXml,"PageLoad","",0,0,0,0,0,0,0]);
			}
			
			protected function FnHelp_CustomField():void
			{
				//			useWeb("GuestCheckIn","CustomFieldLoad_CUSTOM",[GlobalXml,'CustomFieldLoad','',0,ClientId,0]);				
			}
			
			protected function application1_keyDownHandler(event:KeyboardEvent):void
			{
				//				Sctrl.KeyHandler(event);
			}
			
			public function FnOk(event:CloseEvent):void
			{
				if(event.detail==Alert.OK)
				{
					Hlp_Name._setFocus();
				}
			}
			
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{
				if (Ds_Objects.currentTarget.description.toString() == "CustomFieldLoad_CUSTOM")
				{
					var y:int=0,Y1:int=0,X1:int=0;
					var LblName:String="",LblValue:String="",LblMandatory:String="";
					var LblCustomFieldId:String="",LblId:String="";
					var value:ArrayCollection=new ArrayCollection();
					var value1:ArrayCollection=new ArrayCollection();					
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						value1=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						y=Y1+10;					
						for(var j:int=0;j<value1.length;j++)
						{	 
							LblName=value1[j].FieldName;							
							LblValue=value1[j].FieldValue;
							LblMandatory=value1[j].Mandatory;
							LblCustomFieldId=value1[j].FieldId;
							LblId=value1[j].Id;
							if(LblMandatory == "true")
							{
								LblMandatory = "*";
							}
							else
							{
								LblMandatory = "";
							}
							CreateControl("Lbl",j,0,y,true,LblName,0);
							CreateControl("Lbl1",j,165,y,true,LblMandatory,0);
							CreateControl("txt",j,180,y,true,LblValue,0);					 
							CreateControl("Lbl",j,200,y,false,LblCustomFieldId,0);
							CreateControl("Lbl",j,220,y,false,LblId,0);
							y=y+40;							
							X1=j						
						}
						Y1=y+40;
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						value=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
						if(value1.length > 0)
						{
							y=Y1-40;
						}
						else
						{
							y=Y1+10;
						}
						for(var i:int=0;i<value.length;i++)
						{	 
							LblName=value[i].FieldName;							
							LblValue=value[i].FieldValue;
							LblMandatory=value[i].Mandatory;
							LblCustomFieldId=value[i].FieldId;
							LblId=value[i].Id;
							if(LblMandatory == "true")
							{
								LblMandatory = "*";
							}
							else
							{
								LblMandatory = "";
							}
							CreateControl("Lbl",i,0,y,true,LblName,0);
							CreateControl("Lbl1",i,165,y,true,LblMandatory,0);
							CreateControl("Ddl",i,180,y,true,LblValue,0);					 
							CreateControl("Lbl",i,200,y,false,LblCustomFieldId,0);
							CreateControl("Lbl",i,220,y,false,LblId,0);
							y=y+40;							
							X1=i						
						}
						Y1=y+40;
					}
					
				}
				
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{						
						BTCSId=Ds_Objects.result.Tables.Table.Rows[0].Id
					//	Id=Ds_Objects.result.Tables.Table.Rows[0].Id
						
					}
					if(FilePath.text!="")
					{
						init();	
						uploadFiles();
					}	
					if (Id == 0)
					{
						
						alignAlert(Alert.show("Guest Checked In Successfully.","Message !",Alert.OK,
							null, FnOk,	iconTickLarge, Alert.OK),10,"");
					}
					else
					{
						alignAlert(Alert.show("Guest Checked In Updated Successfully.","Message !",Alert.OK,
							null, FnOk,	iconTickLarge, Alert.OK),10,"");
					}
					FnClr();					
				} 
				if (Ds_Objects.currentTarget.description.toString() == "PageLoad_CUSTOM")
				{	
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Txt_CheckInNo.text=Ds_Objects.result.Tables.Table.Rows[0].CheckInNo;						
					}
					if(Ds_Objects.result.Tables.Table2.Rows.length == 1)
					{
						hlp_Property.text=Ds_Objects.result.Tables.Table2.Rows[0].PropertyName; 
						PropertyId=Ds_Objects.result.Tables.Table2.Rows[0].ZId;
						Hlp_Reservation.enabled=true;
						useWeb("GuestCheckIn","Guest_CUSTOM",[GlobalXml,'GuestLoad','',0,0,0,0,PropertyId,SSPId,Global_AC[0].UsrId]);
					}
					if(Ds_Objects.result.Tables.Table1.Rows.length > 1)
					{
						hlp_Property.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
				//		hlp_Property.text=Ds_Objects.result.Tables.Table1.Rows[0].PropertyName; 
				//		PropertyId=Ds_Objects.result.Tables.Table1.Rows[0].ZId;
						
					}
					hlp_Property._setFocus();
					
				}
				
				if (Ds_Objects.currentTarget.description.toString() == "Guest_CUSTOM")
				{
					Hlp_Reservation.dataProvider=null;
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{  
						Hlp_Reservation.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						PropertyId = Ds_Objects.result.Tables.Table.Rows[0].PropertyId;	
					}
					Hlp_Reservation._setFocus();
					
					//					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					//					{  
					//						//	hlp_Room.text = Ds_Objects.result.Tables.Table1.Rows[0].RoomType1;
					//						Grid_Service.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					//					}
					
				}
				
				if (Ds_Objects.currentTarget.description.toString() == "Room_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length == 1)
					{ 
						Txt_BookingLvl.text=Ds_Objects.result.Tables.Table.Rows[0].EmpCode;
						Txt_Nationality.text=Ds_Objects.result.Tables.Table.Rows[0].Nationality;
		//				Txt_EmailId.text=Ds_Objects.result.Tables.Table.Rows[0].EmailId;
						//	Txt_MobileNo.text=Ds_Objects.result.Tables.Table.Rows[0].MobileNo;
						hlp_Room.text = Ds_Objects.result.Tables.Table.Rows[0].RoomType;
						
						Txt_GuestName.text = Ds_Objects.result.Tables.Table.Rows[0].Name;
						Txt_ClientName.text = Ds_Objects.result.Tables.Table.Rows[0].ClientName;
						Txt_Special.text = Ds_Objects.result.Tables.Table.Rows[0].Designation;
						Txt_Tariff.text = NF_Two.format(Ds_Objects.result.Tables.Table.Rows[0].Tariff);
						Txt_Occupancy.text = Ds_Objects.result.Tables.Table.Rows[0].Occupancy;
						if(Txt_Occupancy.text=='Single')
						{
							Txt_RackTariffsingle.text=Ds_Objects.result.Tables.Table.Rows[0].SingleTariff;
							Txt_RackTariffDouble.text='0.00';
						}
						else
						{
							Txt_RackTariffsingle.text='0.00';
							Txt_RackTariffDouble.text=Ds_Objects.result.Tables.Table.Rows[0].DoubleTariff;
						}
						Dt_ChkoutDate.text = Ds_Objects.result.Tables.Table.Rows[0].CheckOutDate;
						Id = Ds_Objects.result.Tables.Table.Rows[0].BookingAssGuestId;	
						//Dt_ChkoutDate.text = Ds_Objects.result.Tables.Table.Rows[0].CheckOutDate;
						Txt_Property.text=Ds_Objects.result.Tables.Table.Rows[0].PropertyName;
						BookingId = Ds_Objects.result.Tables.Table.Rows[0].BookingId;	
						RoomId = Ds_Objects.result.Tables.Table.Rows[0].RoomId;	
						StateId = Ds_Objects.result.Tables.Table.Rows[0].StateId;	
						PropertyId = Ds_Objects.result.Tables.Table.Rows[0].PropertyId;	
						Dt_ArrivalDate.text = Ds_Objects.result.Tables.Table.Rows[0].CheckInDate;
						Txt_PropertyType.text = Ds_Objects.result.Tables.Table.Rows[0].PropertyType;
						//	Dt_ChkoutDate.enabled=true;
						
//			Date Restrict
						var sdfs:String=Dt_ArrivalDate.text;						
						var D:String=sdfs.substr(0,2);
						var M:String=sdfs.substr(3,2);
						var Y:String=sdfs.substr(6,10);
						var RangeMiddle:String=Y+'/'+M+'/'+D;
						var RangeEnd:String=Y+'/'+M+'/'+String(Number(D)+1);
						var RangeStart:String=Y+'/'+M+'/'+String(Number(D)-1);
						Dt_ArrivalDate.selectableRange = 
							{rangeStart:new Date(RangeStart),rangeEnd:new Date(RangeEnd),RangeMiddle:new Date(RangeMiddle)};
						Dt_ArrivalDate.selectedDate=new Date(RangeMiddle);
						
						
						//	Tcl_Arrival.setTime = Ds_Objects.result.Tables.Table.Rows[0].ExpectedChkInTime;
						Tcl_Arrival.setTime = new Date("11/11/11,"+Ds_Objects.result.Tables.Table.Rows[0].ExpectedChkInTime);
						Ddl_AMPM.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].AMPM;
						Txt_BookingCode.text = Ds_Objects.result.Tables.Table.Rows[0].BookingCode;
						var RB:String=Ds_Objects.result.Tables.Table.Rows[0].TariffPaymentMode;
						if(RB!="")
						{
							if( RB=="Direct")
							{
								Direct.selected=true;
							}
							else if(RB=="Bill to Company (BTC)")
							{
								BTC.selected=true
							}
							else if(RB=="Bill to Client")
							{
								BTC.selected=true
							}
						}
						
						
		//				Txt_MobileNo.text = Ds_Objects.result.Tables.Table.Rows[0].MobileNo;
						Txt_Special.text = Ds_Objects.result.Tables.Table.Rows[0].Designation;
						Txt_Nationality.text = Ds_Objects.result.Tables.Table.Rows[0].Nationality;
						Txt_Apartment.text=Ds_Objects.result.Tables.Table.Rows[0].ApartmentType;
						Txt_Bed.text=Ds_Objects.result.Tables.Table.Rows[0].BedType;
						ApartmentId = Ds_Objects.result.Tables.Table.Rows[0].ApartmentId;	
						BedId = Ds_Objects.result.Tables.Table.Rows[0].BedId;
						Txt_SingleMarkup.text = Ds_Objects.result.Tables.Table.Rows[0].SingleMarkupAmount;
						Txt_DoubleMarkup.text = Ds_Objects.result.Tables.Table.Rows[0].DoubleMarkupAmount;
						ClientId = Ds_Objects.result.Tables.Table.Rows[0].ClientId;
						CityId = Ds_Objects.result.Tables.Table.Rows[0].CityId;
						ServiceCharge = Ds_Objects.result.Tables.Table.Rows[0].ServiceCharge;
						Txt_TariffPaymentMode.text=Ds_Objects.result.Tables.Table.Rows[0].TariffPaymentMode;
						//						Direct.selected = Ds_Objects.result.Tables.Table.Rows[0].TariffPaymentMode;
						//						Rdbg_Payment.selectedValue = Ds_Objects.result.Tables.Table.Rows[0].ServicePaymentMode;
						//			
						if(RoomId == 0)
						{
							lbl_RoomNo.visible=false;
							hlp_Room.visible=false;
							Txt_Bed.visible=false;
							lbl_bed.visible=false;
						}
						else
						{
							lbl_RoomNo.visible=true;
							hlp_Room.visible=true;
							Txt_Bed.visible=true;
							lbl_bed.visible=true;
						}
						if(ApartmentId == 0)
						{
							Txt_Apartment.visible=false;
							lbl_Apartment.visible=false;
						}
						else
						{
							Txt_Apartment.visible=true;
							lbl_Apartment.visible=true;
						}
						//						if(BedId == 0)
						//						{
						//							Txt_Bed.visible=false;
						//							lbl_bed.visible=false;
						//							lbl_RoomNo.visible=false;
						//							hlp_Room.visible=false;
						//						}
						//						else
						//						{
						//							Txt_Bed.visible=true;
						//							lbl_bed.visible=true;S
						//							lbl_RoomNo.visible=true;
						//							hlp_Room.visible=true;
						//						}
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{  
						//	hlp_Room.text = Ds_Objects.result.Tables.Table1.Rows[0].RoomType1;
						Grid_Service.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					}
					//					if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
					//					{  
					//						//	hlp_Room.text = Ds_Objects.result.Tables.Table1.Rows[0].RoomType1;
					//						hlp_Room.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
					//					}
					
					
				}
				
				
				if (Ds_Objects.currentTarget.description.toString() == "GUESTIMAGE_CUSTOM")
				{	
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Str_Image="";
						Str_Image=Ds_Objects.result.Tables.Table.Rows[0].Image;
						var Ary_Tmp1:Array = Str_Image.split(",");
						var BAry_Tmp1:ByteArray = new ByteArray();
						for (var t1:int = 0; t1 < Ary_Tmp1.length; t1++)
						{
							BAry_Tmp1[t1] = Ary_Tmp1[t1];
						}
						Image.source = BAry_Tmp1;						
					}
					else
					{
						Image.source = "Assets/user.jpg";
					}
				}
				
				if (Ds_Objects.currentTarget.description.toString() == "Search_CUSTOM")
				{
					lbl_RoomNo.visible=true;
					//			Drp_Roomload.visible=true;
					Str_Image="";
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Hlp_Reservation.text = Ds_Objects.result.Tables.Table.Rows[0].ChkInGuest;
						hlp_Property.text = Ds_Objects.result.Tables.Table.Rows[0].Property;
						hlp_Room.text= Ds_Objects.result.Tables.Table.Rows[0].RoomNo;
						Txt_IDProof.text = Ds_Objects.result.Tables.Table.Rows[0].IdProof;
						Txt_BookingLvl.text = Ds_Objects.result.Tables.Table.Rows[0].EmpCode;
						Txt_EmailId.text = Ds_Objects.result.Tables.Table.Rows[0].EmailId;
						Txt_Nationality.text =  Ds_Objects.result.Tables.Table.Rows[0].Nationality;
						Txt_Property.text = Ds_Objects.result.Tables.Table.Rows[0].Property;
						Txt_CheckInNo.text = Ds_Objects.result.Tables.Table.Rows[0].CheckInNo;						
						Txt_MobileNo.text = Ds_Objects.result.Tables.Table.Rows[0].MobileNo;
						Txt_GuestName.text=Ds_Objects.result.Tables.Table.Rows[0].GuestName;
						Txt_ClientName.text=Ds_Objects.result.Tables.Table.Rows[0].ClientName;
						Txt_BookingCode.text=Ds_Objects.result.Tables.Table.Rows[0].BookingCode;
						Txt_Occupancy.text=Ds_Objects.result.Tables.Table.Rows[0].Occupancy;
						Txt_RackTariffsingle.text=Ds_Objects.result.Tables.Table.Rows[0].RackTariffSingle;
						Txt_RackTariffDouble.text=Ds_Objects.result.Tables.Table.Rows[0].RackTariffDouble;
						GuestId = Ds_Objects.result.Tables.Table.Rows[0].GuestId;
						RefGuestId = Ds_Objects.result.Tables.Table.Rows[0].RefGuestId;
						PropertyId = Ds_Objects.result.Tables.Table.Rows[0].PropertyId;
						BookingId = Ds_Objects.result.Tables.Table.Rows[0].BookingId;
						StateId = Ds_Objects.result.Tables.Table.Rows[0].StateId;
						RoomId = Ds_Objects.result.Tables.Table.Rows[0].RoomId;
						ApartmentId = Ds_Objects.result.Tables.Table.Rows[0].ApartmentId;	
						BedId = Ds_Objects.result.Tables.Table.Rows[0].BedId;	
						Txt_Apartment.text=Ds_Objects.result.Tables.Table.Rows[0].ApartmentType;
						Txt_Bed.text=Ds_Objects.result.Tables.Table.Rows[0].BedType;
						Txt_Type.text=Ds_Objects.result.Tables.Table.Rows[0].Type;
						Txt_PropertyType.text=Ds_Objects.result.Tables.Table.Rows[0].PropertyType;
						FilePath.text=Ds_Objects.result.Tables.Table.Rows[0].GuestImage;
						CheckStatus=Ds_Objects.result.Tables.Table.Rows[0].CheckStatus;
						Txt_Tariff.text=NF_Two.format(Ds_Objects.result.Tables.Table.Rows[0].Tariff);
						//				Drp_Roomload.prompt=RoomNo;
						Dt_ArrivalDate.text = Ds_Objects.result.Tables.Table.Rows[0].ArrivalDate;
						Ddl_AMPM.selectedItem= Ds_Objects.result.Tables.Table.Rows[0].TimeType;
						var asd:String=Dt_ArrivalDate.text;
						var Y:String = asd.substr(6,10);
						var M:String = asd.substr(3,2);
						var D:String = asd.substr(0,2);
						var RangeStart:String = Y+'/'+M+'/'+D;
						
						Tcl_Arrival.setTime = new Date("11/11/11,"+Ds_Objects.result.Tables.Table.Rows[0].ArrivalTime);
						Dt_ChkoutDate.text = Ds_Objects.result.Tables.Table.Rows[0].ChkoutDate;
						var asd:String=Dt_ArrivalDate.text;
						var Y:String = asd.substr(6,10);
						var M:String = asd.substr(3,2);
						var D:String = asd.substr(0,2);
						var RangeStart:String = Y+'/'+M+'/'+D;
						Txt_Remarks.text = Ds_Objects.result.Tables.Table.Rows[0].Designation;
						Rdbg_Payment.selectedValue = Ds_Objects.result.Tables.Table.Rows[0].Direct;
						Direct.selected = Ds_Objects.result.Tables.Table.Rows[0].Direct;
						BTC.selected = Ds_Objects.result.Tables.Table.Rows[0].BTC;
						Txt_SingleMarkup.text = Ds_Objects.result.Tables.Table.Rows[0].SingleMarkupAmount;
						Txt_DoubleMarkup.text = Ds_Objects.result.Tables.Table.Rows[0].DoubleMarkupAmount;
						ClientId = Ds_Objects.result.Tables.Table.Rows[0].ClientId;
						CityId = Ds_Objects.result.Tables.Table.Rows[0].CityId;
						ServiceCharge = Ds_Objects.result.Tables.Table.Rows[0].ServiceCharge;
						Txt_TariffPaymentMode.text=Ds_Objects.result.Tables.Table.Rows[0].TariffPaymentMode;
						
						Id = Ds_Objects.result.Tables.Table.Rows[0].Id;						
						Rdbg_Payment_changeHandler();						
						if(RoomId == 0)
						{
							lbl_RoomNo.visible=false;
							hlp_Room.visible=false;
							Txt_Bed.visible=false;
							lbl_bed.visible=false;
						}
						else
						{
							lbl_RoomNo.visible=true;
							hlp_Room.visible=true;
							Txt_Bed.visible=true;
							lbl_bed.visible=true;
						}
						if(ApartmentId == 0)
						{
							Txt_Apartment.visible=false;
							lbl_Apartment.visible=false;
						}
						else
						{
							Txt_Apartment.visible=true;
							lbl_Apartment.visible=true;
						}
						//						if(BedId == 0)
						//						{
						//							Txt_Bed.visible=false;
						//							lbl_bed.visible=false;
						//							lbl_RoomNo.visible=false;
						//							hlp_Room.visible=false;
						//						}
						//						else
						//						{
						//							Txt_Bed.visible=true;
						//							lbl_bed.visible=true;
						//							lbl_RoomNo.visible=true;
						//							hlp_Room.visible=true;
						//						}
						
						Str_Image=Ds_Objects.result.Tables.Table.Rows[0].Image;
						if(Str_Image!="")
						{
							var Ary_Tmp:Array = Str_Image.split(",");
							var BAry_Tmp:ByteArray = new ByteArray();
							for (var t:int = 0; t < Ary_Tmp.length; t++)
							{
								BAry_Tmp[t] = Ary_Tmp[t];
							}				
							Image.source = BAry_Tmp;
						}
						else{Image.source = "Assets/user.jpg";}		
						
						btn_AvlService.enabled=true;
						if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
						{  
							//	hlp_Room.text = Ds_Objects.result.Tables.Table1.Rows[0].RoomType1;
							Grid_Service.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
						}
					}
				}
				
				if (Ds_Objects.currentTarget.description.toString() == "ImageUpload_CUSTOM")
				{
					FilePath.text="";
					
					BTCSId=0;
				}	
			}
			
			private static var CtrlID:ArrayCollection=new ArrayCollection();
			public function CreateControl(_CtrlType:String,_i:int,_x:int,_y:int,visble:Boolean,LblName:String,maxChars:int):void
			{
				//				var Ar_Value:Array=new Array();
				//				var Ac_Value:ArrayCollection=new ArrayCollection();
				//				if(_CtrlType == "Ddl")
				//				{ 
				//					var Str:String=LblName;
				//					Ar_Value=Str.split("|");
				//					for(var i:int=0;i<Ar_Value.length;i++)
				//					{
				//						Ac_Value.addItemAt({label:Ar_Value[i]},i);
				//					}					
				//				}
				//				var NewControl:Object;					
				//				switch(_CtrlType)
				//				{
				//					case "Lbl":NewControl = new mx.controls.Label();
				//						NewControl.id = "lbl" + _i;
				//						NewControl.text= LblName;
				//						NewControl.visible=visble;
				//						NewControl.x =_x;
				//						NewControl.y=_y;	
				//						TopCntl.addElement(NewControl as mx.controls.Label)
				//						break;
				//					case "Lbl1":NewControl = new mx.controls.Label;
				//						NewControl.id = "lbl1" + _i;
				//						NewControl.text= LblName;
				//						NewControl.visible=visble;
				//						NewControl.setStyle("color","#F90808");
				//						NewControl.x =_x;
				//						NewControl.y=_y;	
				//						TopCntl.addElement(NewControl as mx.controls.Label)
				//						break;
				//					case "txt":NewControl = new TextInput();
				//						NewControl.id = "txt" + _i;
				//						NewControl.text = LblName;
				//						NewControl.maxChars =maxChars;
				//						NewControl.visible = visble;
				//						NewControl.width = 200;
				//						NewControl.height = 23;
				//						NewControl.x =_x;
				//						NewControl.y=_y;
				//						TopCntl.addElement(NewControl as TextInput)
				//						break;
				//					case "Ddl":NewControl = new DropDownList();
				//						NewControl.id = "Ddl" + _i;						
				//						NewControl.visible = visble;
				//						NewControl.width = 200;
				//						NewControl.height = 23;
				//						NewControl.x =_x;
				//						NewControl.y=_y;
				//						NewControl.dataProvider=Ac_Value;
				//						NewControl.prompt="Select";
				//						NewControl.addEventListener(Event.CHANGE,Ddl_Change);
				//						TopCntl.addElement(NewControl as DropDownList)
				//						break;	
				//				}
				//				CtrlID.addItem({ID:NewControl.id,className:_CtrlType});
				//				
			}
			
			public function Ddl_Change(event:Event):void
			{
				var Ddl_Id:String=event.target.id;				
				event.target.prompt=event.currentTarget.selectedItem.label;
			}
			
			public function httpResult(event:ResultEvent):void 
			{
				var result:Object = event.result;
			}
			
			public function httpFault(event:FaultEvent):void 
			{
				var faultstring:String = event.fault.faultString;
				Alert.show(faultstring);				
			}
			private function initCamera():void 
			{			
				var Cam:Camera = Camera.getCamera();
				if (Cam) 
				{
					VD.attachCamera(Cam);                    
				} 
				else 
				{
					/*alignAlert(Alert.show("Oops, we can't find your camera.","Alert Message !",Alert.OK, 
					null, FnOk,	iconWarning, Alert.OK),10,"");*/
				}				
			}			
			
			private function TakePicture():void 
			{	
				var bmd:BitmapData = new BitmapData(100,100);
				bmd.draw(VD)				
				Image.source = new Bitmap(bmd);
				var PNG:PNGEncoder=new PNGEncoder();
				var BA:ByteArray=PNG.encode(bmd);
				var Len:int=BA.length;
				var Tmp:String = "";
				Str_Image="";
				for(var i:int=0;i<Len;i++)
				{
					Tmp=BA[i]; 
					Str_Image += Tmp+",";					
				}			 
			}			
			
			protected function FnSave():void
			{
				var ErrStr:String="";var Flag:Boolean=true;
				if(hlp_Property.text=="")
				{
					if(Flag==true)
					{
						hlp_Property.setFocus();Flag=false;
					}
					ErrStr=ErrStr+"* Property is Required.\n";					
				}
				if(Hlp_Reservation.text=="")
				{
					if(Flag==true)
					{
						Hlp_Reservation.setFocus();Flag=false;
					}
					ErrStr=ErrStr+"* Guest Name is Required.\n";					
				}
				if(Dt_ArrivalDate.text=="")
				{
					if(Flag==true)
					{
						Dt_ArrivalDate.setFocus();Flag=false;
					}
					ErrStr=ErrStr+"*  Arrival Date is Required.\n";					
				}
				if(Txt_MobileNo.text=="")
				{
					if(Flag==true)
					{
						Txt_MobileNo.setFocus();Flag=false;
					}
					ErrStr=ErrStr+"*  Mobile Number is Required.\n";					
				}
				if(Txt_IDProof.text=="")
				{
					if(Flag==true)
					{
						Txt_IDProof.setFocus();Flag=false;
					}
					ErrStr=ErrStr+"*  ID Proof is Required.\n";
				}
				
				
				if(ErrStr!="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
					return;					
				}
				
//				if(Hlp_Reservation.text==gname)
//				{
//					var guest:String =gname;
//					var guestn=Hlp_Reservation.text;
//					
//				}
//				else
//				{
//					var guest:String =gname;
//					var guestn=Hlp_Reservation.text;
//					alignAlert(Alert.show("Do you want Generate ?", "Warning",Alert.YES | Alert.NO, null,
//						FnUpdate, iconWarning, Alert.NO),10,"");
//					
//				}
				var Ac_Hdr:ArrayCollection=new ArrayCollection
					([{
						
						RoomId:RoomId,StateId:StateId,Id:Id,PropertyId:PropertyId,BookingId:BookingId,
						GuestId:GuestId,RefGuestId:RefGuestId,
						ChkInGuest:Hlp_Reservation.text,CheckInNo:Txt_CheckInNo.text,ArrivalDate:Dt_ArrivalDate.text,
						ChkoutDate:Dt_ChkoutDate.text,ArrivalTime:Tcl_Arrival.getTime(),RoomNo:hlp_Room.text,
						GuestName:Txt_GuestName.text,ClientName:Txt_ClientName.text,Property:Txt_Property.text,
						MobileNo:Txt_MobileNo.text,EmailId:Txt_EmailId.text,Designation:Txt_Remarks.text,
						Nationality:Txt_Nationality.text,IdProof:Txt_IDProof.text,ChkinAdvance:Txt_AdvanceAmount.text,
						Tariff:Txt_Tariff.text,Direct:Direct.selected,BTC:BTC.selected,EmpCode:Txt_BookingLvl.text,
						BookingCode:Txt_BookingCode.text,TimeType:Ddl_AMPM.selectedItem,Occupancy:Txt_Occupancy.text,
						RackTariffSingle:Txt_RackTariffsingle.text,RackTariffDouble:Txt_RackTariffDouble.text,
						ApartmentId:ApartmentId,BedId:BedId,ApartmentType:Txt_Apartment.text,BedType:Txt_Bed.text,
						Type:Txt_Type.text,PropertyType:Txt_PropertyType.text,CheckStatus:"CheckIn",
						GuestImage:FilePath.text,SingleMarkupAmount:Txt_SingleMarkup.text,
						DoubleMarkupAmount:Txt_DoubleMarkup.text,ClientId:ClientId,CityId:CityId,ServiceCharge:ServiceCharge,
						TariffPaymentMode:Txt_TariffPaymentMode.text
					}]);
				var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");		
				useWeb("GuestCheckIn","Save_CUSTOM",[GlobalXml,HdrXml,Str_Image]);
			}
			
			
			
			protected function FnClr():void
			{
				Txt_CheckInNo.text="";Hlp_Name.fnClear();
				Txt_IDProof.text="";
				Txt_AdvanceAmount.text="";
				hlp_Room.dataProvider=null;
				hlp_Room.fnClear();
				Txt_Remarks.text="";	
				Txt_Tariff.text="";
				Txt_ClientName.text="";
				hlp_Property.dataProvider=null;
				hlp_Property.fnClear();
				Hlp_Reservation.dataProvider=null;
				Hlp_Reservation.fnClear();
				Tcl_Arrival.setTime=new Date();
				Dt_ChkoutDate.text="";
				Tcl_Arrival.enabled=false;
				Txt_EmailId.text="";
				Txt_BookingLvl.text="";
				Txt_GuestName.text="";
				Txt_Special.text="";
				Txt_Occupancy.text="";
				Txt_RackTariffsingle.text="";
				Txt_RackTariffDouble.text="";
				Txt_Nationality.text="";Txt_MobileNo.text="";
				Txt_Remarks.text="";Txt_AdvanceAmount.text;Txt_Property.text="";
				Id=0;
				TariffId=0;
				Txt_EmailId.editable=false;
				Txt_BookingLvl.editable=false;
				Txt_Nationality.editable=false;
				Txt_MobileNo.editable=false;
				Txt_Purpose.editable=false;
				Txt_IDProof.editable=false;
				Txt_Remarks.editable=false;
				Txt_AdvanceAmount.editable=false;
				Txt_Property.editable=false;
				Txt_ClientName.editable=false;
				Txt_Special.editable=false;
				Txt_Occupancy.editable=false;
				//	Dt_ArrivalDate.selectedDate=new Date();
				Dt_ArrivalDate.enabled =false;
				Dt_ArrivalDate.text="";
				Txt_BookingCode.text="";
				Image.source="";
				//			Drp_Roomload.visible=false;
				//			Drp_Roomload.selectedItem="";
				Grid_Service.dataProvider=null;
				btn_AvlService.enabled=false;
				Txt_Apartment.text="";
				Txt_Bed.text="";
				ApartmentId=0,BedId=0,RoomId=0,GuestId=0,BookingId=0;	
				Txt_Type.text="";
				Txt_PropertyType.text="";
				Txt_Apartment.visible=false;
				lbl_Apartment.visible=false;
				Txt_SingleMarkup.text="";
				Txt_DoubleMarkup.text="";
				Help();				
				FnHelp_CustomField();
				GuestImage="";
				FilePath.text="";
				CityId=0;
				ClientId=0;
				ServiceCharge=0;
				Txt_TariffPaymentMode.text="";
				
			}
			
			public function OnSelectionName():void
			{
				if(Hlp_Name.selected())
				{
					Hlp_Name.text=Hlp_Name.Select_Row.Name;
					Id=Hlp_Name.Select_Row.Id;	
					if(Hlp_Name.Select_Row.EmpCode !=0)
					{
						Txt_BookingLvl.text=Hlp_Name.Select_Row.EmpCode;
					}
					else if(Hlp_Name.Select_Row.EmpCode ==0)
					{
						Txt_BookingLvl.text=Hlp_Name.Select_Row.EmpCode;
					}
					Txt_EmailId.text=Hlp_Name.Select_Row.EmailId;
					Txt_MobileNo.text=Hlp_Name.Select_Row.MobileNo;
				}					
			}
			
			
			public function OnSelectionBooking():void
			{
				//Hlp_Reservation.dataProvider=null;
				if(Hlp_Reservation.selected())
				{
					Hlp_Reservation.text=Hlp_Reservation.Select_Row.CheckInGuest;	
					Id = Hlp_Reservation.Select_Row.BookingAssGuestId;	
				  gname=Hlp_Reservation.Select_Row.CheckInGuest;
					//	Id=Hlp_Reservation.Select_Row.Id;
					ClientId=Hlp_Reservation.Select_Row.ClientId;
					//	Txt_Property.text=Hlp_Reservation.Select_Row.Property;
					PropertyId=Hlp_Reservation.Select_Row.PropertyId;
					//Txt_Occupancy.text=Hlp_Reservation.Select_Row.Occupancy;
					var	GuestId1:String="";
					var GuestArr:ArrayCollection=new ArrayCollection();
					var GuestArrNew:Array=new Array();
					//var Len::int=GuestId1.length;
					var TypeLevel:String =""
					TypeLevel=Hlp_Reservation.Select_Row.TYPE;
					GuestId1=Hlp_Reservation.Select_Row.GuestId;
					//GuestArr=GuestId1.toString();
					GuestArrNew= GuestId1.split(/\,+/);
					var Len:int=GuestArrNew.length-1;
					var Ac_Hdr:ArrayCollection=new ArrayCollection
					for(var i:int=0;i<=Len;i++)
					{
						//if(GuestId1=="")
						//	{
						var gid:String=GuestArrNew[i];
						Ac_Hdr.addItem(GuestArrNew[i])
						
						//	}
					}
					GuestId=Number(gid.toString());
					//var RefGuestId1:String="";
					RefGuestId=Hlp_Reservation.Select_Row.RefGuestId;
					BookingId=Hlp_Reservation.Select_Row.BookingId;
					RoomId=Hlp_Reservation.Select_Row.RoomId;
					ApartmentId=Hlp_Reservation.Select_Row.ApartmentId;
					BedId=Hlp_Reservation.Select_Row.BedId;
					Txt_Type.text=Hlp_Reservation.Select_Row.TYPE;
					Txt_EmailId.text=Hlp_Reservation.Select_Row.Email;
					Txt_MobileNo.text=Hlp_Reservation.Select_Row.MobileNo;
					
					lbl_RoomNo.visible=true;
					Tcl_Arrival.setTime = new Date("11/11/11,"+ExpectedChkInTime);
					
					useWeb("GuestCheckIn","Room_CUSTOM",[GlobalXml,'ROOMLOAD',TypeLevel,BookingId,Id,RoomId,GuestId,PropertyId,SSPId,0]);
					//	useWeb("GuestCheckIn","Room_CUSTOM1",[GlobalXml,'RoomLoad1','',0,0,0,0]);
					Txt_IDProof.editable=true;
					Txt_AdvanceAmount.editable=true;
					Tcl_Arrival.enabled=true;
					Ddl_AMPM.enabled=true;
					hlp_Room.enabled=true;
					Dt_ArrivalDate.enabled=true;
					Txt_MobileNo.editable=true;
					Txt_Special.editable=true;
					Txt_Nationality.editable=true;
					btn_AvlService.enabled=true;
					Txt_EmailId.editable=false;
				}
				else
				{
					
					hlp_Room.enabled=false;
					Txt_EmailId.editable=false;
					Txt_Desginat.editable=false;
					Txt_BookingLvl.editable=false;
					Txt_Nationality.editable=false;
					Txt_MobileNo.editable=true;
					Txt_Purpose.editable=false;
					Txt_IDProof.editable=true;
					Txt_Remarks.editable=false;
					Txt_AdvanceAmount.editable=false;
					Dt_ArrivalDate.editable=false;
					Txt_IDProof.editable=false;
					Txt_Property.editable=false;
					Txt_AdvanceAmount.editable=false;
					Hlp_Reservation.fnClear();
					ReservationId=0;				
					Txt_Mode.text="";Txt_ResAdvAmt.text="";Hlp_Name.fnClear();
					Txt_MobileNo.text="";
					Tcl_Arrival.enabled=false;
					Tcl_Arrival.setTime = new Date();
					Dt_ArrivalDate.selectedDate=new Date();
					Txt_MobileNo.editable=false;
					Txt_Special.editable=false;
					Dt_ArrivalDate.enabled=false;
					btn_AvlService.enabled=false;
					Ddl_AMPM.enabled=false;
					
				}
			}
			
			protected function FnSrch():void
			{
				PopUpManager.addPopUp( SearchPopUp , this, true);
				SearchPopUp.Prc_name="GuestCheckIn";
				var SearchParam:Array =new Array();
				SearchPopUp.HlpIndex="SEARCH";
				SearchParam[0]=GlobalXml;
				SearchParam[1]=0;				
				SearchPopUp.Prc_Param=SearchParam;
				SearchPopUp.HlpSrchGlobal="";
				SearchPopUp.dataPanel.focusEnabled=true;
				SearchPopUp.Pageint();					
				SearchPopUp.addEventListener("PopupEnter",funpopupEnter);
				SearchPopUp.addEventListener("PopupClose",funpopupClose);
				PopUpManager.centerPopUp(SearchPopUp);
			}
			
			private function funpopupClose(event:Event):void{}
			
			private function funpopupEnter(event:Event):void{SearchDtls(SearchPopUp.SelectRow.Id,0);}
			
			private function SearchDtls(Id:int,_PrdFk:int):void
			{
				var Load:Array = new Array(); 
				Load[0] = GlobalXml; Load[1] = Id;
				useWeb("GuestCheckIn","Search_CUSTOM",Load);
			}
			protected function getHlpData(event:Event):void
			{
				
			}
			
			public function Custom_Grid_Tab(arrObj:Object,arrObj1:Object,GridMode:Boolean,Index:int):void
			{
			}
			public function Custom_Grid_Enter(arrObj:Object, GridMode:Boolean, Index:int):String
			{
				var Str:String="";
				return Str;
			}
			
			protected function Dt_ArrivalDate_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				//				if(Dt_ArrivalDate.selectedDate)
				//				{
				//					var asd:String = Dt_ArrivalDate.text;										
				//					var Y:String = asd.substr(6,10);
				//					var M:String = asd.substr(3,2);
				//					var D:String = asd.substr(0,2);
				//					var RangeStart:String = Y+'/'+M+'/'+D;
				//					//Dt_ArrivalDate.selectableRange={rangeStart:new Date(RangeStart)};
				//					Dt_DepartureDate.selectableRange = {rangeStart:new Date(RangeStart)};
				//					Dt_DepartureDate.selectedDate = new Date(RangeStart);
				//				}
			}
			
			protected function Rdbg_Discount_changeHandler():void
			{
				
			}
			
			protected function Rdbg_Payment_changeHandler():void
			{
				
			}
			
			protected function application2_keyDownHandler(event:KeyboardEvent):void
			{
				//				Sctrl.KeyHandler(event);
			}
			
			protected function colorpicker1_changeHandler(event:ColorPickerEvent):void
			{
				Color=event.currentTarget.selectedItem;
			}
			
			//			protected function ChangeRoomload(event:IndexChangeEvent):void
			//			{
			//				RoomId=Drp_Roomload.selectedItem.Id;
			//				RoomNo=Drp_Roomload.selectedItem.label;
			//				StateId=Drp_Roomload.selectedItem.StateId;
			//				Tariff=Drp_Roomload.selectedItem.Tariff;
			//				useWeb("GuestCheckIn","Tariff_CUSTOM",[GlobalXml,'TariffLoad','',0,0,RoomId]);	
			//			}
			public function OnSelectionRoom():void
			{
				if(hlp_Room.selected())
				{
					hlp_Room.text=hlp_Room.Select_Row.AvailableRooms;	
					RoomId=hlp_Room.Select_Row.RoomId;
					PropertyId=Hlp_Reservation.Select_Row.PropertyId;
					
					//	useWeb("GuestCheckIn","Room_CUSTOM",[GlobalXml,'ROOMLOAD','',0,0,0,GuestId]);
				}
			}
			
			public function OnSelectionProperty():void
			{
				PropertyId="";
				if(hlp_Property.selected())
				{
					//	Hlp_Reservation.dataProvider=null;
					
					hlp_Property.text = hlp_Property.Select_Row.PropertyName;
					PropertyId=hlp_Property.Select_Row.ZId;
					//	PropertyTypeId=hlp_Property.Select_Row.PropertyTypeId;
					
					
					useWeb("GuestCheckIn","Guest_CUSTOM",[GlobalXml,'GuestLoad','',0,0,0,0,PropertyId,SSPId,Global_AC[0].UsrId]);
					
			//		useWeb("GuestCheckIn","Guest_CUSTOM",[GlobalXml,'GuestLoad','',0,0,0,0,PropertyId,SSPId,65]);
					Hlp_Reservation.enabled=true;
					
					Hlp_Reservation.text="";
					Dt_ArrivalDate.text="";
					Txt_ClientName.text="";
					Txt_MobileNo.text="";
					Txt_EmailId.text="";
					Txt_IDProof.text="";
					Txt_Nationality.text="";
					Direct.selected="";
					BTC.selected="";
					Txt_Tariff.text="";
					Txt_AdvanceAmount.text="";
					Txt_BookingCode.text="";
					//		Txt_CheckInNo.text="";
					Dt_ChkoutDate.text="";
					Txt_Type.text="";
					hlp_Room.text="";
					Txt_Bed.text="";
					Txt_Property.text="";
					Txt_Occupancy.text="";
					Txt_Special.text="";
				}
				else
				{
					hlp_Property.text="";
					PropertyId="";
				}
				
			}
			
			
			protected function Service_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Avlservice.visible=true;
			}
			
			protected function FNClose(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Avlservice.visible=false;
			}
			
			//Guest Image Upload
			public var ImageFormat:String="";
			public function init():void
			{
				// This URL should be replaced with your server side URL
				//				var browserUrl:String = ExternalInterface.call("eval", "window.location.href");
				//				var arr:Array =browserUrl.split("/");
				ImageFormat=FilePath.text;				
				uploadURL.url = "http://sstage.in/GuestImageUpload.php?id="+Hlp_Reservation.text+"&pid="+BTCSId+"&imgcount="+ImageCount+"&imgformat="+ImageFormat;
			//	uploadURL.url = "http://sstage.in/Billupload.php?id="+Txt_ExpenseHead.text+"&pid="+ExpenseId+"&imgcount="+ImageCount+"&imgformat="+ImageFormat;
				uploadURL.method = "POST"; // OR "POST" as you need it
				uploadURL.contentType = "multipart/form-data";				
				// Event Listeners for UI Buttons (Upload/Browse)
				
				Filedata.addEventListener(MouseEvent.CLICK, browseFiles);
				uploadbutton.addEventListener(MouseEvent.CLICK,uploadFiles);
				fileRef.addEventListener(Event.SELECT, selectHandler);
				
				
			}
			
			private function browseFiles(event:Event):void
			{
				fileTypes.push(imageTypes);
				fileTypes.push(documentTypes);
				fileRef.browse(fileTypes);
				
			}
			private function ioErrorHandler(event:IOErrorEvent):void
			{
				mx.controls.Alert.show(String(event),"ioError",0);
			}
			
			private function selectHandler(event:Event):void
			{
				
				FilePath.text = event.currentTarget.name.toString();
				ImageFormat=FilePath.text;	
				
			}
			private function uploadFiles():void
			{
				
				fileRef.addEventListener(Event.COMPLETE, completeHandler);
				fileRef.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA,dataHandler);
				fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR,securityErrorHandler);
				fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS,httpStatusHandler);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
				fileRef.upload(uploadURL);
			}
			
			private function completeHandler(event:Event):void
			{
				//Alert.show("File Uploaded successfully");
				
			}
			private function dataHandler(event:DataEvent):void
			{
				//Alert.show("File Uploaded successfully");	
				var ImageFlage:Boolean=true;
				resultsTxtField.text = event.data.toString();
				var Err_Image:String=resultsTxtField.text;
				var Fatal:String=Err_Image.substr(8,18);
				if(Fatal=="b>Fatal error</b>:")
				{
					ImageFlage=false;
					alignAlert(Alert.show("There was an error uploading the file, please try again!","Error !",Alert.OK, null, null,iconErrLarge, Alert.OK),10,"");
				}
				if(resultsTxtField.text=="There was an error uploading the file, please try again!")
				{
					ImageFlage=false;
					alignAlert(Alert.show(resultsTxtField.text,"Error !",Alert.OK, null, null,iconErrLarge, Alert.OK),10,"");
				}				
				if(ImageFlage==true)
				{					
					useWeb("GuestCheckIn","ImageUpload_CUSTOM",[GlobalXml,'IMAGEUPLOAD',"http://sstage.in/GuestImage/"+resultsTxtField.text,0,0,0,BTCSId,0,0,0]);
				}
			}
			
			// called if a security error
			
			private function securityErrorHandler(event:SecurityErrorEvent):void
			{
				mx.controls.Alert.show(String(event),"Security Error",0);
			}
			// server will return an http status code, code 200 means all is good
			
			private function httpStatusHandler(event:HTTPStatusEvent):void
			{
				if (event.status != 200)
				{
					mx.controls.Alert.show(String(event),"Error",0);
				}
			}
			
			//Image Download
			public var PropertyImageId:int=0;			
			private function init1():void {
				// Initialize the array collection to an empty collection. 
				//				arrColl = new ArrayCollection();
				
				// Set up the URL request to download the file specified by the FILE_URL variable. 
				urlReq = new URLRequest(FILE_URL);
				
				// Define file reference object and add a bunch of event listeners. 
				fileRef = new FileReference();
				fileRef.addEventListener(Event.CANCEL, doEvent);
				fileRef.addEventListener(Event.COMPLETE, doEvent);
				fileRef.addEventListener(Event.OPEN, doEvent);
				fileRef.addEventListener(Event.SELECT, doEvent);
				fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS, doEvent);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR, doEvent);
				fileRef.addEventListener(ProgressEvent.PROGRESS, doEvent);
				fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR, doEvent);
			}
			
			private function doEvent(evt:Event):void
			{
				
				FilePath.text="";
			}
			
			private function downloadSourceCodeZip():void {
				// Clear existing array collection. 
				//arrColl = new ArrayCollection();
				//Alert.show(FILE_URL);
				// Hide the Text control. //
				//txt.visible = false;
				// Begin download. 
				fileRef.download(urlReq);
			}
			
			private function showAlert(item:Object):void {
				Alert.show(item.eventString, item.type);
			}
			
			
			public var ImgFlag:Boolean=false;
//			protected function FnClick_Btn_Browse():void
//			{
//				try
//				{
//					var imageTypes:FileFilter = new FileFilter("Images (*.Pdf, *.XLS, *.doc, *.EXCEL)", "*.jpg; *.jpeg; *.gif; *.png");
//					//var textTypes:FileFilter = new FileFilter("Text Files (*.txt, *.rtf)", "*.txt; *.rtf");
//					var allTypes:Array = new Array(imageTypes);
//					var fileRef:FileReference = new FileReference();
//					fileRef.browse(allTypes);				
//					//fileRef = new FileReference();
//					fileRef.addEventListener(Event.SELECT, selectHandler);
//					fileRef.addEventListener(Event.COMPLETE, completeHandler);				
//					function selectHandler(event:Event):void
//					{
//						FilePath.text = event.currentTarget.name.toString();
//						fileRef.load();
//					}
//					function completeHandler(event:Event):void
//					{
//						//						Img_CompanyLogo.source = fileRef.data;
//						//						ImgFlag=true;					
//					}
//					//				Brd_imageUpload.visible=true;
//					init1();
//					init();
//				}
//				catch(Exception)
//				{
//					
//				}
//			}
			
			protected function btn_Sctrl_docRefreshHandler():void
			{
				// TODO Auto-generated method stub
				Help();
				PageLoad();
				FnClr();
				//	Hlp_Reservation.dataProvider=null;
			}
			
			
			
			protected function Update():void
			{
				// TODO Auto-generated method stub
				txt_GuestNameEdit1.text
				txt_GuestNameEdit2.text
				txt_MobileNoEdit1.text
				txt_MobileNoEdit2.text
				txt_EmailEdit1.text
				txt_EmailEdit2.text
				
			}
			
			
			
		]]>
	</fx:Script>
	<s:VGroup x="0" y="0" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
		<s:BorderContainer x="5" y="0" width="907" height="524" backgroundColor="#fbf9f9"
						   borderVisible="false">
			<s:Group x="3" y="1" width="904" height="518">
				<s:BorderContainer x="532" y="395" height="21" width="64" backgroundColor="#fbf9f9" visible="false">
					<mx:LinkButton x="0" y="60" label="Capture"  cornerRadius="5"/>	
				</s:BorderContainer>					
				<s:BorderContainer x="0" y="0" width="273" height="145" depth="50" backgroundColor="#fbf9f9" visible="false" >
					<s:BorderContainer height="5" width="271" styleName="Brd_Hdr"  backgroundColor="#eb1c24"/>
					<s:Label x="11" y="50" text="Mode" visible="false"/>
					<s:Label x="143" y="50" text="Adv Amt" visible="false"/>
					<s:TextInput x="50" y="46" width="80" height="20" id="Txt_Mode" editable="false"
								 focusEnabled="false" visible="false"/>
					<s:TextInput x="192" y="46" width="70" height="20" id="Txt_ResAdvAmt" editable="false"
								 focusEnabled="false" textAlign="right" visible="false"/>
				</s:BorderContainer>
				<s:BorderContainer x="10" y="0" width="884" height="185" depth="45" backgroundColor="#fbf9f9" visible="false">
					
					<!--	<WrbComp:ProDGrid1 id="Grd_GroupDetailsEntry" x="7" y="6" width="610" height="172" 
					_borderVisible="true"
					_ColDataField="RoomNo~Pax~Tariff~RoomType~Id~ChkInHdrId~PropertyId~Cess~HECess~ServiceTax~VAT~Luxury~ExtraBed~Tax~TaxId~TariffId~RoomId~BookingId"
					_ColHdrText="Room No~Pax~Tariff~RoomType~Id~ChkInHdrId~PropertyId~Cess~HECess~ServiceTax~VAT~Luxury~ExtraBed~Tax~TaxId~TariffId~RoomId~BookingId"
					_ColType="hlp~txt~txt~txt~ntxt~ntxt~txt~ntxt~ntxt~ntxt~ntxt~ntxt~ntxt~ntxt~ntxt~ntxt~ntxt~ntxt" 
					_colVisible="1~1~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0"
					_ColWidth="200~200~200~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0" 
					_editable="1~1~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0"
					_required="1~1~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0" 
					_spltChar="~" 
					_getHlpTxtData="getHlpData(event)"
					_visibleColNos="3"
					_tabIndex="13"/> -->
					<WrbComp:ProDGrid1 id="Grd_GroupDetailsEntry" x="67" y="-4" width="610" height="172" 
									   _borderVisible="true" visible="false" enabled="false"
									   _ColDataField="RoomNo~Pax~Tariff~RoomType~Id~ChkInHdrId~PropertyId~TariffId~RoomId~BookingId"
									   _ColHdrText="Room No~Pax~Tariff~RoomType~Id~ChkInHdrId~PropertyId~TariffId~RoomId~BookingId"
									   _ColType="hlp~ntxt~ntxt~txt~ntxt~ntxt~ntxt~ntxt~ntxt~ntxt" 
									   _colVisible="1~1~1~0~0~0~0~0~0~0"
									   _ColWidth="200~200~200~0~0~0~0~0~0~0" 
									   _editable="1~1~0~0~0~0~0~0~0~0"
									   _required="1~1~1~0~0~0~0~0~0~0" 
									   _spltChar="~" 
									   _getHlpTxtData="getHlpData(event)"
									   _visibleColNos="3"
									   _tabIndex="13"/>
					
				</s:BorderContainer>
				<s:BorderContainer x="0" y="83" width="273" height="400" depth="42" backgroundColor="#fbf9f9" visible="false">
					<s:BorderContainer height="5" width="271" styleName="Brd_Hdr"  backgroundColor="#eb1c24" visible="false"/>
					<WrbHelpComp:HelpText id="Hlp_Name" x="142" y="40.5" width="120" height="20"
										  pxSetColumnsWidth="90,90,90,90,90,90,90,90,0" 
										  pxSetHeight="200" depth="46" pxTabIndex="3"
										  onselection="{OnSelectionName()}" visible="false" />
					<s:Label x="11" y="44.5" text="Name" visible="false"/>
					<s:Label x="11" y="161" text="Designation" visible="false"/>
					<s:TextInput id="Txt_Desginat" x="78" y="156" width="184" height="20"
								 tabIndex="10" restrict="0-9" maxChars="15" visible="false"/>
					<s:Label x="11" y="286.5" text="Purpose" />
					<s:TextInput id="Txt_Purpose" x="78" y="283.5" width="184" height="20"
								 tabIndex="11"/>
					<s:Label x="11" y="292.5" text="From" visible="false"/>
					<s:DropDownList x="78" y="40.5" width="61" height="20" selectedItem="Mr."
									id="Ddl_Prefix" tabIndex="2" visible="false" >
						<s:ArrayList>
							<fx:String>Mr.</fx:String>
							<fx:String>Ms.</fx:String>
							<fx:String>Mrs.</fx:String>
						</s:ArrayList>
					</s:DropDownList>
					<s:TextArea id="Txt_Remarks" x="95" y="352" width="167" height="29" tabIndex="39" visible="false"/>
					<s:Label x="11" y="354.5" width="76" text="Special Requirement " visible="false"/>
				</s:BorderContainer>
				<s:BorderContainer x="688" y="326" width="214" height="157" backgroundColor="#fbf9f9" visible="false">
					<s:BorderContainer styleName="Brd_Hdr" height="5" width="212"  backgroundColor="#eb1c24"/>
					<s:Label x="7" y="88.5" text="Departure Date" visible="false"/>
					<mx:DateField id="Dt_DepartureDate" x="99" y="83" width="94" height="20"
								  formatString="DD/MM/YYYY" selectedDate="{new Date()}"
								  selectableRange="{{rangeStart:new Date()}}" tabIndex="35" visible="false"/>
					<s:Label x="7" y="123.5" text="Departure Time" visible="false"/>
					<WrbComp:TimeControl x="99" y="113" id="Tcl_Departure" tabIndex="36" visible="false"/>
				</s:BorderContainer>
				<s:BorderContainer x="283" y="299" width="396" height="134" depth="22" backgroundColor="#fbf9f9" visible="false">
					<s:BorderContainer styleName="Brd_Hdr" height="5" width="396"  backgroundColor="#eb1c24"/>
					<s:TextInput x="95" y="15" width="289" height="20" tabIndex="25"
								 id="Txt_PassportNo"/>
					<s:TextInput x="95" y="44" width="289" height="20" tabIndex="26"
								 id="Txt_IssuePlace"/>
					<s:Label x="11" y="19" text="Passport No"/>
					
					<s:Label x="11" y="48" text="Issue Place"/>
					<s:Label x="11" y="77" text="Expire Date"/>
					<s:Label x="213" y="76" text="India Arrival"/>
					<s:Label x="11" y="106" text="Visa Expire"/>
					<mx:DateField id="Dt_ExpireDate" x="95" y="73" height="20" tabIndex="27"
								  formatString="DD/MM/YYYY" yearNavigationEnabled="true"
								  selectableRange="{{rangeEnd:new Date()}}"/>
					<mx:DateField id="Dt_IndiaArrival" x="289" y="72" height="20" tabIndex="28"
								  formatString="DD/MM/YYYY" yearNavigationEnabled="true"
								  selectableRange="{{rangeEnd:new Date()}}"/>
					<mx:DateField id="Dt_VisaExpire" x="95" y="102" height="20" tabIndex="29"
								  formatString="DD/MM/YYYY" yearNavigationEnabled="true"
								  selectableRange="{{rangeStart:new Date()}}"/>						
				</s:BorderContainer>
				<s:BorderContainer x="283" y="439" width="396" height="44" depth="0" backgroundColor="#fbf9f9" visible="false">
					<s:BorderContainer styleName="Brd_Hdr" height="5" width="396"  backgroundColor="#eb1c24"/>
					<s:Label x="11" y="19" fontWeight="bold" text="Discount"/>
					<s:HGroup x="93" y="16" width="172" gap="25">
						<s:RadioButton label="Percentage" groupName="Rdbg_Discount" value="0"
									   id="Percentage" buttonMode="true"/>
						<s:RadioButton label="Amount" groupName="Rdbg_Discount" value="1"
									   id="Amount" buttonMode="true"/>
					</s:HGroup>
					<s:TextInput x="285" y="15" height="20" width="80" id="Txt_Discount"
								 restrict="0-9" textAlign="right" tabIndex="30"/>
				</s:BorderContainer>
				<mx:VideoDisplay x="513" y="337" id="VD" width="100" height="100" 
								  visible="false"/>
				<mx:Image id="Image" x="399" y="338" width="100" height="100" source="Assets/user.jpg" visible="false"/>
				
				<s:HGroup x="304" y="488" width="338" height="40" horizontalAlign="right" verticalAlign="middle"
						  depth="0">
					<WrbComp:Button_HB width="104" click="FnSave()" Lable_val="Check In">
					</WrbComp:Button_HB>
					<WrbComp:Button_HB width="104" click="FnSrch()" Lable_val="Search">
					</WrbComp:Button_HB>
					<WrbComp:Button_HB width="104" click="FnClr()" Lable_val="Clear">
					</WrbComp:Button_HB>
				</s:HGroup>
				<!--<s:BorderContainer x="10" y="331" width="884" height="148"  backgroundColor="#fbf9f9">
				
				<s:Scroller x="-1" y="0" width="883" height="147" depth="1">
				<s:Group width="100%" height="100%" id="TopCntl">
				</s:Group>
				</s:Scroller>
				</s:BorderContainer> -->
				<mx:HRule x="0" y="481" width="100%" strokeColor="#eb1c24"/>
				<s:Label x="60" y="423" text="Advance Amount" visible="false"/>
				<mx:Label x="60" y="353" text="Payment Mode"/>
				<s:HGroup x="200" y="355" width="149" horizontalAlign="center" verticalAlign="middle" 
						  gap="50" enabled="false">
					<s:RadioButton label="Direct" groupName="Mode" value="0"
								   id="Direct" buttonMode="true"/>
					<s:RadioButton label="BTC" groupName="Mode"  value="1"
								   id="BTC" buttonMode="true"/>
				</s:HGroup>
				<s:TextInput x="200" y="421" width="149" height="20" tabIndex="23" 
							 restrict="0-9" id="Txt_AdvanceAmount" textAlign="right" prompt="0.00" visible="false"/>
				<mx:DateField id="Dt_ArrivalDate" x="200" y="98" width="112" height="20"
							  formatString="DD/MM/YYYY" tabIndex="31" enabled="false"
							  selectableRange="{{rangeEnd: new Date()}}" 
							  
							  change="Dt_ArrivalDate_changeHandler(event)" 
							  styleName="DisabledDateField" yearNavigationEnabled="true"/>  
				<!--disabledDays="{[0]}"  -->
				
				<mx:Label x="60" y="132" text="Arrival Time"/>
				<WrbComp:TimeControl id="Tcl_Arrival" x="200" y="125" width="102" enabled="false"
									 tabIndex="32" ShortTimeFormat="true"/>
				<s:DropDownList x="304" y="129" width="55" height="23" id="Ddl_AMPM"
								selectedItem="PM" tabIndex="6" enabled="false">
					<mx:ArrayCollection>
						<fx:String>AM</fx:String>
						<fx:String>PM</fx:String>
					</mx:ArrayCollection>
				</s:DropDownList>
				<s:TextInput x="637" y="242" width="200" id="Txt_Property" editable="false"/>
				<mx:Label x="500" y="242" text="Property"/>
				<s:TextInput id="Txt_CheckInNo" x="637" y="67" width="200" height="20"
							 editable="false" focusEnabled="false"/>
				<s:Label x="60" y="153" text="Booking Level" visible="false"/>
				<mx:Label x="500" y="67" text="Check In No"/>
				<s:TextInput id="Txt_BookingLvl" x="200" y="151" width="200" height="20"
							 tabIndex="10" restrict="0-9" maxChars="15" visible="false"/>
				<mx:Label x="60" y="67" text="Guest Name"/>
				<mx:Label x="60" y="242" text="Email Id"/>
				<s:TextInput id="Txt_EmailId" x="200" y="242" width="200" height="20"
							 tabIndex="10"  editable="false"/>
				<mx:Label x="60" y="305" text="Nationality"/>
				<s:TextInput id="Txt_Nationality" x="200" y="305" width="200" height="20"
							 tabIndex="10" editable="false"/>
				<s:Label x="189" y="219" text="*" styleName="ReqLable" color="red"/>
				<s:Label x="190" y="68" text="*" styleName="ReqLable" color="red"/>
				<s:Label x="190" y="37" text="*" styleName="ReqLable" color="red"/>
				<s:Label x="189" y="98" text="*" styleName="ReqLable" color="red"/>
				<s:TextInput id="Txt_MobileNo" x="200" y="212" width="200" height="20"
							 tabIndex="9" restrict="0-9" maxChars="11"/>
				<mx:Label x="60" y="212" text="Mobile No"/>
				<s:TextInput id="Txt_Special" x="637" y="305" width="200" height="20"
							 tabIndex="10"  editable="false"/>
				<s:Label x="190" y="275" text="*" styleName="ReqLable" color="red"/>
				<mx:Label x="60" y="272" text="ID Proof"/>
				<s:TextInput id="Txt_IDProof" x="200" y="272" width="200" height="20"
							 tabIndex="12" editable="false"/>
				<!--	<s:DropDownList x="637" y="111" width="200" id="Drp_Roomload" change="ChangeRoomload(event)"
				prompt="Select RoomNo"	visible="true"></s:DropDownList> -->
				<mx:Label x="500" y="181" width="87" text="Room" id="lbl_RoomNo" visible="true"/>
				<s:Label x="26" y="13" text="Booking Information" color="Red"/>
				<s:Label x="26" y="164" text="Guest Information" color="Red"/>
				<s:Label x="26" y="334" text="Tariff Information" color="Red"/>
				<mx:Label x="60" y="98" text="Check In Date"/>
				<mx:Label x="500" y="98" text="Check Out Date"/>
				<mx:DateField x="637" y="98" width="112" id="Dt_ChkoutDate" formatString="DD/MM/YYYY"
							  enabled="false"/>
				<s:Label x="60" y="208" text="Guest Name" visible="false"/>
				<s:TextInput id="Txt_GuestName" x="200" y="204" width="200" height="20" editable="false" visible="false"/>
				<mx:Label x="60" y="181" text="Client Name"/>
				<s:TextInput id="Txt_ClientName" x="200" y="181" width="200" editable="false" />
				<mx:Label x="500" y="305" text="Designation"/>
				<mx:Label x="60" y="388" text="Tariff"/>
				<s:TextInput x="200" y="388" width="149" id="Txt_Tariff" textAlign="right" restrict="0-9" editable="false" prompt="0.00"/>
				<WrbHelpComp:HelpText x="637" y="181" width="200" id="hlp_Room" onselection="{OnSelectionRoom()}"
									  pxSetColumnsWidth="198,0,0" depth="10" visible="true" enabled="false">
				</WrbHelpComp:HelpText>
				<mx:Label x="500" y="36" text="Booking Code" visible="true"/>
				<s:TextInput x="637" y="36" width="200" height="20" id="Txt_BookingCode" editable="false"/>
				<mx:Label x="60" y="36" text="Property"/>
				<WrbHelpComp:HelpText x="200" y="36" width="200" id="hlp_Property" pxSetColumnsWidth="200,0"
									  onselection="{OnSelectionProperty()}" depth="100" tabIndex="1">
				</WrbHelpComp:HelpText>
				<WrbComp:Button_HB x="679" y="417" width="143" id="btn_AvlService" Lable_val="Available Services" click="Service_clickHandler(event)" enabled="false">
				</WrbComp:Button_HB> 
				<s:Panel x="297" y="46" width="409" height="334" title="Available Services" depth="1000" id="Avlservice" visible="false">
					<s:Image x="384" y="-24" source="@Embed(source='../Assets/CrossSmall.png')" 
							 buttonMode="true" toolTip="Close" click="FNClose(event)"/>
					<s:Group x="-1" y="0" width="411" height="308">
						<mx:DataGrid id="Grid_Service" x="0" y="0"  verticalAlign="middle" editable="true" 
									 width="408" height="301" tabIndex="4" >
							<mx:columns>
								<mx:DataGridColumn dataField="Id" headerText="Id" width="50" editable="false" visible="false"/>
								<mx:DataGridColumn dataField="PropertyId" headerText="PropertyId" width="50" editable="false" visible="false"/>
								<mx:DataGridColumn dataField="ProductId" headerText="ProductId" width="50" editable="false" visible="false"/>
								<mx:DataGridColumn dataField="ServiceItem" headerText="Service Item" width="100" editable="false"/>
								<mx:DataGridColumn dataField="Price" headerText="Price" width="50" editable="false"/>
								<mx:DataGridColumn dataField="Complimentary" headerText="Complimentary" width="50" editable="false">
									<mx:itemRenderer >
										<fx:Component>
											<mx:HBox horizontalAlign="center" verticalAlign="middle" >
												<mx:CheckBox selected="{data.Complimentary}"  enabled="false"
															 />
											</mx:HBox>	
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
							</mx:columns>
						</mx:DataGrid>
					</s:Group>
					
				</s:Panel>
				<mx:Label x="500" y="272" text="Occupancy"/>
				<s:TextInput x="637" y="272" width="200" id="Txt_Occupancy" editable="false"/>
				<s:TextInput x="659" y="18" id="Txt_RackTariffsingle" editable="false" visible="false"/>
				<s:TextInput x="500" y="18" id="Txt_RackTariffDouble" editable="false" visible="false"/>
				<s:Label x="500" y="186" text="Apartment" id="lbl_Apartment" visible="false"/>
				<s:TextInput x="637" y="183" width="200" id="Txt_Apartment" editable="false" visible="false"/>
				<mx:Label x="500" y="212" text="Bed" id="lbl_bed" visible="true" />
				<s:TextInput x="637" y="212" width="200" id="Txt_Bed" editable="false" visible="true"/>
				<mx:Label x="500" y="132" text="Type"/>
				<s:TextInput x="637" y="132" width="200" id="Txt_Type" editable="false"/>
				<s:TextInput x="366" y="99" id="Txt_PropertyType" editable="false" visible="false"/>
				<mx:Panel x="528" y="328" height="73" title="Image Uploader">
					<mx:ControlBar>
						<mx:Spacer width="80%"/>
						<mx:HBox>
							<mx:TextInput id="FilePath" width="150"  visible="true"/>
							<mx:Button id="Filedata" label="Browse File" name="Filedata" />
							<mx:Button label="UpLoad File" name="uploadbutton" id="uploadbutton" visible="false" width="0" />
						</mx:HBox>
						<mx:TextArea id="resultsTxtField"  width="0"  name="resultsTxtField" visible="false"/>
					</mx:ControlBar>
				</mx:Panel>
				<s:TextInput x="373" y="151" id="Txt_SingleMarkup" editable="false" visible="false"/>
				<s:TextInput x="366" y="95" id="Txt_DoubleMarkup" editable="false" visible="false"/>
				<WrbComp:SaveControl x="244" y="491" id="btn_Sctrl" docRefresh="btn_Sctrl_docRefreshHandler()">
				</WrbComp:SaveControl>
				<s:TextInput x="435" y="441" id="Txt_TariffPaymentMode" visible="false"/>
				<WrbHelpComp:HelpText id="Hlp_Reservation"  x="200" y="67" width="200"
									  height="20" pxSetHeight="183" depth="46" pxTabIndex="1" 
									  pxSetColumnsWidth="0,0,200,0,0,200,200,0,0,0,200,0,0,0,0,0"											  
									  onselection="{OnSelectionBooking()}" tabIndex="2" >
				</WrbHelpComp:HelpText>
				<WrbComp:Button_HB x="489" y="417" width="160"  id="Chg_guestdtls" Lable_val="Guest Edit" visible="false" >
				</WrbComp:Button_HB>
				<s:Panel x="101" y="29" width="721" height="229" visible="false">
					<mx:Label x="16" y="35" text="1.Guest Name"/>
					<s:TextInput x="111" y="35" id="txt_GuestNameEdit1"/>
					<mx:Label x="476" y="35" text="EmailId"/>
					<s:TextInput x="552" y="35" width="147" id="txt_EmailEdit1"/>
					<mx:Label x="16" y="88" text="2.Guest Name"/>
					<s:TextInput x="111" y="88" id="txt_GuestNameEdit2"/>
					<mx:Label x="250" y="35" text="Mobile No" />
					<s:TextInput x="338" y="35" id="txt_MobileNoEdit1"/>
					<mx:Label x="250" y="88" text="Mobile No"/>
					<s:TextInput x="338" y="88" id="txt_MobileNoEdit2"/>
					<mx:Label x="476" y="88" text="EmailId"/>
					<s:TextInput x="552" y="88" width="147" id="txt_EmailEdit2"/>
					<WrbComp:Button_HB x="250" y="137" width="112" click="Update()">
					</WrbComp:Button_HB>
					<WrbComp:Button_HB x="397" y="137" width="117">
					</WrbComp:Button_HB>
				</s:Panel>
			</s:Group>
		</s:BorderContainer>
	</s:VGroup>	
	
	
</s:Application>
