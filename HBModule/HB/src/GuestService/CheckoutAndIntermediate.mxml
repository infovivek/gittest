<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   xmlns:WrbComp="WrbComp.*"
			   width="100%" height="100%" creationComplete="PageLoad()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:NumberFormatter id="NF_Two" precision="2" rounding="nearest"/>
		<s:RadioButtonGroup id="radiogroup1"/>
	</fx:Declarations>
	<fx:Style source = "..\\Common\\ApplicationCSS.css"/>
	<fx:Script source="..\\Common\\CommonScript.as"/>
	<fx:Script source="..\\Common\\Functions.as"/>
	<fx:Script>
		
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import com.as3xls.xls.Type;
			
			import mx.collections.ArrayCollection;
			import mx.containers.Accordion;
			import mx.controls.Alert;
			import mx.controls.Text;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.ColorPickerEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			import mx.graphics.codec.PNGEncoder;
			import mx.managers.PopUpManager;
			import mx.messaging.channels.StreamingAMFChannel;
			import mx.rpc.http.mxml.HTTPService;
			
			import org.hamcrest.object.nullValue;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			public var ErrStr:String=""; 
			public var Str_ChkOut:String="",Str_Serv:String="",Str_Settle:String="";
			public var Str_InChkTar:String="",Str_InChkSer:String="",Str_InChkSett:String="";
			public var _HdrArrCol:ArrayCollection;
			public static var GlobalXml:String="";
			public static var Global_AC:ArrayCollection=new ArrayCollection();
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public var Id:int=0,CheckInHdrId:int=0,CheckOutHdrId:int=0,Tariff:int=0,StateId:int=0,BookingId:int=0,
				PrintChkOutId:int=0,GuestId:int=0,PropertyId:int=0,ApartmentId:int=0,BedId:int=0,RoomId:int,UserId:int=0,
				ClientId:int=0,CityId:int=0,ServiceChargeChk:int=0;
			public var ExtraMaters:Number=0;
			public var ChkOutHdrId:int=0,Flag1:int=0,ItemId:int=0;
			public var LT:Number=0,ST:Number=0;
			public var Direct1:String="",TypeService:String="",TypeServiceId:String="";
			public var BTC1:String="";
			public var new_TariffPaymentMode:String=""; 
			private var fileRef:FileReference = new FileReference();
			private var fileTypes:Array = new Array();
			private var imageTypes:FileFilter = new FileFilter("Images ( *.jpg; *.jpeg; *.gif; *.png; *.eml)" ,"*.jpg; *.jpeg; *.gif; *.png; *.eml");
			private var documentTypes:FileFilter = new FileFilter("Documents (*.pdf), (*.doc),(*.docx), (*.rtf), (*.txt)",("*.pdf; *.doc; *.rtf, *.txt"));
			private var FILE_URL:String = "";
			public var ImageCount:Number=0;
			//public var ImageFormat:String="";
			private var urlReq:URLRequest;
			public var Save_Flag:Boolean=true; 
			public var uploadURL:URLRequest = new URLRequest();
			public var Mode1:String="",PaymentStatus:String="";
			public var ServiceChargeValue2Per:Number=0;
			public var ServiceChargeValue12Per:Number=0;
			public var ServiceChargeCess:Number=0;
			public var ServiceChargeHCess:Number=0;
			public var ServiceChargeValue:Number=0;
			public var BTCSId:Number=0;
			public var PaymentMode:String="",TodayDate:String="",ExpChkoutDT:String="";
			
			//	var start:Date=new Date();
			
			protected function PageLoad():void
			{
				// TODO Auto-generated method stub
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				// Rdlc Print
//				Str_ChkOut="http://localhost:6236/GuestCheckOutTariff.aspx?";
//				Str_Serv="http://localhost:6236/GuestCheckOutService.aspx?";
//				Str_Settle="http://localhost:6236/GuestCheckOutConsolidate.aspx?";
//				
//				Str_InChkTar="http://localhost:6236/IntermediateCheckoutTariff.aspx?";
//				Str_InChkSer="http://localhost:6236/IntermediateCheckoutService.aspx?";
//				Str_InChkSett="http://localhost:6236/IntermediateCheckoutConsolidate.aspx?";
				
				
//				Str_ChkOut="http://warsoft.in/HBReport/GuestCheckOutTariff.aspx?";
//				Str_Serv="http://warsoft.in/HBReport/GuestCheckOutService.aspx?";
//				Str_Settle="http://warsoft.in/HBReport/GuestCheckOutConsolidate.aspx?";
//				
//				Str_InChkTar="http://warsoft.in/HBReport/IntermediateCheckoutTariff.aspx?";
//				Str_InChkSer="http://warsoft.in/HBReport/IntermediateCheckoutService.aspx?";
//				Str_InChkSett="http://warsoft.in/HBReport/IntermediateCheckoutConsolidate.aspx?";
				
				
				Str_ChkOut="http://sstage.in/HBReport/GuestCheckOutTariff.aspx?";
				Str_Serv="http://sstage.in/HBReport/GuestCheckOutService.aspx?";
				Str_Settle="http://sstage.in/HBReport/GuestCheckOutConsolidate.aspx?";
				
				Str_InChkTar="http://sstage.in/HBReport/IntermediateCheckoutTariff.aspx?";
				Str_InChkSer="http://sstage.in/HBReport/IntermediateCheckoutService.aspx?";
				Str_InChkSett="http://sstage.in/HBReport/IntermediateCheckoutConsolidate.aspx?";
				
				
				
				btn_Service.enabled=false;
				//			bdr_Service.visible=false
				Btn_Settlement.enabled=false;
				bdr_Settle.visible=false;
				btn_Settle.enabled=false;
				btn_Sctrl.setButtonRights("Delete",true);
				btn_Sctrl.setButtonRights("Search",true);
				btn_Sctrl.setButtonRights("Save",true);
				btn_Sctrl.setButtonRights("Clear",true);
				Help();				
				init();
				btn_Sctrl1.setButtonRights("Delete",true);
				btn_Sctrl1.setButtonRights("Search",true);
				btn_Sctrl1.setButtonRights("Save",true);
				btn_Sctrl1.setButtonRights("Clear",true);
				hlp_GuestName.dataProvider=null;
				hlp_GuestName.enabled=false;
				
				
				hlp_property.setFocus();
				
				Checkout.selected=true;
				Intermediate.selected=false;
				Intermediate.enabled=false;
				lbl_Billfrom.visible=true;
				lbl_Billto.visible=true;
				DT_BillFromDate.enabled=false;
				DT_BillTo.enabled=false;
				Chk_PIInvoice.visible=false
				
			}
			
			
			
			
			protected function Help():void
			{				
				
	//			useWeb("CheckoutAndIntermediate","PageLoad_CUSTOM",[GlobalXml,"PageLoad","","","",0,0,0,Global_AC[0].UsrId,0]);
			 	useWeb("CheckoutAndIntermediate","PageLoad_CUSTOM",[GlobalXml,"PageLoad","","","",0,0,0,65,0]);
				Txt_ServiceBillAmt.editable=false;
				Txt_ServiceVat.editable=false;
				Txt_SerivceTax.editable=false;
				Txt_ServiceNetAmount.editable=false;
				Txt_Stay.editable=false;
				Txt_type.editable=false;
				Txt_bookinlevel.editable=false;
				Txt_Billdate.editable=false;
				Txt_Client.editable=false;
				Txt_Property.editable=false;
				Txt_TotalTariff.editable=false;
				Txt_NetAmount.editable=false;
				Txt_AdditionalCharge.editable=false;
				Txt_Discount.editable=false;
				Txt_Totaldiscount.editable=false;
				Txt_Luxury.editable=false;
				Txt_ServiceTax12.editable=false;
				Txt_NetAmount.editable=false;
				Txt_referance.editable=true;
				Txt_Discount.editable=true;
				Txt_Totaldiscount.editable=false;
				Txt_ServiceCharge2.editable=false;
				Txt_Servicecharge12.editable=false;
				Txt_ServiceTax7.editable=false;
				Txt_Cess.editable=false;
				Txt_HECess.editable=false;
				Txt_ChkoutNo.editable=false;
				Chk_change.visible=false;
				lbl_additional.visible=false;
				hlp_GuestName.enabled=false;
				//		bdr_Consolidate.enabled=false;
				
				
			}
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{
				
				if (Ds_Objects.currentTarget.description.toString() == "ImageUpload_CUSTOM")
				{
					FilePath.text="";
					FilePath1.text="";
					FilePath2.text="";
					BTCSId=0;
				}			
				
				if (Ds_Objects.currentTarget.description.toString() == "PageLoad_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Txt_ChkoutNo.text=Ds_Objects.result.Tables.Table.Rows[0].CheckoutNo;						
					}
					//					if(Ds_Objects.result.Tables.Table1.Rows.length > 0)
					//					{
					//						hlp_property.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					//						//hlp_GuestName.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					//					}
					if(Ds_Objects.result.Tables.Table2.Rows.length == 1)
					{
						hlp_property.text=Ds_Objects.result.Tables.Table2.Rows[0].PropertyName; 
						PropertyId=Ds_Objects.result.Tables.Table2.Rows[0].ZId;
						hlp_GuestName.enabled=true;
						useWeb("CheckoutAndIntermediate","GuestLoad_CUSTOM",[GlobalXml,'GuestName','','','',0,0,PropertyId,0,0]);
					}
					if(Ds_Objects.result.Tables.Table1.Rows.length > 1)
					{
						hlp_property.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
						//		hlp_Property.text=Ds_Objects.result.Tables.Table1.Rows[0].PropertyName; 
						//		PropertyId=Ds_Objects.result.Tables.Table1.Rows[0].ZId;
						
					}
					if(Ds_Objects.result.Tables.Table3.Rows.length > 0)
					{
						hlp_item.dataProvider=Ds_Objects.result.Tables.Table3.Rows as ArrayCollection;
					}
					//	hlp_property._setFocus();
				}
				if(Ds_Objects.currentTarget.description.toString() == "ServiceEntry_CUSTOM")
				{
					bdr_Settle.visible=true;
					bdr_Service.visible=false;
					
				}				
				if(Ds_Objects.currentTarget.description.toString() == "GuestLoad_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{ 
						hlp_GuestName.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						PropertyId = Ds_Objects.result.Tables.Table.Rows[0].PropertyId;	
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						ddl_CashReceivedby.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
						ddl_ServiPayCashRecBy.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
						ddl_ConsoPayCashRecBy.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					}
					hlp_GuestName._setFocus();
				}
				
				if(Ds_Objects.currentTarget.description.toString() == "GuestDetail_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Txt_Name.text=Ds_Objects.result.Tables.Table.Rows[0].Name;
						Txt_type.text=Ds_Objects.result.Tables.Table.Rows[0].EmpCode;
						Txt_bookinlevel.text=Ds_Objects.result.Tables.Table.Rows[0].RoomNo;
						Txt_Apartment.text=Ds_Objects.result.Tables.Table.Rows[0].ApartmentType;
						Txt_Bed.text=Ds_Objects.result.Tables.Table.Rows[0].BedType;
						Txt_PropertyType.text=Ds_Objects.result.Tables.Table.Rows[0].PropertyType;
						
						
					}
					
					if(Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Txt_Stay.text=Ds_Objects.result.Tables.Table1.Rows[0].Stay;
						Txt_Property.text=Ds_Objects.result.Tables.Table1.Rows[0].Property;
				//		lbl_Nettariff.text=Ds_Objects.result.Tables.Table1.Rows[0].Tariff;
						DT_CheckOutDate.text=Ds_Objects.result.Tables.Table1.Rows[0].ChkoutDate;
						Txt_CheckInDate.text=Ds_Objects.result.Tables.Table1.Rows[0].CheckInDate;
						DT_BillFromDate.text=Ds_Objects.result.Tables.Table1.Rows[0].CheckInDate;
						DT_BillTo.text=Ds_Objects.result.Tables.Table1.Rows[0].ChkoutDate;
						ExpChkoutDT=Ds_Objects.result.Tables.Table1.Rows[0].ChkoutDate;
						//lbl_tariff.text=Ds_Objects.result.Tables.Table1.Rows[0].Tariff;
						dt_ServiceDate.text=Ds_Objects.result.Tables.Table1.Rows[0].CheckInDate;
				//		Txt_AdditionalCharge.text=Ds_Objects.result.Tables.Table1.Rows[0].Tariff;
						
						var sdfs:String=dt_ServiceDate.text;			
						var sdfs1:String=DT_CheckOutDate.text;
						
						var D:String=sdfs.substr(0,2);
						var M:String=sdfs.substr(3,2);
						var Y:String=sdfs.substr(6,10);
						var D1:String=sdfs1.substr(0,2);
						var M1:String=sdfs1.substr(3,2);
						var Y1:String=sdfs1.substr(6,10);
						var RangeMiddle:String=Y+'/'+M+'/'+D;
						var RangeEnd:String=Y1+'/'+M1+'/'+D1;
						var RangeStart:String=Y+'/'+M+'/'+D;
						dt_ServiceDate.selectableRange = 
							{rangeStart:new Date(RangeStart),rangeEnd:new Date(RangeEnd)};
						dt_ServiceDate.selectedDate=new Date(RangeStart);
			// Bill From Date			
						var BillF:String=DT_BillFromDate.text;
						
						var D:String=BillF.substr(0,2);
						var M:String=BillF.substr(3,2);
						var Y:String=BillF.substr(6,10);
						var D1:String=BillF.substr(0,2);
						var M1:String=BillF.substr(3,2);
						var Y1:String=BillF.substr(6,10);
						var RangeMiddle:String=Y+'/'+M+'/'+D;
						var RangeEnd:String=Y1+'/'+M1+'/'+D1;
						var RangeStart:String=Y+'/'+M+'/'+D;
						DT_BillFromDate.selectableRange = 
							{rangeStart:new Date(RangeStart),rangeEnd:new Date(RangeEnd)};
						DT_BillFromDate.selectedDate=new Date(RangeStart);
		    // Bill To Date				
						var BillF:String=DT_BillFromDate.text;
						var BillTo:String=DT_BillTo.text;
						
						var D:String=BillF.substr(0,2);
						var M:String=BillF.substr(3,2);
						var Y:String=BillF.substr(6,10);
						var D1:String=BillTo.substr(0,2);
						var M1:String=BillTo.substr(3,2);
						var Y1:String=BillTo.substr(6,10);
						var RangeMiddle:String=Y+'/'+M+'/'+D;
						var RangeEnd:String=Y1+'/'+M1+'/'+D1;
						var RangeStart:String=Y+'/'+M+'/'+D;
						DT_BillTo.selectableRange = 
							{rangeStart:new Date(RangeStart),rangeEnd:new Date(RangeEnd)};
						DT_BillTo.selectedDate=new Date(RangeEnd);
						
					}
					if(Ds_Objects.result.Tables.Table2.Rows.length > 0)
					{
						Txt_Billdate.text=Ds_Objects.result.Tables.Table2.Rows[0].BillDate;
						TodayDate = Ds_Objects.result.Tables.Table2.Rows[0].TodayDate;
					}	
					if(Ds_Objects.result.Tables.Table3.Rows.length > 0)
					{
						Txt_Client.text=Ds_Objects.result.Tables.Table3.Rows[0].ClientName;
						ClientId=Ds_Objects.result.Tables.Table3.Rows[0].ClientId;
						CityId=Ds_Objects.result.Tables.Table3.Rows[0].CityId;
						ServiceChargeChk=Ds_Objects.result.Tables.Table3.Rows[0].ServiceChargeChk;	
						if(ServiceChargeChk == 1)
						{
							chk_ServiceCharge.selected=true;
							chk_ServiceCharge.enabled=false;
							
						}
						else
						{
							chk_ServiceCharge.enabled=true;
							chk_ServiceCharge.selected=false;
							
						}
						var RB:String=Ds_Objects.result.Tables.Table3.Rows[0].TariffPaymentMode;
						//		var RB:String = "true";
						var RB1:Boolean = RB == Ds_Objects.result.Tables.Table3.Rows[0].TariffPaymentMode;
						new_TariffPaymentMode=Ds_Objects.result.Tables.Table3.Rows[0].TariffPaymentMode;
						if(RB1!="")
						{
							if(RB=="Direct")
							{
								Direct.selected=RB;
								Direct1="Direct";
								Mode1 = "Direct1";
								Cash.enabled=true;
								CreditCard.enabled=true;
								Cheque.enabled=true;
								NEFT.enabled=true;
								CompanyInvoice.enabled=false;
								Cash2.enabled=true;
								CreditCard2.enabled=true;
								Cheque2.enabled=true;
								NEFT2.enabled=true;
								CompanyInvoice2.enabled=false;
							}
							else if(RB=="Bill to Company (BTC)")
							{
								BTC.selected=RB;
								BTC1="Bill to Company (BTC)";
								Mode1 = "Bill to Company (BTC)";
								Cash.enabled=false;
								CreditCard.enabled=false;
								Cheque.enabled=false;
								NEFT.enabled=false;
								CompanyInvoice.enabled=true;
								Cash2.enabled=false;
								CreditCard2.enabled=false;
								Cheque2.enabled=false;
								NEFT2.enabled=false;
								CompanyInvoice2.enabled=true;
							}
							else if(RB=="Bill to Client")
							{
								BTC.selected=RB;
								BTC1="Bill to Client";
								Mode1 = "Bill to Client";
								Cash.enabled=false;
								CreditCard.enabled=false;
								Cheque.enabled=false;
								NEFT.enabled=false;
								CompanyInvoice.enabled=true;
								Cash2.enabled=false;
								CreditCard2.enabled=false;
								Cheque2.enabled=false;
								NEFT2.enabled=false;
								CompanyInvoice2.enabled=true;
							}
						}
						
					}
					if(Ds_Objects.result.Tables.Table4.Rows.length > 0)
					{
						if(Ds_Objects.result.Tables.Table4.Rows[0].Days > 5 )
						{
							if(Checkout.selected=true)
							{
								DT_BillFromDate.enabled=false;
								DT_BillTo.enabled=false;
								Intermediate.enabled=true;
							}
							else
							{
								
								DT_BillFromDate.enabled=true;
								DT_BillTo.enabled=true;
							}
							
						}
						else
						{
							Checkout.selected=true;
							Intermediate.enabled=false;
							DT_BillFromDate.enabled=false;
							DT_BillTo.enabled=false;
						}
						
					}
					if(Ds_Objects.result.Tables.Table5.Rows.length > 0)
					{
						if(Ds_Objects.result.Tables.Table5.Rows[0].IntermediateFlag==1 )
						{
							Checkout.selected=false;
							Checkout.enabled=false;
							Intermediate.selected=true;
							Intermediate.enabled=true;
//							if(Checkout.selected==true)
//							{
//								alignAlert(Alert.show("Please Settlement for the Intermediate Bill","Alert Message !",
//									Alert.OK,null,null,iconWarning,Alert.OK),10,"");
//								
//								return;
//								Intermediate.enabled=true;
//								Intermediate.selected=true;
//								Checkout.selected=false;
//								Checkout.enabled=false;
//							}
//							else if(Intermediate.selected==true)
//							{
//								Intermediate.enabled=true;
//							}
						}
					}
					
				}
				
				if (Ds_Objects.currentTarget.description.toString() == "Guest_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
//						Txt_Stay.text=Ds_Objects.result.Tables.Table.Rows[0].Stay;
//						Txt_Property.text=Ds_Objects.result.Tables.Table.Rows[0].Property;
						lbl_Nettariff.text=Ds_Objects.result.Tables.Table.Rows[0].Tariff;
						DT_CheckOutDate.text=Ds_Objects.result.Tables.Table.Rows[0].ChkoutDate;
						Txt_CheckInDate.text=Ds_Objects.result.Tables.Table.Rows[0].CheckInDate;
//						DT_BillFromDate.text=Ds_Objects.result.Tables.Table.Rows[0].CheckInDate;
//						DT_BillTo.text=Ds_Objects.result.Tables.Table.Rows[0].ChkoutDate;
//						lbl_tariff.text=Ds_Objects.result.Tables.Table.Rows[0].Tariff;
//						dt_ServiceDate.text=Ds_Objects.result.Tables.Table.Rows[0].CheckInDate;
						Txt_AdditionalCharge.text=Ds_Objects.result.Tables.Table.Rows[0].Tariff;
//						
//						var sdfs:String=dt_ServiceDate.text;			
//						var sdfs1:String=DT_CheckOutDate.text;
//						
//						var D:String=sdfs.substr(0,2);
//						var M:String=sdfs.substr(3,2);
//						var Y:String=sdfs.substr(6,10);
//						var D1:String=sdfs1.substr(0,2);
//						var M1:String=sdfs1.substr(3,2);
//						var Y1:String=sdfs1.substr(6,10);
//						var RangeMiddle:String=Y+'/'+M+'/'+D;
//						var RangeEnd:String=Y1+'/'+M1+'/'+D1;
//						var RangeStart:String=Y+'/'+M+'/'+D;
//						dt_ServiceDate.selectableRange = 
//							{rangeStart:new Date(RangeStart),rangeEnd:new Date(RangeEnd)};
//						dt_ServiceDate.selectedDate=new Date(RangeStart);
//						
//						
					}
//					if(Ds_Objects.result.Tables.Table1.Rows.length > 0)
//					{
//						Txt_Billdate.text=Ds_Objects.result.Tables.Table1.Rows[0].BillDate;
//					}
					if(Ds_Objects.result.Tables.Table2.Rows.length > 0)
					{
						Txt_Name.text=Ds_Objects.result.Tables.Table2.Rows[0].Name;
						Txt_type.text=Ds_Objects.result.Tables.Table2.Rows[0].EmpCode;
						Txt_bookinlevel.text=Ds_Objects.result.Tables.Table2.Rows[0].RoomNo;
						Txt_Apartment.text=Ds_Objects.result.Tables.Table2.Rows[0].ApartmentType;
						Txt_Bed.text=Ds_Objects.result.Tables.Table2.Rows[0].BedType;
						Txt_PropertyType.text=Ds_Objects.result.Tables.Table2.Rows[0].PropertyType;
					}
					if(Ds_Objects.result.Tables.Table3.Rows.length > 0)
					{
						Txt_Client.text=Ds_Objects.result.Tables.Table3.Rows[0].ClientName;
						ClientId=Ds_Objects.result.Tables.Table3.Rows[0].ClientId;
						CityId=Ds_Objects.result.Tables.Table3.Rows[0].CityId;
						ServiceChargeChk=Ds_Objects.result.Tables.Table3.Rows[0].ServiceChargeChk;	
						if(ServiceChargeChk == 1)
						{
							chk_ServiceCharge.selected=true;
							chk_ServiceCharge.enabled=false;
						}
						else
						{
							chk_ServiceCharge.enabled=true;
							chk_ServiceCharge.selected=false;
						}
						var RB:String=Ds_Objects.result.Tables.Table3.Rows[0].TariffPaymentMode;
						//		var RB:String = "true";
						var RB1:Boolean = RB == Ds_Objects.result.Tables.Table3.Rows[0].TariffPaymentMode;
						new_TariffPaymentMode=Ds_Objects.result.Tables.Table3.Rows[0].TariffPaymentMode;
						if(RB1!="")
						{
							if(RB=="Direct")
							{
								Direct.selected=RB;
								Direct1="Direct";
								Mode1 = "Direct1";
								Cash.enabled=true;
								CreditCard.enabled=true;
								Cheque.enabled=true;
								NEFT.enabled=true;
								CompanyInvoice.enabled=false;
								Cash2.enabled=true;
								CreditCard2.enabled=true;
								Cheque2.enabled=true;
								NEFT2.enabled=true;
								CompanyInvoice2.enabled=false;
							}
							else if(RB=="Bill to Company (BTC)")
							{
								BTC.selected=RB;
								BTC1="Bill to Company (BTC)";
								Mode1 = "Bill to Company (BTC)";
								Cash.enabled=false;
								CreditCard.enabled=false;
								Cheque.enabled=false;
								NEFT.enabled=false;
								CompanyInvoice.enabled=true;
								Cash2.enabled=false;
								CreditCard2.enabled=false;
								Cheque2.enabled=false;
								NEFT2.enabled=false;
								CompanyInvoice2.enabled=true;
							}
							else if(RB=="Bill to Client")
							{
								BTC.selected=RB;
								BTC1="Bill to Client";
								Mode1 = "Bill to Client";
								Cash.enabled=false;
								CreditCard.enabled=false;
								Cheque.enabled=false;
								NEFT.enabled=false;
								CompanyInvoice.enabled=true;
								Cash2.enabled=false;
								CreditCard2.enabled=false;
								Cheque2.enabled=false;
								NEFT2.enabled=false;
								CompanyInvoice2.enabled=true;
							}
						}
						
					}
					if(Ds_Objects.result.Tables.Table5.Rows.length > 0)
					{
						lbl_tariff.text=Ds_Objects.result.Tables.Table5.Rows[0].NoofDays;
					}
					//					if(Ds_Objects.result.Tables.Table5.Rows.length > 0)
					//					{
					//						// lbl_tariff.text=Ds_Objects.result.Tables.Table1.Rows[0].TariffDays;
					//						Txt_TotalTariff.text=Ds_Objects.result.Tables.Table5.Rows[0].NetTariff;
					//						
					//					}
					if(Ds_Objects.result.Tables.Table6.Rows.length > 0)
					{
						Txt_TotalTariff.text=Ds_Objects.result.Tables.Table6.Rows[0].NetTariff;
						Txt_Luxury.text=Ds_Objects.result.Tables.Table6.Rows[0].LuxuryTax;
						Txt_ServiceTax12.text=Ds_Objects.result.Tables.Table6.Rows[0].ServiceTax;
						lbl_tarffLT.text=Ds_Objects.result.Tables.Table6.Rows[0].LT;
						lbl_TariffST.text=Ds_Objects.result.Tables.Table6.Rows[0].ST;
					}
					//This is for Tariff Entry Check
					if(Ds_Objects.result.Tables.Table7.Rows.length > 0)
					{
						if(Ds_Objects.result.Tables.Table7.Rows[0].Id1==0 )
						{
							bdr_Tariff.visible =true;
							bdr_Tariff.enabled =true;
							btn_Service.enabled = true;
							Btn_ServiceGenerate.enabled=false;
							
							
						}
						else
						{
							btn_Tariff.enabled=false;
							bdr_Tariff.visible =false;
							btn_Service.enabled =true;
							bdr_Service.visible =true;
							Btn_Settlement.enabled=true;
							Btn_ServiceGenerate.enabled=true;
							//							Btn_Settlement_clickHandler();
							//	bdr_Settle.visible=true;
							
						}
					}
					
					//This is for service Entry Check
					if(Ds_Objects.result.Tables.Table8.Rows.length > 0)
					{
						//						if(Ds_Objects.result.Tables.Table8.Rows[0].Id2==0 )
						//						{
						//							bdr_Tariff.visible =true;
						//							bdr_Tariff.enabled =true;
						//							btn_Service.enabled =true;
						//							
						////							alignAlert(Alert.show("Please Enter KOT Details.","Message !",
						////								Alert.OK, null, null, iconErrLarge, Alert.OK),10,"");
						////							else(Ds_Objects.result.Tables.Table1.Rows.length == 0)
						////							{
						////								if(btn_Service.enabled == true)
						////								{
						////									alignAlert(Alert.show("Please Enter KOT Details.","Message !",
						////										Alert.OK, null, null, iconErrLarge, Alert.OK),10,"");	
						////								}
						////							}
						//						//	bdr_Service.visible =true;
						//						}
						if(Ds_Objects.result.Tables.Table8.Rows[0].Id2==0 )
						{
							var BillFrom:String="";
							var BillTo:String="";
							BillFrom=DT_BillFromDate.text;
							BillTo=DT_BillTo.text;
							
							useWeb("CheckOutServiceHdr","TariffLoad_CUSTOM",[GlobalXml,"ProductLoad",CheckInHdrId,GuestId,StateId,BillFrom,BillTo,0]);
							
							
						}
						else
						{
							bdr_Tariff.visible =false;
							bdr_Tariff.enabled =false;
							btn_Service.enabled =true;
							bdr_Service.visible =true;
							Btn_ServiceGenerate.enabled=true;
							Btn_Settlement.enabled=true;
							bdr_Settle.visible=true;
							
							Grid_Service.dataProvider=null;
							CheckOutHdrId=0;lbl_tariff.text="";
							Txt_ServiceBillAmt.text="";
							Txt_ServiceVat.text="";Txt_SerivceTax.text="";
							Txt_ServiceNetAmount.text="";
							Txt_TotalTariff.text="";
							Txt_NetAmount.text="";Txt_AdditionalCharge.text="";
							Txt_Discount.text="";Txt_Totaldiscount.text="";
							Txt_Luxury.text="";Txt_ServiceTax12.text="";
							Txt_NetAmount.text="";Txt_referance.text="";
							Txt_Discount.text="";Txt_Totaldiscount.text="";
							Id=0;Txt_ServiceCharge2.text="";
							Txt_Servicecharge12.text="";Txt_ServiceTax7.text="";
							Txt_Cess.text="";Txt_HECess.text="";F1="";
							F2="";Txt_ServiceEcess.text="";Txt_serviceHECess.text="";
							dt_ServiceDate.text="";
							Chk_Miscellaneous.selected=false;
							txt_MiscellaneousAmount.text="";
							txt_MiscellaneousRemarks.text="";
							txt_MiscellaneousAmount.visible=false;
							txt_MiscellaneousRemarks.visible=false;
						}
						if(Ds_Objects.result.Tables.Table8.Rows[0].Id2==2 )
						{
							btn_Service.enabled =true;
							bdr_Service.visible =true;
							Btn_Settlement.enabled=true;
							bdr_Settle.visible=true;
							bdr_Tariff.visible =false;
							bdr_Tariff.enabled =false;
							btn_Service.enabled =true;
							bdr_Service.visible =true;
							Btn_ServiceGenerate.enabled=true;
							Btn_Settlement.enabled=true;
							bdr_Settle.visible=true;
							
							Grid_Service.dataProvider=null;
							CheckOutHdrId=0;lbl_tariff.text="";
							Txt_ServiceBillAmt.text="";
							Txt_ServiceVat.text="";Txt_SerivceTax.text="";
							Txt_ServiceNetAmount.text="";
							Txt_TotalTariff.text="";
							Txt_NetAmount.text="";Txt_AdditionalCharge.text="";
							Txt_Discount.text="";Txt_Totaldiscount.text="";
							Txt_Luxury.text="";Txt_ServiceTax12.text="";
							Txt_NetAmount.text="";Txt_referance.text="";
							Txt_Discount.text="";Txt_Totaldiscount.text="";
							Id=0;Txt_ServiceCharge2.text="";
							Txt_Servicecharge12.text="";Txt_ServiceTax7.text="";
							Txt_Cess.text="";Txt_HECess.text="";F1="";
							F2="";Txt_ServiceEcess.text="";Txt_serviceHECess.text="";
							dt_ServiceDate.text="";
							Chk_Miscellaneous.selected=false;
							txt_MiscellaneousAmount.text="";
							txt_MiscellaneousRemarks.text="";
							txt_MiscellaneousAmount.visible=false;
							txt_MiscellaneousRemarks.visible=false;
							
							if(Ds_Objects.result.Tables.Table11.Rows.length > 0)
							{
								Grid_Settle.dataProvider=Ds_Objects.result.Tables.Table11.Rows as ArrayCollection;
							}
							else
							{
								Grid_Settle.dataProvider=null;
							}
							if(RB=="Direct")
							{
								FnServiceClr();
								Cash.enabled=true;
								CreditCard.enabled=true;
								Cheque.enabled=true;
								NEFT.enabled=true;
								CompanyInvoice.enabled=false;
								Cash2.enabled=true;
								CreditCard2.enabled=true;
								Cheque2.enabled=true;
								NEFT2.enabled=true;
								CompanyInvoice2.enabled=false;
								if (Ds_Objects.result.Tables.Table12.Rows.length > 0)
								{
									Txt_Pname.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
									Txt_SName.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
									Txt_CName.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
								}
								
								if (Ds_Objects.result.Tables.Table13.Rows.length > 0)
								{
									
									Txt_TariffLoad.text=NF_Two.format(Math.round(Ds_Objects.result.Tables.Table13.Rows[0].ChkOutTariffNetAmount));
									Txt_Tariffadvance.text=Ds_Objects.result.Tables.Table13.Rows[0].ChkinAdvance;
								}
								if (Ds_Objects.result.Tables.Table14.Rows.length > 0)
								{
									Txt_ServiceAdvance.text=Ds_Objects.result.Tables.Table14.Rows[0].ChkinAdvance;
									Txt_ServiceLoad.text=Ds_Objects.result.Tables.Table14.Rows[0].ChkOutServiceNetAmount;
								}
								if (Ds_Objects.result.Tables.Table15.Rows.length > 0)
								{
									Txt_ConAdvance.text=Ds_Objects.result.Tables.Table15.Rows[0].ChkinAdvance;
									Txt_ConsolidateLoad.text=Ds_Objects.result.Tables.Table15.Rows[0].ConsolidateAmount;
									Txt_ConsolidateOutStanding.text=Ds_Objects.result.Tables.Table15.Rows[0].ConsolidateAmount;
								}
								OpenCheckoutBillButton();
							}
							if(RB=="Bill to Company (BTC)")
							{
								FnServiceClr();
								Cash.enabled=false;
								CreditCard.enabled=false;
								Cheque.enabled=false;
								NEFT.enabled=false;
								CompanyInvoice.enabled=true;
								Cash2.enabled=false;
								CreditCard2.enabled=false;
								Cheque2.enabled=false;
								NEFT2.enabled=false;
								CompanyInvoice2.enabled=true;
								if (Ds_Objects.result.Tables.Table12.Rows.length > 0)
								{
									Txt_Pname.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
									Txt_SName.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
									Txt_CName.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
								}
								
								if (Ds_Objects.result.Tables.Table13.Rows.length > 0)
								{
									
									Txt_TariffLoad.text=NF_Two.format(Math.round(Ds_Objects.result.Tables.Table13.Rows[0].ChkOutTariffNetAmount));
									Txt_Tariffadvance.text=Ds_Objects.result.Tables.Table13.Rows[0].ChkinAdvance;
									Txt_TariffPayAmount.text=Ds_Objects.result.Tables.Table13.Rows[0].ChkOutTariffNetAmount;
									//			Txt_TariffPayAmount.editable=false;
								}
								if (Ds_Objects.result.Tables.Table14.Rows.length > 0)
								{
									Txt_ServiceAdvance.text=Ds_Objects.result.Tables.Table14.Rows[0].ChkinAdvance;
									Txt_ServiceLoad.text=Ds_Objects.result.Tables.Table14.Rows[0].ChkOutServiceNetAmount;
								}
								if (Ds_Objects.result.Tables.Table15.Rows.length > 0)
								{
									Txt_ConAdvance.text=Ds_Objects.result.Tables.Table15.Rows[0].ChkinAdvance;
									Txt_ConsolidateLoad.text=Ds_Objects.result.Tables.Table15.Rows[0].ConsolidateAmount;
									Txt_ConsolidateOutStanding.text=Ds_Objects.result.Tables.Table15.Rows[0].ConsolidateAmount;
								}
								OpenCheckoutBillButton();
							}
							
							if(RB=="Bill to Client")
							{
								FnServiceClr();
								Cash.enabled=false;
								CreditCard.enabled=false;
								Cheque.enabled=false;
								NEFT.enabled=false;
								CompanyInvoice.enabled=true;
								Cash2.enabled=false;
								CreditCard2.enabled=false;
								Cheque2.enabled=false;
								NEFT2.enabled=false;
								CompanyInvoice2.enabled=true;
								if (Ds_Objects.result.Tables.Table12.Rows.length > 0)
								{
									Txt_Pname.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
									Txt_SName.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
									Txt_CName.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
								}
								
								if (Ds_Objects.result.Tables.Table13.Rows.length > 0)
								{
									
									Txt_TariffLoad.text=NF_Two.format(Math.round(Ds_Objects.result.Tables.Table13.Rows[0].ChkOutTariffNetAmount));
									Txt_Tariffadvance.text=Ds_Objects.result.Tables.Table13.Rows[0].ChkinAdvance;
									Txt_TariffPayAmount.text=Ds_Objects.result.Tables.Table13.Rows[0].ChkOutTariffNetAmount;
									//		Txt_TariffPayAmount.editable=false;
								}
								if (Ds_Objects.result.Tables.Table14.Rows.length > 0)
								{
									Txt_ServiceAdvance.text=Ds_Objects.result.Tables.Table14.Rows[0].ChkinAdvance;
									Txt_ServiceLoad.text=Ds_Objects.result.Tables.Table14.Rows[0].ChkOutServiceNetAmount;
								}
								if (Ds_Objects.result.Tables.Table15.Rows.length > 0)
								{
									Txt_ConAdvance.text=Ds_Objects.result.Tables.Table15.Rows[0].ChkinAdvance;
									Txt_ConsolidateLoad.text=Ds_Objects.result.Tables.Table15.Rows[0].ConsolidateAmount;
									Txt_ConsolidateOutStanding.text=Ds_Objects.result.Tables.Table15.Rows[0].ConsolidateAmount;
								}
								OpenCheckoutBillButton();
							}
							//	Btn_Settlement_clickHandler();
							
							
						}
						else
						{
							
							
							if(Ds_Objects.result.Tables.Table11.Rows.length > 0)
							{
								Grid_Service.dataProvider=null;
								CheckOutHdrId=0;lbl_tariff.text="";
								Txt_ServiceBillAmt.text="";
								Txt_ServiceVat.text="";Txt_SerivceTax.text="";
								Txt_ServiceNetAmount.text="";
								Txt_TotalTariff.text="";
								Txt_NetAmount.text="";Txt_AdditionalCharge.text="";
								Txt_Discount.text="";Txt_Totaldiscount.text="";
								Txt_Luxury.text="";Txt_ServiceTax12.text="";
								Txt_NetAmount.text="";Txt_referance.text="";
								Txt_Discount.text="";Txt_Totaldiscount.text="";
								Id=0;Txt_ServiceCharge2.text="";
								Txt_Servicecharge12.text="";Txt_ServiceTax7.text="";
								Txt_Cess.text="";Txt_HECess.text="";F1="";
								F2="";Txt_ServiceEcess.text="";Txt_serviceHECess.text="";
								dt_ServiceDate.text="";
								Chk_Miscellaneous.selected=false;
								txt_MiscellaneousAmount.text="";
								txt_MiscellaneousRemarks.text="";
								txt_MiscellaneousAmount.visible=false;
								txt_MiscellaneousRemarks.visible=false;
								// settlement Grid Load
								if(Ds_Objects.result.Tables.Table11.Rows.length>0)
								{
									Grid_Settle.dataProvider=Ds_Objects.result.Tables.Table11.Rows as ArrayCollection;
								}
								else
								{
									Grid_Settle.dataProvider=null;
								}
								
								
								if(RB=="Direct")
								{
									FnServiceClr();
									Cash.enabled=true;
									CreditCard.enabled=true;
									Cheque.enabled=true;
									NEFT.enabled=true;
									CompanyInvoice.enabled=false;
									Cash2.enabled=true;
									CreditCard2.enabled=true;
									Cheque2.enabled=true;
									NEFT2.enabled=true;
									CompanyInvoice2.enabled=false;
									Grid_Service.dataProvider=null;
									if (Ds_Objects.result.Tables.Table12.Rows.length > 0)
									{
										Txt_Pname.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
										Txt_SName.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
										Txt_CName.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
									}
									
									if (Ds_Objects.result.Tables.Table13.Rows.length > 0)
									{
										
										Txt_TariffLoad.text=NF_Two.format(Math.round(Ds_Objects.result.Tables.Table13.Rows[0].ChkOutTariffNetAmount));
										Txt_Tariffadvance.text=Ds_Objects.result.Tables.Table13.Rows[0].ChkinAdvance;
									}
									if (Ds_Objects.result.Tables.Table14.Rows.length > 0)
									{
										Txt_ServiceAdvance.text=Ds_Objects.result.Tables.Table14.Rows[0].ChkinAdvance;
										Txt_ServiceLoad.text=Ds_Objects.result.Tables.Table14.Rows[0].ChkOutServiceNetAmount;
									}
									if (Ds_Objects.result.Tables.Table15.Rows.length > 0)
									{
										Txt_ConAdvance.text=Ds_Objects.result.Tables.Table15.Rows[0].ChkinAdvance;
										Txt_ConsolidateLoad.text=Ds_Objects.result.Tables.Table15.Rows[0].ConsolidateAmount;
										Txt_ConsolidateOutStanding.text=Ds_Objects.result.Tables.Table15.Rows[0].ConsolidateAmount;
									}
									OpenCheckoutBillButton();
								}
								if(RB=="Bill to Company (BTC)")
								{
									FnServiceClr();
									Cash.enabled=false;
									CreditCard.enabled=false;
									Cheque.enabled=false;
									NEFT.enabled=false;
									CompanyInvoice.enabled=true;
									Cash2.enabled=false;
									CreditCard2.enabled=false;
									Cheque2.enabled=false;
									NEFT2.enabled=false;
									CompanyInvoice2.enabled=true;
									Grid_Service.dataProvider=null;
									
									CheckOutHdrId=0;lbl_tariff.text="";
									Txt_ServiceBillAmt.text="";
									Txt_ServiceVat.text="";Txt_SerivceTax.text="";
									Txt_ServiceNetAmount.text="";
									Txt_TotalTariff.text="";
									Txt_NetAmount.text="";Txt_AdditionalCharge.text="";
									Txt_Discount.text="";Txt_Totaldiscount.text="";
									Txt_Luxury.text="";Txt_ServiceTax12.text="";
									Txt_NetAmount.text="";Txt_referance.text="";
									Txt_Discount.text="";Txt_Totaldiscount.text="";
									Id=0;Txt_ServiceCharge2.text="";
									Txt_Servicecharge12.text="";Txt_ServiceTax7.text="";
									Txt_Cess.text="";Txt_HECess.text="";F1="";
									F2="";Txt_ServiceEcess.text="";Txt_serviceHECess.text="";
									dt_ServiceDate.text="";
									Chk_Miscellaneous.selected=false;
									txt_MiscellaneousAmount.text="";
									txt_MiscellaneousRemarks.text="";
									txt_MiscellaneousAmount.visible=false;
									txt_MiscellaneousRemarks.visible=false;
									if (Ds_Objects.result.Tables.Table12.Rows.length > 0)
									{
										Txt_Pname.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
										Txt_SName.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
										Txt_CName.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
									}
									
									if (Ds_Objects.result.Tables.Table13.Rows.length > 0)
									{
										
										Txt_TariffLoad.text=NF_Two.format(Math.round(Ds_Objects.result.Tables.Table13.Rows[0].ChkOutTariffNetAmount));
										Txt_Tariffadvance.text=Ds_Objects.result.Tables.Table13.Rows[0].ChkinAdvance;
										Txt_TariffPayAmount.text=Ds_Objects.result.Tables.Table13.Rows[0].ChkOutTariffNetAmount;
										//			Txt_TariffPayAmount.editable=false;
									}
									if (Ds_Objects.result.Tables.Table14.Rows.length > 0)
									{
										Txt_ServiceAdvance.text=Ds_Objects.result.Tables.Table14.Rows[0].ChkinAdvance;
										Txt_ServiceLoad.text=Ds_Objects.result.Tables.Table14.Rows[0].ChkOutServiceNetAmount;
									}
									if (Ds_Objects.result.Tables.Table15.Rows.length > 0)
									{
										Txt_ConAdvance.text=Ds_Objects.result.Tables.Table15.Rows[0].ChkinAdvance;
										Txt_ConsolidateLoad.text=Ds_Objects.result.Tables.Table15.Rows[0].ConsolidateAmount;
										Txt_ConsolidateOutStanding.text=Ds_Objects.result.Tables.Table15.Rows[0].ConsolidateAmount;
									}
									OpenCheckoutBillButton();
								}
								
								if(RB=="Bill to Client")
								{
									FnServiceClr();
									Cash.enabled=false;
									CreditCard.enabled=false;
									Cheque.enabled=false;
									NEFT.enabled=false;
									CompanyInvoice.enabled=true;
									Cash2.enabled=false;
									CreditCard2.enabled=false;
									Cheque2.enabled=false;
									NEFT2.enabled=false;
									CompanyInvoice2.enabled=true;
									Grid_Service.dataProvider=null;
									CheckOutHdrId=0;lbl_tariff.text="";
									Txt_ServiceBillAmt.text="";
									Txt_ServiceVat.text="";Txt_SerivceTax.text="";
									Txt_ServiceNetAmount.text="";
									Txt_TotalTariff.text="";
									Txt_NetAmount.text="";Txt_AdditionalCharge.text="";
									Txt_Discount.text="";Txt_Totaldiscount.text="";
									Txt_Luxury.text="";Txt_ServiceTax12.text="";
									Txt_NetAmount.text="";Txt_referance.text="";
									Txt_Discount.text="";Txt_Totaldiscount.text="";
									Id=0;Txt_ServiceCharge2.text="";
									Txt_Servicecharge12.text="";Txt_ServiceTax7.text="";
									Txt_Cess.text="";Txt_HECess.text="";F1="";
									F2="";Txt_ServiceEcess.text="";Txt_serviceHECess.text="";
									dt_ServiceDate.text="";
									Chk_Miscellaneous.selected=false;
									txt_MiscellaneousAmount.text="";
									txt_MiscellaneousRemarks.text="";
									txt_MiscellaneousAmount.visible=false;
									txt_MiscellaneousRemarks.visible=false;
									if (Ds_Objects.result.Tables.Table12.Rows.length > 0)
									{
										Txt_Pname.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
										Txt_SName.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
										Txt_CName.text=Ds_Objects.result.Tables.Table12.Rows[0].Name;
									}
									
									if (Ds_Objects.result.Tables.Table13.Rows.length > 0)
									{
										
										Txt_TariffLoad.text=NF_Two.format(Math.round(Ds_Objects.result.Tables.Table13.Rows[0].ChkOutTariffNetAmount));
										Txt_Tariffadvance.text=Ds_Objects.result.Tables.Table13.Rows[0].ChkinAdvance;
										Txt_TariffPayAmount.text=Ds_Objects.result.Tables.Table13.Rows[0].ChkOutTariffNetAmount;
										//		Txt_TariffPayAmount.editable=false;
									}
									if (Ds_Objects.result.Tables.Table14.Rows.length > 0)
									{
										Txt_ServiceAdvance.text=Ds_Objects.result.Tables.Table14.Rows[0].ChkinAdvance;
										Txt_ServiceLoad.text=Ds_Objects.result.Tables.Table14.Rows[0].ChkOutServiceNetAmount;
									}
									if (Ds_Objects.result.Tables.Table15.Rows.length > 0)
									{
										Txt_ConAdvance.text=Ds_Objects.result.Tables.Table15.Rows[0].ChkinAdvance;
										Txt_ConsolidateLoad.text=Ds_Objects.result.Tables.Table15.Rows[0].ConsolidateAmount;
										Txt_ConsolidateOutStanding.text=Ds_Objects.result.Tables.Table15.Rows[0].ConsolidateAmount;
									}
									OpenCheckoutBillButton();
								}
								
							}
							
						}
					}
					
					if(Ds_Objects.result.Tables.Table9.Rows.length > 0)
					{
						PrintChkOutId=Ds_Objects.result.Tables.Table9.Rows[0].Id;
					}
					
					
					if(Ds_Objects.result.Tables.Table10.Rows.length > 0)
					{
						if(Ds_Objects.result.Tables.Table10.Rows[0].Tariff==0 )
						{
							Chk_change.visible=false;
							lbl_additional.visible=false;
						}
						else
						{
							Chk_change.visible=true;
							lbl_additional.visible=true;
						}
					}
					
					//					if(Ds_Objects.result.Tables.Table16.Rows.length > 0)
					//					{
					//						if(Ds_Objects.result.Tables.Table16.Rows[0].UnPaid==0 )
					//						{
					//							btn_Settle.enabled=true
					//						}
					//						else
					//						{
					//							btn_Settle.enabled=false;
					//						}
					//					}
					if(ServiceChargeChk == 1)
					{
						chk_ServiceCharge.selected=true;
						var LT1:Number=Number(lbl_tarffLT.text);
						if(LT1 !=0)
						{
							var NoOfdays:Number=(Number(lbl_tariff.text))
							
							var total:Number=((Number(lbl_Nettariff.text))*NoOfdays);
							
							Txt_TotalTariff.text=NF_Two.format(total);
							
							var luxury:Number=Math.round(Number(Txt_Luxury.text));
							
							Txt_Luxury.text=NF_Two.format(luxury);
							
							var service:Number=Math.round(Number(Txt_ServiceTax12.text));
							
							Txt_ServiceTax12.text=NF_Two.format(service);
							
							var Charges:Number=0;
							
							Charges=Number(total*2.5/100);
							
							ServiceChargeValue2Per=Charges;
							
							Txt_ServiceCharge2.text=NF_Two.format(Charges);
							
							var ServiceTax:Number=0;
							
							ServiceTax=Number(Charges*12.00/100);
							
							ServiceChargeValue12Per=ServiceTax;
							
							Txt_Servicecharge12.text=NF_Two.format(ServiceTax);
							
							var Cess:Number=0;
							
							Cess=Number((service+ServiceTax)*2/100);
							
							Txt_Cess.text=NF_Two.format(Cess);
							
							var HECess:Number=0;
							
							HECess=Number((service+ServiceTax)*1/100);
							
							Txt_HECess.text=NF_Two.format(HECess);
							Txt_NetAmount.text=NF_Two.format(Math.round(Number(total+luxury+service+Charges+ServiceTax+Cess+HECess+ExtraMaters))).toString();
							
							btn_Tariff.Button_B_mouseOverHandler();
							btn_Service.Button_OutHandler();					
							Btn_Settlement.Button_OutHandler();
						}
						else
						{
							var total:Number=Math.round(Number(lbl_Nettariff.text));
							var NoOfdays:Number=(Number(lbl_tariff.text))
							Txt_TotalTariff.text=NF_Two.format(Number(total*NoOfdays))
							Txt_NetAmount.text=NF_Two.format(Number(total*NoOfdays))
						} 
						
					}
					else
					{
						chk_ServiceCharge.selected=false;
						//	chk_ServiceCharge.selected=true;
						var LT1:Number=Number(lbl_tarffLT.text);
						if(LT1 !=0)
						{
							var NoOfdays:Number=(Number(lbl_tariff.text))
							
							var total:Number=((Number(lbl_Nettariff.text))*NoOfdays);
							
							Txt_TotalTariff.text=NF_Two.format(total);
							
							var luxury:Number=Math.round(Number(Txt_Luxury.text));
							
							Txt_Luxury.text=NF_Two.format(luxury);
							
							var service:Number=Math.round(Number(Txt_ServiceTax12.text));
							
							Txt_ServiceTax12.text=NF_Two.format(service);
							
							var Charges:Number=0;
							
							Charges=Number(0*2.5/100);
							
							ServiceChargeValue2Per=Charges;
							
							Txt_ServiceCharge2.text=NF_Two.format(Charges);
							
							var ServiceTax:Number=0;
							
							ServiceTax=Number(Charges*12.00/100);
							
							ServiceChargeValue12Per=ServiceTax;
							
							Txt_Servicecharge12.text=NF_Two.format(ServiceTax);
							
							var Cess:Number=0;
							
							Cess=Number((service)*2/100);
							
							Txt_Cess.text=NF_Two.format(Cess);
							
							var HECess:Number=0;
							
							HECess=Number((service)*1/100);
							
							Txt_HECess.text=NF_Two.format(HECess);
							Txt_NetAmount.text=NF_Two.format(Math.round(Number(total+luxury+service+Charges+ServiceTax+Cess+HECess+ExtraMaters))).toString();
							
							btn_Tariff.Button_B_mouseOverHandler();
							btn_Service.Button_OutHandler();					
							Btn_Settlement.Button_OutHandler();
						}
						else
						{
							var total:Number=Math.round(Number(lbl_Nettariff.text));
							var NoOfdays:Number=(Number(lbl_tariff.text))
							Txt_TotalTariff.text=NF_Two.format(Number(total*NoOfdays))
							Txt_NetAmount.text=NF_Two.format(Number(total*NoOfdays))
						} 
					}
//					if(Ds_Objects.result.Tables.Table16.Rows.length > 0)
//					{
//						if(Ds_Objects.result.Tables.Table16.Rows[0].IntermediateFlag==1 )
//						{
//							if(Checkout.selected==true)
//							{
//								alignAlert(Alert.show("Please Settlement for the Intermediate Bill","Alert Message !",
//									Alert.OK,null,null,iconWarning,Alert.OK),10,"");
//								
//								return;
//							}
//							else if(Intermediate.selected==true)
//							{
//								Intermediate.enabled=true;
//							}
//						}
//					}
					
				}
				//F1(First)-- Tariff
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					if(F1=="First")
					{
						if(Intermediate.selected==true)
						{
							if(Chk_PIInvoice.selected == true)
							{
								PrintChkOutId=0;
								if (Ds_Objects.result.Tables.Table.Rows.length > 0)
								{
									PrintChkOutId=Ds_Objects.result.Tables.Table.Rows[0].Id;
									ExternalInterface.call("changeDocumentTitle",Str_InChkTar+PrintChkOutId);
									//						alignAlert(Alert.show("Check Out Successfully.","Message !",Alert.OK,
									//							null, FnOk,	iconTickLarge, Alert.OK),10,"");
								}
								else
								{
									alignAlert(Alert.show("Guest Checked Out Successfully.","Message !",Alert.OK,
										null, FnOk,	iconTickLarge, Alert.OK),10,"");
								}
								//	PageLoad();
								btn_Tariff.enabled=false;
								btn_Service.enabled=true;
								Btn_Settlement.enabled=true;
								Btn_ServiceGenerate.enabled=true;
								FnClear();
								btn_Service_clickHandler();
							}
							else
							{
								if (Ds_Objects.result.Tables.Table.Rows.length > 0)
								{
									PrintChkOutId=Ds_Objects.result.Tables.Table.Rows[0].Id;
					//				ExternalInterface.call("changeDocumentTitle",Str_InChkTar+PrintChkOutId);
									ExternalInterface.call("changeDocumentTitle",Str_ChkOut+PrintChkOutId);
									//						alignAlert(Alert.show("Check Out Successfully.","Message !",Alert.OK,
									//							null, FnOk,	iconTickLarge, Alert.OK),10,"");
								}
								else
								{
									alignAlert(Alert.show("Guest Checked Out Successfully.","Message !",Alert.OK,
										null, FnOk,	iconTickLarge, Alert.OK),10,"");
								}
								//	PageLoad();
								btn_Tariff.enabled=false;
								btn_Service.enabled=true;
								Btn_Settlement.enabled=true;
								Btn_ServiceGenerate.enabled=true;
								FnClear();
								btn_Service_clickHandler();
							}
//							PrintChkOutId=0;
//							if (Ds_Objects.result.Tables.Table.Rows.length > 0)
//							{
//								PrintChkOutId=Ds_Objects.result.Tables.Table.Rows[0].Id;
//								ExternalInterface.call("changeDocumentTitle",Str_InChkTar+PrintChkOutId);
//								//						alignAlert(Alert.show("Check Out Successfully.","Message !",Alert.OK,
//								//							null, FnOk,	iconTickLarge, Alert.OK),10,"");
//							}
//							else
//							{
//								alignAlert(Alert.show("Guest Checked Out Successfully.","Message !",Alert.OK,
//									null, FnOk,	iconTickLarge, Alert.OK),10,"");
//							}
//							//	PageLoad();
//							btn_Tariff.enabled=false;
//							btn_Service.enabled=true;
//							Btn_Settlement.enabled=true;
//							Btn_ServiceGenerate.enabled=true;
//							FnClear();
//							btn_Service_clickHandler();
						}
						else
						{
							PrintChkOutId=0;
							if (Ds_Objects.result.Tables.Table.Rows.length > 0)
							{
								PrintChkOutId=Ds_Objects.result.Tables.Table.Rows[0].Id;
								ExternalInterface.call("changeDocumentTitle",Str_ChkOut+PrintChkOutId);
								//						alignAlert(Alert.show("Check Out Successfully.","Message !",Alert.OK,
								//							null, FnOk,	iconTickLarge, Alert.OK),10,"");
							}
							else
							{
								alignAlert(Alert.show("Guest Checked Out Successfully.","Message !",Alert.OK,
									null, FnOk,	iconTickLarge, Alert.OK),10,"");
							}
							//	PageLoad();
							btn_Tariff.enabled=false;
							btn_Service.enabled=true;
							Btn_Settlement.enabled=true;
							Btn_ServiceGenerate.enabled=true;
							FnClear();
							btn_Service_clickHandler();
						}
						
					}
					//F2(Second)--Service
					if(F2=="Second")
					{
						if(Intermediate.selected==true)
						{
							PrintChkOutId=0;
							if (Ds_Objects.result.Tables.Table.Rows.length > 0)
							{
								PrintChkOutId=Ds_Objects.result.Tables.Table.Rows[0].Id;
								ExternalInterface.call("changeDocumentTitle",Str_Serv+PrintChkOutId);
							}
							else
							{
								alignAlert(Alert.show("Check Services Saved Successfully.","Message !",Alert.OK,
									null, FnOk,	iconTickLarge, Alert.OK),10,"");
							}
							FnServiceClr();					
							Btn_Settlement_clickHandler();
						}
						else
						{
							PrintChkOutId=0;
							if (Ds_Objects.result.Tables.Table.Rows.length > 0)
							{
								PrintChkOutId=Ds_Objects.result.Tables.Table.Rows[0].Id;
								ExternalInterface.call("changeDocumentTitle",Str_Serv+PrintChkOutId);
							}
							else
							{
								alignAlert(Alert.show("Check Services Saved Successfully.","Message !",Alert.OK,
									null, FnOk,	iconTickLarge, Alert.OK),10,"");
							}
							FnServiceClr();					
							Btn_Settlement_clickHandler();
						}
						
					}
					//F3(Third)--Settlement
					if(F3=="third")
					{
						if(Intermediate.selected==true)
						{
							PrintChkOutId=0;
							if (Ds_Objects.result.Tables.Table.Rows.length > 0)
							{
								//							PrintChkOutId=Ds_Objects.result.Tables.Table.Rows[0].Id;
								//							ExternalInterface.call("changeDocumentTitle",Str_Settle+PrintChkOutId);
								alignAlert(Alert.show("Check Out Successfully.","Message !",Alert.OK,
									null, FnOk,	iconTickLarge, Alert.OK),10,"");
								
							}
							else
							{
								alignAlert(Alert.show("Check Settlement Saved Successfully.","Message !",Alert.OK,
									null, FnOk,	iconTickLarge, Alert.OK),10,"");
							}
							//PageLoad();
							FnSettleClr();
							Grid_Settle.dataProvider= null;
							//FnServiceClr();
							hlp_property.dataProvider= null;
							hlp_GuestName.dataProvider= null;
							hlp_GuestName.enabled=false;
							//FnClear();
							bdr_Consolidate.enabled=true;
							
							Btn_Settlement.enabled=false;
							btn_SerPay.enabled=false;
							bdr_Tariff.visible=true;
							bdr_Tariff.enabled=false;
							bdr_Service.visible=false;
							bdr_Settle.visible=false;
							btn_Service.enabled=false;
							F4="";
							F5="";
							F6="";
							F7="";
							F8="";
							hlp_property.setFocus();
						}
						else
						{
							PrintChkOutId=0;
							if (Ds_Objects.result.Tables.Table.Rows.length > 0)
							{
								//							PrintChkOutId=Ds_Objects.result.Tables.Table.Rows[0].Id;
								//							ExternalInterface.call("changeDocumentTitle",Str_Settle+PrintChkOutId);
								alignAlert(Alert.show("Check Out Successfully.","Message !",Alert.OK,
									null, FnOk,	iconTickLarge, Alert.OK),10,"");
								
							}
							else
							{
								alignAlert(Alert.show("Check Settlement Saved Successfully.","Message !",Alert.OK,
									null, FnOk,	iconTickLarge, Alert.OK),10,"");
							}
							//PageLoad();
							FnSettleClr();
							Grid_Settle.dataProvider= null;
							//FnServiceClr();
							hlp_property.dataProvider= null;
							hlp_GuestName.dataProvider= null;
							hlp_GuestName.enabled=false;
							//FnClear();
							bdr_Consolidate.enabled=true;
							
							Btn_Settlement.enabled=false;
							btn_SerPay.enabled=false;
							bdr_Tariff.visible=true;
							bdr_Tariff.enabled=false;
							bdr_Service.visible=false;
							bdr_Settle.visible=false;
							btn_Service.enabled=false;
							F4="";
							F5="";
							F6="";
							F7="";
							F8="";
							hlp_property.setFocus();
						}
						
					}
					//F4-Cash,F5-Card,F6-Cheque,F7-CompanyInvoice,F8-NEFT					
					if(Mode=="Tariff")
					{
						if(F4=="Cash")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							
							//							
							
							
							
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Payment Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
							// just showing display paid amount
								lbl_tariffpaid.text=Txt_TariffPayAmount.text
								lbl_tariffpaymode.text='Cash'
									
							}
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							
							F4="";
							F5="";
							F6="";
							F7="";
							F8="";
							//	PageLoad();
							//			FnSettleClr();
							TariffPayClr();
							ServicePayClr();
							
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
						}
						if(F5=="Card")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							//							
							
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Payment Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
								// just showing display paid amount
								lbl_tariffpaid.text=Txt_TariffPayAmount.text
								lbl_tariffpaymode.text='Card'
							}
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							//		PageLoad();
							//				FnSettleClr();
							TariffPayClr();
							ServicePayClr();
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
							F4="";
							F5="";
							F6="";
							F7="";
							F8="";
						}
						if(F6=="Cheque")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							//							
							
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Payment Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
								
								// just showing display paid amount
								lbl_tariffpaid.text=Txt_TariffPayAmount.text
								lbl_tariffpaymode.text='Cheque'
							}
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							//			PageLoad();
							//					FnSettleClr();
							TariffPayClr();
							ServicePayClr();
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
							F4="";
							F5="";
							F6="";
							F7="";
							F8="";
						}
						if(F7=="CompanyInvoice")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							
							BTCSId=Ds_Objects.result.Tables.Table.Rows[0].Id;
							
							if(FilePath.text!="")
							{
								init();	
								uploadFiles();
							}
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Company Invoice Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
								
								// just showing display paid amount
								lbl_tariffpaid.text=Txt_TariffPayAmount.text
								lbl_tariffpaymode.text='CompanyInvoice'
							}
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							
							//			PageLoad();
							//						FnSettleClr();
							TariffPayClr();
							ServicePayClr();
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
							F4="";
							F5="";
							F6="";
							F7="";
							F8="";
						}
						if(F8=="NEFT")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							
							//							
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Payment Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
								// just showing display paid amount
								lbl_tariffpaid.text=Txt_TariffPayAmount.text
								lbl_tariffpaymode.text='NEFT'
							}
								
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							//					PageLoad();
							//					FnSettleClr();
							TariffPayClr();
							ServicePayClr();
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
							F4="";
							F5="";
							F6="";
							F7="";
							F8="";
						}
					}
					if(Mode=="Service")
					{
						if(F4=="Cash")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							
							//							
							
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Payment Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
								
								// just showing display paid amount
								lbl_ServicePaid.text=Txt_ServicePayAmount.text
								lbl_ServicePayMode.text='Cash'
							}
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							//		PageLoad();
							//		FnSettleClr();
							TariffPayClr();
							ServicePayClr();
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
							F4="";
							F5="";
							F6="";
							F7="";
							F8="";
						}
						if(F5=="Card")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							
							//							
							
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Payment Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
								
								// just showing display paid amount
								lbl_ServicePaid.text=Txt_ServicePayAmount.text
								lbl_ServicePayMode.text='Card'
							}
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							
							//		PageLoad();
							//		FnSettleClr();
							TariffPayClr();
							ServicePayClr();
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
							F4="";
							F5="";
							F6="";
							F7="";
							F8="";
						}
						if(F6=="Cheque")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							
							//							
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Payment Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
								
								// just showing display paid amount
								lbl_ServicePaid.text=Txt_ServicePayAmount.text
								lbl_ServicePayMode.text='Cheque'
							}
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							//		PageLoad();
							//		FnSettleClr();
							TariffPayClr();
							ServicePayClr();
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
							F4="";
							F5="";
							F6="";
							F7="";
							F8="";
						}
						if(F7=="CompanyInvoice")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							
							BTCSId=Ds_Objects.result.Tables.Table.Rows[0].Id;
							
							if(FilePath.text!="")
							{
								init();	
								uploadFiles();
							}
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Company Invoice Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
								
								// just showing display paid amount
								lbl_ServicePaid.text=Txt_ServicePayAmount.text
								lbl_ServicePayMode.text='CompanyInvoice'
							}
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							
							//		PageLoad();
							//		FnSettleClr();
							TariffPayClr();
							ServicePayClr();
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
							F4="";
							F5="";
							F6="";
							F7="";
							F8="";
						}
						if(F8=="NEFT")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							//							
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Payment Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
								
								// just showing display paid amount
								lbl_ServicePaid.text=Txt_ServicePayAmount.text
								lbl_ServicePayMode.text='NEFT'
							}
								
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							//		PageLoad();
							//		FnSettleClr();
							TariffPayClr();
							ServicePayClr();
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
							F4="";
							F5="";
							F6="";
							F7="";
							F8="";
						}
					}
					if(Mode=="Consolidated")
					{
						if(F4=="Cash")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							//							
							
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Payment Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
								
								// just showing display paid amount
								lbl_ConPaid.text=Txt_ConsolidatePayment.text
								lbl_ConPaymode.text='Cash'
								
							}
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							//		PageLoad();
							//		FnSettleClr();
							TariffPayClr();
							ServicePayClr();
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
							F4="";
							F5="";
							F6="";
							F7="";
							F8="";
						}
						if(F5=="Card")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							
							//							
							
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Payment Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
								
								// just showing display paid amount
								lbl_ConPaid.text=Txt_ConsolidatePayment.text
								lbl_ConPaymode.text='Card'
							}
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							//		PageLoad();
							//		FnSettleClr();
							TariffPayClr();
							ServicePayClr();
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
							F4="";
							F5="";
							F6="";
							F7="";
							F8="";
						}
						if(F6=="Cheque")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							
							//							
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Payment Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
								
								// just showing display paid amount
								lbl_ConPaid.text=Txt_ConsolidatePayment.text
								lbl_ConPaymode.text='Cheque'
							}
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							
							TariffPayClr();
							ServicePayClr();
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
							F6="";
							F5="";
							F4="";
							F7="";
							F8="";
						}
						if(F7=="CompanyInvoice")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							
							BTCSId=Ds_Objects.result.Tables.Table.Rows[0].Id;
							
							if(FilePath.text!="")
							{
								init();	
								uploadFiles();
							}
							
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Company Invoice Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
								
								// just showing display paid amount
								lbl_ConPaid.text=Txt_ConsolidatePayment.text
								lbl_ConPaymode.text='CompanyInvoice'
							}
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							
							//	PageLoad();
							//	FnSettleClr();
							TariffPayClr();
							ServicePayClr();
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
							F5="";
							F6="";
							F4="";
							F8="";
							F7="";
						}
						if(F8=="NEFT")
						{
							useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
							
							//							
							if (ChkOutHdrId == 0)
							{
								alignAlert(Alert.show("Payment Added Successfully.","Message !",
									Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
								
								// just showing display paid amount
								lbl_ConPaid.text=Txt_ConsolidatePayment.text
								lbl_ConPaymode.text='NEFT'
							}
								
							else
							{
								alignAlert(Alert.show("Payment Updated Successfully.","Message !",Alert.OK,
									null, null,	iconTickLarge, Alert.OK),10,"");
							}
							//	PageLoad();
							//	FnSettleClr();
							TariffPayClr();
							ServicePayClr();
							ConsolidatePayClr();
							btn_Settle.enabled=true;
							bdr_TariffPay1.visible=false;
							bdr_SerPay1.visible=false;
							bdr_ConPay1.visible=false;
							F5="";
							F6="";
							F7="";
							F4="";
							F8="";
						}
					} 
				} 
				if (Ds_Objects.currentTarget.description.toString() == "Search_CUSTOM")
				{
					Txt_ChkoutNo.text=Ds_Objects.result.Tables.Table.Rows[0].CheckOutNo;
					hlp_GuestName.text=Ds_Objects.result.Tables.Table.Rows[0].GuestName;	
					Txt_Name.text=Ds_Objects.result.Tables.Table.Rows[0].Name;
					Txt_Stay.text=Ds_Objects.result.Tables.Table.Rows[0].Stay;
					Txt_Property.text=Ds_Objects.result.Tables.Table.Rows[0].Property;
					Txt_Billdate.text=Ds_Objects.result.Tables.Table.Rows[0].BillDate;
					Txt_type.text=Ds_Objects.result.Tables.Table.Rows[0].Type;
					Txt_bookinlevel.text=Ds_Objects.result.Tables.Table.Rows[0].BookingLevel;
					Txt_Client.text=Ds_Objects.result.Tables.Table.Rows[0].ClientName;
					Txt_TotalTariff.text=Ds_Objects.result.Tables.Table.Rows[0].TotalTariff;
					Txt_Luxury.text=NF_Two.format(Ds_Objects.result.Tables.Table.Rows[0].LuxuryTax);
					Txt_ServiceTax12.text=NF_Two.format(Ds_Objects.result.Tables.Table.Rows[0].SerivceTax);
					//Txt_ServiceTax7.text=NF_Two.format(Ds_Objects.result.Tables.Table.Rows[0].ServiceNet);
					//Txt_ServiceCharge2.text=NF_Two.format(Ds_Objects.result.Tables.Table.Rows[0].ServiceNet);
					Txt_NetAmount.text=NF_Two.format(Ds_Objects.result.Tables.Table.Rows[0].NetAmount);
					Txt_Totaldiscount.text=NF_Two.format(Ds_Objects.result.Tables.Table.Rows[0].TotalDiscount);
					Id=Ds_Objects.result.Tables.Table.Rows[0].Id;
				}
				if (Ds_Objects.currentTarget.description.toString() == "TariffLoad_CUSTOM")
				{
					btn_Service.enabled=true;
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						lbl_ServiceVAT.text=Ds_Objects.result.Tables.Table.Rows[0].VAT;
						lbl_ST.text=Ds_Objects.result.Tables.Table.Rows[0].RestaurantST;
						lbl_BST.text=Ds_Objects.result.Tables.Table.Rows[0].BusinessSupportST;
						//Lbl_ServiceOthers.text="Service Tax @ "+Ds_Objects.result.Tables.Table.Rows[0].BusinessSupportST;
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Grid_Service.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
						//	Grid_Service.editable=false;
						
						var TempProduct_AC:ArrayCollection=new ArrayCollection();
						var TempCreate_AC:ArrayCollection=new ArrayCollection();
						TempProduct_AC=Grid_Service.dataProvider as ArrayCollection
						//						if(TempProduct_AC.length==0)
						//						{
						//							var TempCreate_AC:ArrayCollection=new ArrayCollection
						//								([{
						//									Id:0,PropertyId:0,GuestId:0,Date:dt_ServiceDate.text,					
						//									ServiceItem:hlp_item.text,Amount:Txt_ItemAmount.text,
						//									ItemId:ItemId,TypeService:TypeService,Quantity:1							
						//								}]);
						//							TempProduct_AC.addItem(TempCreate_AC[0]);						
						//						}
						//						else
						//						{
						////							var AlreadyIdFlag:Boolean=true;
						////							for(var i:int=0;i<TempProduct_AC.length;i++)
						////							{
						////								if((TempProduct_AC[i].ItemId==ItemId)&&(TempProduct_AC[i].Date==dt_ServiceDate.text))
						////								{
						////									TempProduct_AC[i].Amount=Number(Txt_ItemAmount.text)+Number(TempProduct_AC[i].Amount);
						////									TempProduct_AC[i].Quantity=Number(TempProduct_AC[i].Quantity)+1
						////									AlreadyIdFlag=false;
						////									i=TempProduct_AC.length
						////								}
						////							}
						////							if(AlreadyIdFlag==true)
						////							{
						//								var TempCreate_AC:ArrayCollection=new ArrayCollection
						//									([{
						//										Id:0,PropertyId:0,GuestId:0,Date:dt_ServiceDate.text,					
						//										ServiceItem:hlp_item.text,Amount:Txt_ItemAmount.text,
						//										ItemId:ItemId,TypeService:TypeService,Quantity:1
						//									}]);
						//								TempProduct_AC.addItemAt(TempCreate_AC[0],TempProduct_AC.length)
						////							}						
						//						}
						Grid_Service.dataProvider=TempProduct_AC;
						var Ac_Tmp:ArrayCollection=new ArrayCollection();
						Ac_Tmp=Grid_Service.dataProvider as ArrayCollection;
						if(Ac_Tmp == null)
						{
							var TA:String=NF_Two.format(Total);
							Txt_ServiceBillAmt.text=TA.replace(",","");
							var Net:Number=Number(Txt_ServiceBillAmt.text);
							var TT:String=NF_Two.format(Net*VAT/100);
							Txt_ServiceVat.text=TT.replace(",","");
							var TT:String=NF_Two.format(Net*ServiceTax/100);
							Txt_SerivceTax.text=TT.replace(",","");
							var Cee:Number=Number(Txt_SerivceTax.text);
							var CS:String=NF_Two.format(Cee*Cess/100);
							Txt_ServiceEcess.text=CS.replace(",","");
							var HCee:Number=Number(Txt_SerivceTax.text);
							var HCS:String=NF_Two.format(HCee*HECess/100);
							Txt_serviceHECess.text=HCS.replace(",","");
							var TT:String=NF_Two.format(Net*ServiceTax/100);
							var Tmp:Number=Number(Txt_ServiceBillAmt.text)+Number(Txt_ServiceVat.text)+Number(Txt_SerivceTax.text)+
								Number(Txt_ServiceEcess.text)+Number(Txt_serviceHECess.text);	
							Txt_ServiceNetAmount.text=NF_Two.format(Math.round(Tmp));
						}
						else
						{
							
							TypeService="Food And Beverages";
							
							var Food_ServiceBillAmt:String="";
							var Food_ServiceVat:String="";
							var Food_SerivceTax:String="";
							var Food_ServiceEcess:String="";
							var Food_serviceHECess:String="";
							var Food_ServiceNetAmount:String="";
							
							var Laundry_ServiceBillAmt:String="";
							var Laundry_ServiceVat:String="";
							var Laundry_SerivceTax:String="";
							var Laundry_ServiceEcess:String="";
							var Laundry_serviceHECess:String="";
							var Laundry_ServiceNetAmount:String="";
							var Laundry_BST:String="";
							
							
							
							if(TypeService == "Food And Beverages")
							{
								var Len:Number=0,TotAmt:Number=0;var VT1Number=0,ST:Number=0;
								var VAT:Number=Number(lbl_ServiceVAT.text);
								var ServiceTax:Number=Number(lbl_ST.text);
								var BusinessST:Number=Number(lbl_BST.text);
								var Cess:Number=2;
								var HECess:Number=1;						
								
								var Total:int=0;
								
								for(var i:int=0;i<Ac_Tmp.length;i++)
								{
									if(Ac_Tmp[i].TypeService=="Food And Beverages")
									{								
										Total+=Number(Ac_Tmp[i].Amount);
										TypeService = Ac_Tmp[i].TypeService
									}								
								}							
								var FoodServiceBillAmt:String=NF_Two.format(Total);
								
								Food_ServiceBillAmt=FoodServiceBillAmt.replace(",","");
								
								var FoodNet:Number=Number(FoodServiceBillAmt.replace(",",""));
								
								var FoodServiceVat:String=NF_Two.format(FoodNet*VAT/100);
								
								Food_ServiceVat=FoodServiceVat.replace(",","");
								
								var FoodSerivceTax:String=NF_Two.format(Total*ServiceTax/100);
								
								Food_SerivceTax=FoodSerivceTax.replace(",","");
								
								var ServiceTax:Number=Number(FoodSerivceTax.replace(",",""));
								
								var FoodServiceEcess:String=NF_Two.format(ServiceTax*Cess/100);
								
								Food_ServiceEcess=FoodServiceEcess.replace(",","");						
								
								var FoodHCS:String=NF_Two.format(ServiceTax*HECess/100);							
								
								Food_serviceHECess=FoodHCS.replace(",","");
								
								var Tmp:Number=Number(Food_ServiceBillAmt)+Number(Food_ServiceVat)+
									Number(Food_SerivceTax)+Number(Food_ServiceEcess)+Number(Food_serviceHECess);	
								
								Food_ServiceNetAmount=NF_Two.format(Math.round(Tmp));	
								
							}
							TypeService="Laundry";
							if(TypeService == "Laundry")
							{
								var Len:Number=0,TotAmt:Number=0;var VT1Number=0,ST:Number=0;
								var VAT:Number=Number(lbl_ServiceVAT.text);
								var ServiceTax:Number=Number(lbl_ST.text);
								var BusinessST:Number=Number(lbl_BST.text);
								var Cess:Number=2;
								var HECess:Number=1;
								
								var Total:int=0;
								
								for(var i:int=0;i<Ac_Tmp.length;i++)
								{
									if((Ac_Tmp[i].TypeService=="Laundry")||(Ac_Tmp[i].TypeService=="Services"))
									{									
										Total+=Number(Ac_Tmp[i].Amount);
										TypeService = Ac_Tmp[i].TypeService
									}								
								}
								
								var TA:String=NF_Two.format(Total);
								
								Laundry_ServiceBillAmt =TA.replace(",","");
								
								var Net:Number=Number(Laundry_ServiceBillAmt);
								
								var TT:String=NF_Two.format(Net*VAT/100);
								
								Laundry_ServiceVat=TT.replace(",","");
								
								//								var TT1:String=NF_Two.format(Net*ServiceTax/100);
								//								
								//								Laundry_SerivceTax=TT1.replace(",","");
								
								var TT2:String=NF_Two.format(Total*BusinessST/100);
								
								Laundry_BST=TT2.replace(",","");
								
								var Tax:Number=Number(Laundry_SerivceTax)+Number(Laundry_BST);							
								
								var CS:String=NF_Two.format(Tax*Cess/100);
								
								Laundry_ServiceEcess=CS.replace(",","");							
								
								var HCS:String=NF_Two.format(Tax*HECess/100);
								
								Laundry_serviceHECess=HCS.replace(",","");
								
								var Tmp:Number=Number(Laundry_ServiceBillAmt)+Number(Laundry_ServiceVat)+Number(Laundry_SerivceTax)+
									Number(Laundry_ServiceEcess)+Number(Laundry_serviceHECess)+Number(Laundry_BST);
								
								Laundry_ServiceNetAmount=NF_Two.format(Math.round(Tmp));	
								
							}
							
							var Final_ServiceBillAmt:Number=Number(Food_ServiceBillAmt.replace(",",""))+Number(Laundry_ServiceBillAmt.replace(",",""));
							var Final_ServiceVat:Number=Number(Food_ServiceVat.replace(",",""))+Number(Laundry_ServiceVat.replace(",",""));
							var Final_SerivceTax:Number=Number(Food_SerivceTax.replace(",",""))
							var Final_ServiceEcess:Number=Number(Food_ServiceEcess.replace(",",""))+Number(Laundry_ServiceEcess.replace(",",""));
							var Final_serviceHECess:Number=Number(Food_serviceHECess.replace(",",""))+Number(Laundry_serviceHECess.replace(",",""));
							var Final_BST:Number=Number(Laundry_BST);
							var Final_ServiceNetAmount:Number=Number(Food_ServiceNetAmount.replace(",",""))+Number(Laundry_ServiceNetAmount.replace(",",""));
							
							
							Txt_ServiceBillAmt.text=NF_Two.format(Final_ServiceBillAmt);
							Txt_ServiceVat.text=NF_Two.format(Final_ServiceVat);
							Txt_SerivceTax.text=NF_Two.format(Final_SerivceTax);
							Txt_ServiceEcess.text=NF_Two.format(Final_ServiceEcess);
							Txt_serviceHECess.text=NF_Two.format(Final_serviceHECess);
							Txt_BST.text=Laundry_BST;
							Txt_ServiceNetAmount.text=NF_Two.format(Final_ServiceNetAmount);
							//						var Len:Number=0,TotAmt:Number=0;var VT1Number=0,ST:Number=0;
							//						var VAT:Number=Number(lbl_ServiceVAT.text);
							//						var ServiceTax:Number=Number(lbl_ST.text);
							//						var Cess:Number=2;
							//						var HECess:Number=1;						
							//						var Ac_Tmp:ArrayCollection=new ArrayCollection();
							//						Ac_Tmp=Grid_Service.dataProvider as ArrayCollection;
							//						var Total:int=0;
							//						
							//						if(Ac_Tmp == null)
							//						{
							//							var TA:String=NF_Two.format(Total);
							//							Txt_ServiceBillAmt.text=TA.replace(",","");
							//							var Net:Number=Number(Txt_ServiceBillAmt.text);
							//							var TT:String=NF_Two.format(Net*VAT/100);
							//							Txt_ServiceVat.text=TT.replace(",","");
							//							var TT:String=NF_Two.format(Net*ServiceTax/100);
							//							Txt_SerivceTax.text=TT.replace(",","");
							//							var Cee:Number=Number(Txt_SerivceTax.text);
							//							var CS:String=NF_Two.format(Cee*Cess/100);
							//							Txt_ServiceEcess.text=CS.replace(",","");
							//							var HCee:Number=Number(Txt_SerivceTax.text);
							//							var HCS:String=NF_Two.format(HCee*HECess/100);
							//							Txt_serviceHECess.text=HCS.replace(",","");
							//							var TT:String=NF_Two.format(Net*ServiceTax/100);
							//							var Tmp:Number=Number(Txt_ServiceBillAmt.text)+Number(Txt_ServiceVat.text)+Number(Txt_SerivceTax.text)+
							//								Number(Txt_ServiceEcess.text)+Number(Txt_serviceHECess.text);	
							//							Txt_ServiceNetAmount.text=NF_Two.format(Math.round(Tmp));
							//						}
							//						else
							//						{
							//							Len=Ac_Tmp.length;							
							//							for(var i:int=0;i<Ac_Tmp.length;i++)
							//							{								
							//								Total+=Number(Ac_Tmp[i].Amount);
							//																
							//							}							
							//								var TA:String=NF_Two.format(Total);
							//								Txt_ServiceBillAmt.text=TA.replace(",","");
							//								var Net:Number=Number(Txt_ServiceBillAmt.text);
							//								var TT:String=NF_Two.format(Net*VAT/100);
							//								Txt_ServiceVat.text=TT.replace(",","");
							//								var TT:String=NF_Two.format(Net*ServiceTax/100);
							//								Txt_SerivceTax.text=TT.replace(",","");
							//								var Cee:Number=Number(Txt_SerivceTax.text);
							//								var CS:String=NF_Two.format(Cee*Cess/100);
							//								Txt_ServiceEcess.text=CS.replace(",","");
							//								var HCee:Number=Number(Txt_SerivceTax.text);
							//								var HCS:String=NF_Two.format(HCee*HECess/100);
							//								Txt_serviceHECess.text=HCS.replace(",","");
							//								var Tmp:Number=Number(Txt_ServiceBillAmt.text)+Number(Txt_ServiceVat.text)+Number(Txt_SerivceTax.text)+
							//									Number(Txt_ServiceEcess.text)+Number(Txt_serviceHECess.text);	
							//								Txt_ServiceNetAmount.text=NF_Two.format(Math.round(Tmp));
							
							Grp_Service.visible=false;
							hlp_item.text="";
							Txt_ItemAmount.text="";
							dt_ServiceDate.text="";							
						}
					}
					if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
					{
						hlp_item.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
					}
					else
					{
						hlp_item.dataProvider=null;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "SettleLoad_CUSTOM")
				{
					Grid_Settle.dataProvider=null;Txt_Pname.text;
					//	Grid_Service.dataProvider=null;
					//	FnServiceClr();
					
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grid_Settle.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
					else
					{
						Grid_Settle.dataProvider=null;
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Txt_Pname.text=Ds_Objects.result.Tables.Table1.Rows[0].Name;
						Txt_SName.text=Ds_Objects.result.Tables.Table1.Rows[0].Name;
						Txt_CName.text=Ds_Objects.result.Tables.Table1.Rows[0].Name;
					}
					if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
					{
						Txt_TariffLoad.text=NF_Two.format(Math.round(Ds_Objects.result.Tables.Table2.Rows[0].ChkOutTariffNetAmount));
						Txt_Tariffadvance.text=Ds_Objects.result.Tables.Table2.Rows[0].ChkinAdvance;
					}
					if (Ds_Objects.result.Tables.Table3.Rows.length > 0)
					{
						Txt_ServiceAdvance.text=Ds_Objects.result.Tables.Table3.Rows[0].ChkinAdvance;
						Txt_ServiceLoad.text=Ds_Objects.result.Tables.Table3.Rows[0].ChkOutServiceNetAmount;
					}
					if (Ds_Objects.result.Tables.Table4.Rows.length > 0)
					{
						Txt_ConAdvance.text=Ds_Objects.result.Tables.Table4.Rows[0].ChkinAdvance;
						Txt_ConsolidateLoad.text=Ds_Objects.result.Tables.Table4.Rows[0].ConsolidateAmount;
					}
					OpenCheckoutBillButton();
				}
				
			}
			
			// Settlement page(To Check when bill amount and Paid amount is equal check out button is enable )
			public function OpenCheckoutBillButton():void
			{
				var Arr1:ArrayCollection=new ArrayCollection();
				var ServiceFlag:Boolean=true;
				var TariffFlag:Boolean=true;
				var ConsolidatedFlag:Boolean= true;
				var SettlementFlag:Boolean=true;
				Chk_Select.enabled=false;
				btn_SerPay.enabled=true;
				btn_TarPay.enabled=true;
				btn_ConPay.enabled=true;
				btn_Settle.enabled= false;
				
				if(Grid_Settle.dataProvider !=null)
				{ 
					Arr1=Grid_Settle.dataProvider as ArrayCollection;
					var i:int=0;
					for( i ;i<Arr1.length;i++)
					{ 						
						
						if(Arr1[i].BillType == "Tariff")
						{
							TariffFlag=false;
							if(Arr1[i].OutStanding == "0")
							{  
								
								btn_TarPay.enabled=false;
							}
							else
							{
								SettlementFlag=false;
								
							}
						}
						if(Arr1[i].BillType == "Service")
						{
							ServiceFlag=false;
							if(Arr1[i].OutStanding == "0")
							{  
								
								btn_SerPay.enabled=false;
								if(Arr1[i].Amount != "0")
								{
									btn_Service.enabled=false;
								}
								
								//btn_Settle.enabled= false;
							}
							else
							{
								SettlementFlag=false;
								
							}
						}
						if(Arr1[i].BillType == "Consolidate")
						{
							ConsolidatedFlag=false;
							if(Arr1[i].OutStanding == "0")
							{
								Chk_Select.enabled=false;
								btn_SerPay.enabled=false;
								btn_TarPay.enabled=false;
								btn_ConPay.enabled=false;
								btn_Service.enabled=false;
								//	btn_Settle.enabled=true;
								i=Arr1.length;
							}
							else
							{
								SettlementFlag=false;
								Chk_Select.enabled=true;
							}
							
						}
					} 						
				}
				i=0;
				for( i ;i<Arr1.length;i++)
				{
					if(Arr1[i].OutStanding != "0")
					{
						SettlementFlag=false;
					}
				}
				Grid_Settle.dataProvider=Arr1.source;
				
				if(SettlementFlag==true)
				{
					if(Intermediate.selected==true)
					{
						btn_Settle.enabled= false;
						btn_Service.enabled=false;
						useWeb("CheckoutAndIntermediate","PaidInt_CUSTOM",[GlobalXml,"TariffIntermediate","","","",CheckInHdrId,0,0,0,0]);
				//		FnSelect();
					}
					else
					{
						btn_Settle.enabled= true;
						btn_Service.enabled=false;
					}
				}
				if(TariffFlag==true)
				{
					btn_TarPay.enabled=false;
				}					
				if(ServiceFlag==true)
				{
					btn_SerPay.enabled=false;
				}					
				if(ConsolidatedFlag==true)
				{
					Chk_Select.enabled=false;
				}
				if((btn_TarPay.enabled==false)&&(btn_SerPay.enabled==false)&&(btn_ConPay.enabled==false))
				{
					if(Intermediate.selected==true)
					{
						btn_Settle.enabled= false;
						btn_Service.enabled=false;
						useWeb("CheckoutAndIntermediate","PaidInt_CUSTOM",[GlobalXml,"TariffIntermediate","","","",CheckInHdrId,0,0,0,0]);
					//	FnSelect();
					}
					else
					{
						btn_Settle.enabled= true;
						btn_Service.enabled=false;
					}
					
				}
				
				
				
				//					if((TariffFlag==false)&&(ServiceFlag==false))
				//					{
				//						Chk_Select.enabled=false;
				//						btn_TarPay.enabled=false;
				//						btn_Settle.enabled= true;
				//						
				//						
				//					}
				//					if((TariffFlag==false)&&(ServiceFlag==true))
				//					{
				//						//Chk_Select.enabled=false;
				//						Chk_Select.enabled=false;
				//						btn_TarPay.enabled=false;
				//						btn_SerPay.enabled=true;
				//						btn_Settle.enabled= false;
				//					}
				//					if((TariffFlag==true)&&(ServiceFlag==false))
				//					{
				//						Chk_Select.enabled=false;
				//						btn_TarPay.enabled=true;
				//						btn_Settle.enabled= false;
				//					}
				//					
				//					if(ConsolidatedFlag==false)
				//					{
				//						btn_TarPay.enabled= false;
				//						btn_SerPay.enabled= false;
				//						Chk_Select.enabled=false;
				//						bdr_Consolidate.enabled=false;
				//						btn_ConPay.enabled=false;
				//						btn_Settle.enabled= true;
				//					}
				//					if(TariffFlag==false)
				//					{
				//						btn_TarPay.enabled= true;
				//						//	 btn_SerPay.enabled= true;
				//						Chk_Select.enabled=false;
				//						btn_Settle.enabled= true;
				//					}
				//					//					
				//					if(ServiceFlag==false)
				//					{
				//						//	btn_TarPay.enabled= true;
				//						//	btn_SerPay.enabled= true;
				//						Chk_Select.enabled=false;
				//						btn_Settle.enabled= true;
				//					} 
				//					if((TariffFlag==true)&&(ServiceFlag==true)&&(ConsolidatedFlag==true))
				//					{
				//						btn_TarPay.enabled= true;
				//						btn_SerPay.enabled= true;
				//						Chk_Select.enabled=true;
				//						btn_ConPay.enabled=true;
				//						bdr_Consolidate.enabled=true;
				//						btn_Settle.enabled= false;
				//					}
				
			}
			// Service Item add to grid Calculation
			private function AddToGrid():void
			{
				
				var ErrStr:String="";var Flag:Boolean=true;
				if(dt_ServiceDate.text=="")
				{
					if(Flag==true)
					{
						dt_ServiceDate.setFocus();Flag=false;
					}
					ErrStr=ErrStr+"*  Date is Required.\n";					
				}
				if(ErrStr!="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
					return;					
				}
				var TempProduct_AC:ArrayCollection=new ArrayCollection();
				var TempCreate_AC:ArrayCollection=new ArrayCollection();
				TempProduct_AC=Grid_Service.dataProvider as ArrayCollection
				if(TempProduct_AC.length==0)
				{
					var TempCreate_AC:ArrayCollection=new ArrayCollection
						([{
							Id:0,PropertyId:0,GuestId:0,Date:dt_ServiceDate.text,					
							ServiceItem:hlp_item.text,Amount:Txt_ItemAmount.text,
							ItemId:ItemId,TypeService:TypeService,Quantity:1							
						}]);
					TempProduct_AC.addItem(TempCreate_AC[0]);						
				}
				else
				{
					var AlreadyIdFlag:Boolean=true;
					for(var i:int=0;i<TempProduct_AC.length;i++)
					{
						if((TempProduct_AC[i].ItemId==ItemId)&&(TempProduct_AC[i].Date==dt_ServiceDate.text))
						{
							TempProduct_AC[i].Amount=Number(Txt_ItemAmount.text)+Number(TempProduct_AC[i].Amount);
							TempProduct_AC[i].Quantity=Number(TempProduct_AC[i].Quantity)+1
							AlreadyIdFlag=false;
							i=TempProduct_AC.length
						}
					}
					if(AlreadyIdFlag==true)
					{
						var TempCreate_AC:ArrayCollection=new ArrayCollection
							([{
								Id:0,PropertyId:0,GuestId:0,Date:dt_ServiceDate.text,					
								ServiceItem:hlp_item.text,Amount:Txt_ItemAmount.text,
								ItemId:ItemId,TypeService:TypeService,Quantity:1
							}]);
						TempProduct_AC.addItemAt(TempCreate_AC[0],TempProduct_AC.length)
					}						
				}
				Grid_Service.dataProvider=TempProduct_AC;
				var Ac_Tmp:ArrayCollection=new ArrayCollection();
				Ac_Tmp=Grid_Service.dataProvider as ArrayCollection;
				if(Ac_Tmp == null)
				{
					var TA:String=NF_Two.format(Total);
					Txt_ServiceBillAmt.text=TA.replace(",","");
					var Net:Number=Number(Txt_ServiceBillAmt.text);
					var TT:String=NF_Two.format(Net*VAT/100);
					Txt_ServiceVat.text=TT.replace(",","");
					var TT:String=NF_Two.format(Net*ServiceTax/100);
					Txt_SerivceTax.text=TT.replace(",","");
					var Cee:Number=Number(Txt_SerivceTax.text);
					var CS:String=NF_Two.format(Cee*Cess/100);
					Txt_ServiceEcess.text=CS.replace(",","");
					var HCee:Number=Number(Txt_SerivceTax.text);
					var HCS:String=NF_Two.format(HCee*HECess/100);
					Txt_serviceHECess.text=HCS.replace(",","");
					var TT:String=NF_Two.format(Net*ServiceTax/100);
					var Tmp:Number=Number(Txt_ServiceBillAmt.text)+Number(Txt_ServiceVat.text)+Number(Txt_SerivceTax.text)+
						Number(Txt_ServiceEcess.text)+Number(Txt_serviceHECess.text);	
					Txt_ServiceNetAmount.text=NF_Two.format(Math.round(Tmp));
				}
				else
				{
					
					TypeService="Food And Beverages";
					
					var Food_ServiceBillAmt:String="";
					var Food_ServiceVat:String="";
					var Food_SerivceTax:String="";
					var Food_ServiceEcess:String="";
					var Food_serviceHECess:String="";
					var Food_ServiceNetAmount:String="";
					
					var Laundry_ServiceBillAmt:String="";
					var Laundry_ServiceVat:String="";
					var Laundry_SerivceTax:String="";
					var Laundry_ServiceEcess:String="";
					var Laundry_serviceHECess:String="";
					var Laundry_ServiceNetAmount:String="";
					var Laundry_BST:String="";
					
					
					
					if(TypeService == "Food And Beverages")
					{
						var Len:Number=0,TotAmt:Number=0;var VT1Number=0,ST:Number=0;
						var VAT:Number=Number(lbl_ServiceVAT.text);
						var ServiceTax:Number=Number(lbl_ST.text);
						var BusinessST:Number=Number(lbl_BST.text);
						var Cess:Number=2;
						var HECess:Number=1;						
						
						var Total:int=0;
						
						for(var i:int=0;i<Ac_Tmp.length;i++)
						{
							if(Ac_Tmp[i].TypeService=="Food And Beverages")
							{								
								Total+=Number(Ac_Tmp[i].Amount);
								TypeService = Ac_Tmp[i].TypeService
							}								
						}							
						var FoodServiceBillAmt:String=NF_Two.format(Total);
						
						Food_ServiceBillAmt=FoodServiceBillAmt.replace(",","");
						
						var FoodNet:Number=Number(FoodServiceBillAmt.replace(",",""));
						
						var FoodServiceVat:String=NF_Two.format(FoodNet*VAT/100);
						
						Food_ServiceVat=FoodServiceVat.replace(",","");
						
						var FoodSerivceTax:String=NF_Two.format(Total*ServiceTax/100);
						
						Food_SerivceTax=FoodSerivceTax.replace(",","");
						
						var ServiceTax:Number=Number(FoodSerivceTax.replace(",",""));
						
						var FoodServiceEcess:String=NF_Two.format(ServiceTax*Cess/100);
						
						Food_ServiceEcess=FoodServiceEcess.replace(",","");						
						
						var FoodHCS:String=NF_Two.format(ServiceTax*HECess/100);							
						
						Food_serviceHECess=FoodHCS.replace(",","");
						
						var Tmp:Number=Number(Food_ServiceBillAmt)+Number(Food_ServiceVat)+
							Number(Food_SerivceTax)+Number(Food_ServiceEcess)+Number(Food_serviceHECess);	
						
						Food_ServiceNetAmount=NF_Two.format(Math.round(Tmp));	
						
					}
					TypeService="Laundry";
					if(TypeService == "Laundry")
					{
						var Len:Number=0,TotAmt:Number=0;var VT1Number=0,ST:Number=0;
						var VAT:Number=Number(lbl_ServiceVAT.text);
						var ServiceTax:Number=Number(lbl_ST.text);
						var BusinessST:Number=Number(lbl_BST.text);
						var Cess:Number=2;
						var HECess:Number=1;
						
						var Total:int=0;
						
						for(var i:int=0;i<Ac_Tmp.length;i++)
						{
							if((Ac_Tmp[i].TypeService=="Laundry")||(Ac_Tmp[i].TypeService=="Services"))
							{									
								Total+=Number(Ac_Tmp[i].Amount);
								TypeService = Ac_Tmp[i].TypeService
							}								
						}
						
						var TA:String=NF_Two.format(Total);
						
						Laundry_ServiceBillAmt =TA.replace(",","");
						
						var Net:Number=Number(Laundry_ServiceBillAmt);
						
						var TT:String=NF_Two.format(Net*VAT/100);
						
						Laundry_ServiceVat=TT.replace(",","");
						
						var TT1:String=NF_Two.format(Net*ServiceTax/100);
						
						Laundry_SerivceTax=TT1.replace(",","");
						
						var TT2:String=NF_Two.format(Total*BusinessST/100);
						
						Laundry_BST=TT2.replace(",","");
						
						var Tax:Number=Number(0)+Number(Laundry_BST);							
						
						var CS:String=NF_Two.format(Tax*Cess/100);
						
						Laundry_ServiceEcess=CS.replace(",","");							
						
						var HCS:String=NF_Two.format(Tax*HECess/100);
						
						Laundry_serviceHECess=HCS.replace(",","");
						
						var Tmp:Number=Number(Laundry_ServiceBillAmt)+Number(Laundry_ServiceVat)+Number(0)+
							Number(Laundry_ServiceEcess)+Number(Laundry_serviceHECess)+Number(Laundry_BST);
						
						Laundry_ServiceNetAmount=NF_Two.format(Math.round(Tmp));	
						
					}
					
					var Final_ServiceBillAmt:Number=Number(Food_ServiceBillAmt.replace(",",""))+Number(Laundry_ServiceBillAmt.replace(",",""));
					var Final_ServiceVat:Number=Number(Food_ServiceVat.replace(",",""))+Number(Laundry_ServiceVat.replace(",",""));
					var Final_SerivceTax:Number=Number(Food_SerivceTax.replace(",",""))
					var Final_ServiceEcess:Number=Number(Food_ServiceEcess.replace(",",""))+Number(Laundry_ServiceEcess.replace(",",""));
					var Final_serviceHECess:Number=Number(Food_serviceHECess.replace(",",""))+Number(Laundry_serviceHECess.replace(",",""));
					var Final_BST:Number=Number(Laundry_BST);
					var Final_ServiceNetAmount:Number=Number(Food_ServiceNetAmount.replace(",",""))+Number(Laundry_ServiceNetAmount.replace(",",""));
					
					
					Txt_ServiceBillAmt.text=NF_Two.format(Final_ServiceBillAmt);
					Txt_ServiceVat.text=NF_Two.format(Final_ServiceVat);
					Txt_SerivceTax.text=NF_Two.format(Final_SerivceTax);
					Txt_ServiceEcess.text=NF_Two.format(Final_ServiceEcess);
					Txt_serviceHECess.text=NF_Two.format(Final_serviceHECess);
					Txt_BST.text=Laundry_BST;
					Txt_ServiceNetAmount.text=NF_Two.format(Final_ServiceNetAmount);
					
					Grp_Service.visible=false;
					hlp_item.text="";
					Txt_ItemAmount.text="";
					dt_ServiceDate.text="";
				}					
				
				
			}
			public function FnOk(event:CloseEvent):void
			{
				if(event.detail==Alert.OK)
				{
					//					hlp_GuestName._setFocus();
					hlp_property.setFocus();
				}
			}
			
			//Tariff Save 
			public 	var F1:String="";
			
			protected function FnSave():void
			{
				if(Checkout.selected == true)
				{
					F1="First";
					var ErrStr:String="";var Flag:Boolean=true;
					if(hlp_property.text=="")
					{
						if(Flag==true)
						{
							hlp_property.setFocus();Flag=false;
						}
						ErrStr=ErrStr+"* Property Name is Required.\n";					
					}
					if(hlp_GuestName.text=="")
					{
						if(Flag==true)
						{
							hlp_GuestName.setFocus();Flag=false;
						}
						ErrStr=ErrStr+"*  Guest Name is Required.\n";					
					}
					
					if(ErrStr!="")
					{
						alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
						return;					
					}
					
					if( Mode1=="Direct1")
					{
						Direct.selected=true;
						
						
					}
					else if(Mode1=="Bill to Company (BTC)")
					{
						BTC.selected=true;
						CompanyInvoice.enabled=true;
						Cash.enabled=false;
						CreditCard.enabled=false;
						Cheque.enabled=false;
						NEFT.enabled=false;
						
					}
					else if(Mode1="Bill to Client")
					{
						BTC.selected=true;
						CompanyInvoice.enabled=true;
						Cash.enabled=false;
						CreditCard.enabled=false;
						Cheque.enabled=false;
						NEFT.enabled=false;
					}
					
					if(Id == 0)
					{ 
						//		useWeb("GuestCheckOut","Save_CUSTOM",[GlobalXml,HdrXml]);
						alignAlert(Alert.show("Do you want Generate Tariff Invoice ?", "Warning",Alert.YES | Alert.NO, null,
							FnUpdate, iconWarning, Alert.NO),10,"");
						btn_Service.enabled=true;
						Btn_Settlement.enabled=true;
					}
				}
				else if(Intermediate.selected == true)
				{
					if(Chk_PIInvoice.selected == true)
					{
						F1="First";
						var ErrStr:String="";var Flag:Boolean=true;
						if(hlp_property.text=="")
						{
							if(Flag==true)
							{
								hlp_property.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"* Property Name is Required.\n";					
						}
						if(hlp_GuestName.text=="")
						{
							if(Flag==true)
							{
								hlp_GuestName.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Guest Name is Required.\n";					
						}
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						if( Mode1=="Direct1")
						{
							Direct.selected=true;
							
							
						}
						else if(Mode1=="Bill to Company (BTC)")
						{
							BTC.selected=true;
							CompanyInvoice.enabled=true;
							Cash.enabled=false;
							CreditCard.enabled=false;
							Cheque.enabled=false;
							NEFT.enabled=false;
							
						}
						else if(Mode1="Bill to Client")
						{
							BTC.selected=true;
							CompanyInvoice.enabled=true;
							Cash.enabled=false;
							CreditCard.enabled=false;
							Cheque.enabled=false;
							NEFT.enabled=false;
						}
						
						if(Id == 0)
						{ 
							//		useWeb("GuestCheckOut","Save_CUSTOM",[GlobalXml,HdrXml]);
							alignAlert(Alert.show("Do you want Generate Tariff Proforma Invoice ?", "Warning",Alert.YES | Alert.NO, null,
								FnUpdate, iconWarning, Alert.NO),10,"");
							btn_Service.enabled=true;
							Btn_Settlement.enabled=true;
						}
					}
					else
					{
						F1="First";
						var ErrStr:String="";var Flag:Boolean=true;
						if(hlp_property.text=="")
						{
							if(Flag==true)
							{
								hlp_property.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"* Property Name is Required.\n";					
						}
						if(hlp_GuestName.text=="")
						{
							if(Flag==true)
							{
								hlp_GuestName.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Guest Name is Required.\n";					
						}
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						if( Mode1=="Direct1")
						{
							Direct.selected=true;
							
							
						}
						else if(Mode1=="Bill to Company (BTC)")
						{
							BTC.selected=true;
							CompanyInvoice.enabled=true;
							Cash.enabled=false;
							CreditCard.enabled=false;
							Cheque.enabled=false;
							NEFT.enabled=false;
							
						}
						else if(Mode1="Bill to Client")
						{
							BTC.selected=true;
							CompanyInvoice.enabled=true;
							Cash.enabled=false;
							CreditCard.enabled=false;
							Cheque.enabled=false;
							NEFT.enabled=false;
						}
						
						if(Id == 0)
						{ 
							//		useWeb("GuestCheckOut","Save_CUSTOM",[GlobalXml,HdrXml]);
							alignAlert(Alert.show("Do you want Generate Tariff Invoice ?", "Warning",Alert.YES | Alert.NO, null,
								FnUpdate, iconWarning, Alert.NO),10,"");
							btn_Service.enabled=true;
							Btn_Settlement.enabled=true;
						}
					}
					
				}
				
				
				
				
			}
			
			public function FnUpdate(event:CloseEvent):void
			{
				if(Checkout.selected == true)
				{
					if( Mode1=="Direct1")
					{
						if ((event.detail==Alert.YES)) 
						{
							var Ac_Hdr:ArrayCollection=new ArrayCollection
								([{
									CheckOutNo:Txt_ChkoutNo.text,GuestName:hlp_GuestName.text,Stay:Txt_Stay.text,
									Type:Txt_type.text,BookingLevel:Txt_bookinlevel.text,BillDate:DT_CheckOutDate.text,
									ClientName:Txt_Client.text,Property:Txt_Property.text,TotalTariff:Txt_TotalTariff.text,
									NetAmount:Txt_NetAmount.text,AdditionalCharge:Txt_AdditionalCharge.text,Discountperday:Txt_Discount.text,
									TotalDiscount:Txt_Totaldiscount.text,LuxuryTax:Txt_Luxury.text,
									SerivceTax:Txt_ServiceTax12.text,SerivceNet:Txt_ServiceTax7.text,
									ServiceCharge:Txt_ServiceCharge2.text,ServiceTaxService:Txt_Servicecharge12.text,
									Cess:Txt_Cess.text,HECess:Txt_HECess.text,
									NetAmount:Txt_NetAmount.text,Referance:Txt_referance.text,
									ExtraDays:txt_itemdays.text,ExtraAmount:lbl_ExtraMatress.text,
									ExtraType:ddl_Items.selectedItem,
									Id:Id,ChkInHdrId:CheckInHdrId,Name:Txt_Name.text,NoOfDays:lbl_tariff.text,
									CheckInType:Txt_CheckInType.text,ApartmentNo:Txt_Apartment.text,
									BedNo:Txt_Bed.text,ApartmentId:ApartmentId,BedId:BedId,RoomId:RoomId,BookingId:BookingId,
									PropertyId:PropertyId,GuestId:GuestId,StateId:StateId,
									Direct:Direct1,BTC:"",PropertyType:Txt_PropertyType.text,
									STAgreedAmount:0.00,LTAgreedAmount:0.00,STRackAmount:0.00,LTRackAmount:0.00,
									Status:"UnSettled",CheckOutDate:DT_CheckOutDate.text,CheckInDate:Txt_CheckInDate.text,
									InVoiceNo:Txt_ChkoutInvoice.text,LT:lbl_tarffLT.text,ST:lbl_TariffST.text,
									VAT:lbl_ServiceVAT.text,RestaurantST:lbl_ST.text,BusinessSupportST:lbl_BST.text,
									ClientId:ClientId,CityId:CityId,ServiceChargeChk:ServiceChargeChk,
									BillFromDate:DT_BillFromDate.text,BillEndDate:DT_BillTo.text,Intermediate:"",
									Preformainvoice:Chk_PIInvoice.selected
									//Flag:Flag1
								}]);
							var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
							useWeb("CheckoutAndIntermediate","Save_CUSTOM",[GlobalXml,HdrXml]);
						}
					}
					else if(Mode1=="Bill to Company (BTC)")
					{
						
						if ((event.detail==Alert.YES)) 
						{
							var Ac_Hdr:ArrayCollection=new ArrayCollection
								([{
									CheckOutNo:Txt_ChkoutNo.text,GuestName:hlp_GuestName.text,Stay:Txt_Stay.text,
									Type:Txt_type.text,BookingLevel:Txt_bookinlevel.text,BillDate:DT_CheckOutDate.text,
									ClientName:Txt_Client.text,Property:Txt_Property.text,TotalTariff:Txt_TotalTariff.text,
									NetAmount:Txt_NetAmount.text,AdditionalCharge:Txt_AdditionalCharge.text,Discountperday:Txt_Discount.text,
									TotalDiscount:Txt_Totaldiscount.text,LuxuryTax:Txt_Luxury.text,
									SerivceTax:Txt_ServiceTax12.text,SerivceNet:Txt_ServiceTax7.text,
									ServiceCharge:Txt_ServiceCharge2.text,ServiceTaxService:Txt_Servicecharge12.text,
									Cess:Txt_Cess.text,HECess:Txt_HECess.text,
									NetAmount:Txt_NetAmount.text,Referance:Txt_referance.text,
									ExtraDays:txt_itemdays.text,ExtraAmount:lbl_ExtraMatress.text,
									ExtraType:ddl_Items.selectedItem,
									Id:Id,ChkInHdrId:CheckInHdrId,Name:Txt_Name.text,NoOfDays:lbl_tariff.text,
									CheckInType:Txt_CheckInType.text,ApartmentNo:Txt_Apartment.text,
									BedNo:Txt_Bed.text,ApartmentId:ApartmentId,BedId:BedId,RoomId:RoomId,BookingId:BookingId,
									PropertyId:PropertyId,GuestId:GuestId,StateId:StateId,
									Direct:"",BTC:BTC1,PropertyType:Txt_PropertyType.text,
									STAgreedAmount:0.00,LTAgreedAmount:0.00,STRackAmount:0.00,LTRackAmount:0.00,
									Status:"UnSettled",CheckOutDate:DT_CheckOutDate.text,CheckInDate:Txt_CheckInDate.text,
									InVoiceNo:Txt_ChkoutInvoice.text,LT:lbl_tarffLT.text,ST:lbl_TariffST.text,
									VAT:lbl_ServiceVAT.text,RestaurantST:lbl_ST.text,BusinessSupportST:lbl_BST.text,
									ClientId:ClientId,CityId:CityId,ServiceChargeChk:ServiceChargeChk,
									BillFromDate:DT_BillFromDate.text,BillEndDate:DT_BillTo.text,Intermediate:"",
									Preformainvoice:Chk_PIInvoice.selected
									//Flag:Flag1
								}]);
							var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
							useWeb("CheckoutAndIntermediate","Save_CUSTOM",[GlobalXml,HdrXml]);
						}
					}
						
					else if(Mode1="Bill to Client")
					{
						if ((event.detail==Alert.YES)) 
						{
							var Ac_Hdr:ArrayCollection=new ArrayCollection
								([{
									CheckOutNo:Txt_ChkoutNo.text,GuestName:hlp_GuestName.text,Stay:Txt_Stay.text,
									Type:Txt_type.text,BookingLevel:Txt_bookinlevel.text,BillDate:DT_CheckOutDate.text,
									ClientName:Txt_Client.text,Property:Txt_Property.text,TotalTariff:Txt_TotalTariff.text,
									NetAmount:Txt_NetAmount.text,AdditionalCharge:Txt_AdditionalCharge.text,Discountperday:Txt_Discount.text,
									TotalDiscount:Txt_Totaldiscount.text,LuxuryTax:Txt_Luxury.text,
									SerivceTax:Txt_ServiceTax12.text,SerivceNet:Txt_ServiceTax7.text,
									ServiceCharge:Txt_ServiceCharge2.text,ServiceTaxService:Txt_Servicecharge12.text,
									Cess:Txt_Cess.text,HECess:Txt_HECess.text,
									NetAmount:Txt_NetAmount.text,Referance:Txt_referance.text,
									ExtraDays:txt_itemdays.text,ExtraAmount:lbl_ExtraMatress.text,
									ExtraType:ddl_Items.selectedItem,
									Id:Id,ChkInHdrId:CheckInHdrId,Name:Txt_Name.text,NoOfDays:lbl_tariff.text,
									CheckInType:Txt_CheckInType.text,ApartmentNo:Txt_Apartment.text,
									BedNo:Txt_Bed.text,ApartmentId:ApartmentId,BedId:BedId,RoomId:RoomId,BookingId:BookingId,
									PropertyId:PropertyId,GuestId:GuestId,StateId:StateId,
									Direct:"",BTC:BTC1,PropertyType:Txt_PropertyType.text,
									STAgreedAmount:0.00,LTAgreedAmount:0.00,STRackAmount:0.00,LTRackAmount:0.00,
									Status:"UnSettled",CheckOutDate:DT_CheckOutDate.text,CheckInDate:Txt_CheckInDate.text,
									InVoiceNo:Txt_ChkoutInvoice.text,LT:lbl_tarffLT.text,ST:lbl_TariffST.text,
									VAT:lbl_ServiceVAT.text,RestaurantST:lbl_ST.text,BusinessSupportST:lbl_BST.text,
									ClientId:ClientId,CityId:CityId,ServiceChargeChk:ServiceChargeChk,
									BillFromDate:DT_BillFromDate.text,BillEndDate:DT_BillTo.text,Intermediate:"",
									Preformainvoice:Chk_PIInvoice.selected
									//Flag:Flag1
								}]);
							var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
							useWeb("CheckoutAndIntermediate","Save_CUSTOM",[GlobalXml,HdrXml]);
						}
					}
				}
				else if(Intermediate.selected == true)
				{
					if(Chk_PIInvoice.selected==true)
					{
						if( Mode1=="Direct1")
						{
							if ((event.detail==Alert.YES)) 
							{
								var Ac_Hdr:ArrayCollection=new ArrayCollection
									([{
										CheckOutNo:Txt_ChkoutNo.text,GuestName:hlp_GuestName.text,Stay:Txt_Stay.text,
										Type:Txt_type.text,BookingLevel:Txt_bookinlevel.text,BillDate:DT_CheckOutDate.text,
										ClientName:Txt_Client.text,Property:Txt_Property.text,TotalTariff:Txt_TotalTariff.text,
										NetAmount:Txt_NetAmount.text,AdditionalCharge:Txt_AdditionalCharge.text,Discountperday:Txt_Discount.text,
										TotalDiscount:Txt_Totaldiscount.text,LuxuryTax:Txt_Luxury.text,
										SerivceTax:Txt_ServiceTax12.text,SerivceNet:Txt_ServiceTax7.text,
										ServiceCharge:Txt_ServiceCharge2.text,ServiceTaxService:Txt_Servicecharge12.text,
										Cess:Txt_Cess.text,HECess:Txt_HECess.text,
										NetAmount:Txt_NetAmount.text,Referance:Txt_referance.text,
										ExtraDays:txt_itemdays.text,ExtraAmount:lbl_ExtraMatress.text,
										ExtraType:ddl_Items.selectedItem,
										Id:Id,ChkInHdrId:CheckInHdrId,Name:Txt_Name.text,NoOfDays:lbl_tariff.text,
										CheckInType:Txt_CheckInType.text,ApartmentNo:Txt_Apartment.text,
										BedNo:Txt_Bed.text,ApartmentId:ApartmentId,BedId:BedId,RoomId:RoomId,BookingId:BookingId,
										PropertyId:PropertyId,GuestId:GuestId,StateId:StateId,
										Direct:Direct1,BTC:"",PropertyType:Txt_PropertyType.text,
										STAgreedAmount:0.00,LTAgreedAmount:0.00,STRackAmount:0.00,LTRackAmount:0.00,
										Status:"UnSettled",CheckOutDate:DT_CheckOutDate.text,CheckInDate:Txt_CheckInDate.text,
										InVoiceNo:Txt_ChkoutInvoice.text,LT:lbl_tarffLT.text,ST:lbl_TariffST.text,
										VAT:lbl_ServiceVAT.text,RestaurantST:lbl_ST.text,BusinessSupportST:lbl_BST.text,
										ClientId:ClientId,CityId:CityId,ServiceChargeChk:ServiceChargeChk,
										BillFromDate:DT_BillFromDate.text,BillEndDate:DT_BillTo.text,Intermediate:"Intermediate",
										Preformainvoice:Chk_PIInvoice.selected
										//Flag:Flag1
									}]);
								var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
								useWeb("CheckoutAndIntermediate","Save_CUSTOM",[GlobalXml,HdrXml]);
							}
						}
						else if(Mode1=="Bill to Company (BTC)")
						{
							if ((event.detail==Alert.YES)) 
							{
								var Ac_Hdr:ArrayCollection=new ArrayCollection
									([{
										CheckOutNo:Txt_ChkoutNo.text,GuestName:hlp_GuestName.text,Stay:Txt_Stay.text,
										Type:Txt_type.text,BookingLevel:Txt_bookinlevel.text,BillDate:DT_CheckOutDate.text,
										ClientName:Txt_Client.text,Property:Txt_Property.text,TotalTariff:Txt_TotalTariff.text,
										NetAmount:Txt_NetAmount.text,AdditionalCharge:Txt_AdditionalCharge.text,Discountperday:Txt_Discount.text,
										TotalDiscount:Txt_Totaldiscount.text,LuxuryTax:Txt_Luxury.text,
										SerivceTax:Txt_ServiceTax12.text,SerivceNet:Txt_ServiceTax7.text,
										ServiceCharge:Txt_ServiceCharge2.text,ServiceTaxService:Txt_Servicecharge12.text,
										Cess:Txt_Cess.text,HECess:Txt_HECess.text,
										NetAmount:Txt_NetAmount.text,Referance:Txt_referance.text,
										ExtraDays:txt_itemdays.text,ExtraAmount:lbl_ExtraMatress.text,
										ExtraType:ddl_Items.selectedItem,
										Id:Id,ChkInHdrId:CheckInHdrId,Name:Txt_Name.text,NoOfDays:lbl_tariff.text,
										CheckInType:Txt_CheckInType.text,ApartmentNo:Txt_Apartment.text,
										BedNo:Txt_Bed.text,ApartmentId:ApartmentId,BedId:BedId,RoomId:RoomId,BookingId:BookingId,
										PropertyId:PropertyId,GuestId:GuestId,StateId:StateId,
										Direct:"",BTC:BTC1,PropertyType:Txt_PropertyType.text,
										STAgreedAmount:0.00,LTAgreedAmount:0.00,STRackAmount:0.00,LTRackAmount:0.00,
										Status:"UnSettled",CheckOutDate:DT_CheckOutDate.text,CheckInDate:Txt_CheckInDate.text,
										InVoiceNo:Txt_ChkoutInvoice.text,LT:lbl_tarffLT.text,ST:lbl_TariffST.text,
										VAT:lbl_ServiceVAT.text,RestaurantST:lbl_ST.text,BusinessSupportST:lbl_BST.text,
										ClientId:ClientId,CityId:CityId,ServiceChargeChk:ServiceChargeChk,
										BillFromDate:DT_BillFromDate.text,BillEndDate:DT_BillTo.text,Intermediate:"Intermediate",
										Preformainvoice:Chk_PIInvoice.selected
										//Flag:Flag1
									}]);
								var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
								useWeb("CheckoutAndIntermediate","Save_CUSTOM",[GlobalXml,HdrXml]);
							}
						}
							
						else if(Mode1="Bill to Client")
						{
							if ((event.detail==Alert.YES)) 
							{
								var Ac_Hdr:ArrayCollection=new ArrayCollection
									([{
										CheckOutNo:Txt_ChkoutNo.text,GuestName:hlp_GuestName.text,Stay:Txt_Stay.text,
										Type:Txt_type.text,BookingLevel:Txt_bookinlevel.text,BillDate:DT_CheckOutDate.text,
										ClientName:Txt_Client.text,Property:Txt_Property.text,TotalTariff:Txt_TotalTariff.text,
										NetAmount:Txt_NetAmount.text,AdditionalCharge:Txt_AdditionalCharge.text,Discountperday:Txt_Discount.text,
										TotalDiscount:Txt_Totaldiscount.text,LuxuryTax:Txt_Luxury.text,
										SerivceTax:Txt_ServiceTax12.text,SerivceNet:Txt_ServiceTax7.text,
										ServiceCharge:Txt_ServiceCharge2.text,ServiceTaxService:Txt_Servicecharge12.text,
										Cess:Txt_Cess.text,HECess:Txt_HECess.text,
										NetAmount:Txt_NetAmount.text,Referance:Txt_referance.text,
										ExtraDays:txt_itemdays.text,ExtraAmount:lbl_ExtraMatress.text,
										ExtraType:ddl_Items.selectedItem,
										Id:Id,ChkInHdrId:CheckInHdrId,Name:Txt_Name.text,NoOfDays:lbl_tariff.text,
										CheckInType:Txt_CheckInType.text,ApartmentNo:Txt_Apartment.text,
										BedNo:Txt_Bed.text,ApartmentId:ApartmentId,BedId:BedId,RoomId:RoomId,BookingId:BookingId,
										PropertyId:PropertyId,GuestId:GuestId,StateId:StateId,
										Direct:"",BTC:BTC1,PropertyType:Txt_PropertyType.text,
										STAgreedAmount:0.00,LTAgreedAmount:0.00,STRackAmount:0.00,LTRackAmount:0.00,
										Status:"UnSettled",CheckOutDate:DT_CheckOutDate.text,CheckInDate:Txt_CheckInDate.text,
										InVoiceNo:Txt_ChkoutInvoice.text,LT:lbl_tarffLT.text,ST:lbl_TariffST.text,
										VAT:lbl_ServiceVAT.text,RestaurantST:lbl_ST.text,BusinessSupportST:lbl_BST.text,
										ClientId:ClientId,CityId:CityId,ServiceChargeChk:ServiceChargeChk,
										BillFromDate:DT_BillFromDate.text,BillEndDate:DT_BillTo.text,Intermediate:"Intermediate",
										Preformainvoice:Chk_PIInvoice.selected
										//Flag:Flag1
									}]);
								var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
								useWeb("CheckoutAndIntermediate","Save_CUSTOM",[GlobalXml,HdrXml]);
							}
						}
					}
					else
					{
						
						if( Mode1=="Direct1")
						{
							if ((event.detail==Alert.YES)) 
							{
								var Ac_Hdr:ArrayCollection=new ArrayCollection
									([{
										CheckOutNo:Txt_ChkoutNo.text,GuestName:hlp_GuestName.text,Stay:Txt_Stay.text,
										Type:Txt_type.text,BookingLevel:Txt_bookinlevel.text,BillDate:DT_CheckOutDate.text,
										ClientName:Txt_Client.text,Property:Txt_Property.text,TotalTariff:Txt_TotalTariff.text,
										NetAmount:Txt_NetAmount.text,AdditionalCharge:Txt_AdditionalCharge.text,Discountperday:Txt_Discount.text,
										TotalDiscount:Txt_Totaldiscount.text,LuxuryTax:Txt_Luxury.text,
										SerivceTax:Txt_ServiceTax12.text,SerivceNet:Txt_ServiceTax7.text,
										ServiceCharge:Txt_ServiceCharge2.text,ServiceTaxService:Txt_Servicecharge12.text,
										Cess:Txt_Cess.text,HECess:Txt_HECess.text,
										NetAmount:Txt_NetAmount.text,Referance:Txt_referance.text,
										ExtraDays:txt_itemdays.text,ExtraAmount:lbl_ExtraMatress.text,
										ExtraType:ddl_Items.selectedItem,
										Id:Id,ChkInHdrId:CheckInHdrId,Name:Txt_Name.text,NoOfDays:lbl_tariff.text,
										CheckInType:Txt_CheckInType.text,ApartmentNo:Txt_Apartment.text,
										BedNo:Txt_Bed.text,ApartmentId:ApartmentId,BedId:BedId,RoomId:RoomId,BookingId:BookingId,
										PropertyId:PropertyId,GuestId:GuestId,StateId:StateId,
										Direct:Direct1,BTC:"",PropertyType:Txt_PropertyType.text,
										STAgreedAmount:0.00,LTAgreedAmount:0.00,STRackAmount:0.00,LTRackAmount:0.00,
										Status:"UnSettled",CheckOutDate:DT_CheckOutDate.text,CheckInDate:Txt_CheckInDate.text,
										InVoiceNo:Txt_ChkoutInvoice.text,LT:lbl_tarffLT.text,ST:lbl_TariffST.text,
										VAT:lbl_ServiceVAT.text,RestaurantST:lbl_ST.text,BusinessSupportST:lbl_BST.text,
										ClientId:ClientId,CityId:CityId,ServiceChargeChk:ServiceChargeChk,
										BillFromDate:DT_BillFromDate.text,BillEndDate:DT_BillTo.text,Intermediate:"Intermediate",
										Preformainvoice:Chk_PIInvoice.selected
										//Flag:Flag1
									}]);
								var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
								useWeb("CheckoutAndIntermediate","Save_CUSTOM",[GlobalXml,HdrXml]);
							}
						}
						else if(Mode1=="Bill to Company (BTC)")
						{
							if ((event.detail==Alert.YES)) 
							{
								var Ac_Hdr:ArrayCollection=new ArrayCollection
									([{
										CheckOutNo:Txt_ChkoutNo.text,GuestName:hlp_GuestName.text,Stay:Txt_Stay.text,
										Type:Txt_type.text,BookingLevel:Txt_bookinlevel.text,BillDate:DT_CheckOutDate.text,
										ClientName:Txt_Client.text,Property:Txt_Property.text,TotalTariff:Txt_TotalTariff.text,
										NetAmount:Txt_NetAmount.text,AdditionalCharge:Txt_AdditionalCharge.text,Discountperday:Txt_Discount.text,
										TotalDiscount:Txt_Totaldiscount.text,LuxuryTax:Txt_Luxury.text,
										SerivceTax:Txt_ServiceTax12.text,SerivceNet:Txt_ServiceTax7.text,
										ServiceCharge:Txt_ServiceCharge2.text,ServiceTaxService:Txt_Servicecharge12.text,
										Cess:Txt_Cess.text,HECess:Txt_HECess.text,
										NetAmount:Txt_NetAmount.text,Referance:Txt_referance.text,
										ExtraDays:txt_itemdays.text,ExtraAmount:lbl_ExtraMatress.text,
										ExtraType:ddl_Items.selectedItem,
										Id:Id,ChkInHdrId:CheckInHdrId,Name:Txt_Name.text,NoOfDays:lbl_tariff.text,
										CheckInType:Txt_CheckInType.text,ApartmentNo:Txt_Apartment.text,
										BedNo:Txt_Bed.text,ApartmentId:ApartmentId,BedId:BedId,RoomId:RoomId,BookingId:BookingId,
										PropertyId:PropertyId,GuestId:GuestId,StateId:StateId,
										Direct:"",BTC:BTC1,PropertyType:Txt_PropertyType.text,
										STAgreedAmount:0.00,LTAgreedAmount:0.00,STRackAmount:0.00,LTRackAmount:0.00,
										Status:"UnSettled",CheckOutDate:DT_CheckOutDate.text,CheckInDate:Txt_CheckInDate.text,
										InVoiceNo:Txt_ChkoutInvoice.text,LT:lbl_tarffLT.text,ST:lbl_TariffST.text,
										VAT:lbl_ServiceVAT.text,RestaurantST:lbl_ST.text,BusinessSupportST:lbl_BST.text,
										ClientId:ClientId,CityId:CityId,ServiceChargeChk:ServiceChargeChk,
										BillFromDate:DT_BillFromDate.text,BillEndDate:DT_BillTo.text,Intermediate:"Intermediate",
										Preformainvoice:Chk_PIInvoice.selected
										//Flag:Flag1
									}]);
								var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
								useWeb("CheckoutAndIntermediate","Save_CUSTOM",[GlobalXml,HdrXml]);
							}
						}
							
						else if(Mode1="Bill to Client")
						{
							if ((event.detail==Alert.YES)) 
							{
								var Ac_Hdr:ArrayCollection=new ArrayCollection
									([{
										CheckOutNo:Txt_ChkoutNo.text,GuestName:hlp_GuestName.text,Stay:Txt_Stay.text,
										Type:Txt_type.text,BookingLevel:Txt_bookinlevel.text,BillDate:DT_CheckOutDate.text,
										ClientName:Txt_Client.text,Property:Txt_Property.text,TotalTariff:Txt_TotalTariff.text,
										NetAmount:Txt_NetAmount.text,AdditionalCharge:Txt_AdditionalCharge.text,Discountperday:Txt_Discount.text,
										TotalDiscount:Txt_Totaldiscount.text,LuxuryTax:Txt_Luxury.text,
										SerivceTax:Txt_ServiceTax12.text,SerivceNet:Txt_ServiceTax7.text,
										ServiceCharge:Txt_ServiceCharge2.text,ServiceTaxService:Txt_Servicecharge12.text,
										Cess:Txt_Cess.text,HECess:Txt_HECess.text,
										NetAmount:Txt_NetAmount.text,Referance:Txt_referance.text,
										ExtraDays:txt_itemdays.text,ExtraAmount:lbl_ExtraMatress.text,
										ExtraType:ddl_Items.selectedItem,
										Id:Id,ChkInHdrId:CheckInHdrId,Name:Txt_Name.text,NoOfDays:lbl_tariff.text,
										CheckInType:Txt_CheckInType.text,ApartmentNo:Txt_Apartment.text,
										BedNo:Txt_Bed.text,ApartmentId:ApartmentId,BedId:BedId,RoomId:RoomId,BookingId:BookingId,
										PropertyId:PropertyId,GuestId:GuestId,StateId:StateId,
										Direct:"",BTC:BTC1,PropertyType:Txt_PropertyType.text,
										STAgreedAmount:0.00,LTAgreedAmount:0.00,STRackAmount:0.00,LTRackAmount:0.00,
										Status:"UnSettled",CheckOutDate:DT_CheckOutDate.text,CheckInDate:Txt_CheckInDate.text,
										InVoiceNo:Txt_ChkoutInvoice.text,LT:lbl_tarffLT.text,ST:lbl_TariffST.text,
										VAT:lbl_ServiceVAT.text,RestaurantST:lbl_ST.text,BusinessSupportST:lbl_BST.text,
										ClientId:ClientId,CityId:CityId,ServiceChargeChk:ServiceChargeChk,
										BillFromDate:DT_BillFromDate.text,BillEndDate:DT_BillTo.text,Intermediate:"Intermediate",
										Preformainvoice:Chk_PIInvoice.selected
										//Flag:Flag1
									}]);
								var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
								useWeb("CheckoutAndIntermediate","Save_CUSTOM",[GlobalXml,HdrXml]);
							}
						}
					}
					
				}
				
				
				//				if ((event.detail==Alert.NO))
				//				{
				//					Help();
				//					FnClear();
				//					PageLoad();
				//					FnSettleClr();
				//				}
			}
			
			public function OnSelectionProperty():void
			{
				//		AllClear();
				if(hlp_property.selected())
				{
					
					hlp_property.text = hlp_property.Select_Row.PropertyName;
					PropertyId=hlp_property.Select_Row.ZId;
					hlp_GuestName.enabled=true;
					useWeb("CheckoutAndIntermediate","GuestLoad_CUSTOM",[GlobalXml,'GuestName','','','',0,0,PropertyId,0,0]);
					
				}
				else
				{
					hlp_property.text="";
					PropertyId=0;
				}
			}
			//Guest Name select in tariff page
			public function OnSelectionGuestname():void
			{
				
				if(hlp_GuestName.selected())
				{
					hlp_GuestName.text=hlp_GuestName.Select_Row.GuestName;
					Tariff=hlp_GuestName.Select_Row.Tariff;
					StateId=hlp_GuestName.Select_Row.StateId;
					CheckInHdrId=hlp_GuestName.Select_Row.CheckInHdrId;
					PropertyId=hlp_GuestName.Select_Row.PropertyId;
					BookingId=hlp_GuestName.Select_Row.BookingId;
					GuestId=hlp_GuestName.Select_Row.GuestId;
					RoomId=hlp_GuestName.Select_Row.RoomId;
					ApartmentId=hlp_GuestName.Select_Row.ApartmentId;
					BedId=hlp_GuestName.Select_Row.BedId;
					var TypeLevel:String =""
					TypeLevel=hlp_GuestName.Select_Row.Guest;
					Txt_CheckInType.text==hlp_GuestName.Select_Row.Type;
					ExtraMaters=0;
					
					useWeb("CheckoutAndIntermediate","GuestDetail_CUSTOM",[GlobalXml,"GuestDetails","","","",CheckInHdrId,0,0,0,ExtraMaters]);
					
		//			useWeb("GuestCheckOut","Guest_CUSTOM",[GlobalXml,"CHKINROOMDETAILS","",CheckInHdrId,StateId,0,0,ExtraMaters]);
					//		useWeb("CheckOutServiceHdr","TariffLoad_CUSTOM",[GlobalXml,"ProductLoad",CheckInHdrId,GuestId,StateId,0,0,0]);
					
					bdr_Tariff.visible=true;
					btn_Tariff.enabled=true;
					btn_Service.enabled=true;
					btn_Settle.enabled=false;
					Grid_Settle.dataProvider=null;		
					
					
				}
				else
				{
					hlp_GuestName.text="";
					GuestId=0;
				}
				
			}
			
			protected function FnSearch():void
			{
				PopUpManager.addPopUp( SearchPopUp , this, true);
				SearchPopUp.Prc_name="GuestCheckOut";
				var SearchParam:Array =new Array();
				SearchPopUp.HlpIndex="SEARCH";
				SearchParam[0]=GlobalXml;
				SearchParam[1]=0;				
				SearchPopUp.Prc_Param=SearchParam;
				SearchPopUp.HlpSrchGlobal="";
				SearchPopUp.dataPanel.focusEnabled=true;
				SearchPopUp.Pageint();
				SearchPopUp.addEventListener("PopupEnter",funpopupEnter);
				SearchPopUp.addEventListener("PopupClose",funpopupClose);
				PopUpManager.centerPopUp(SearchPopUp);
			}
			
			private function funpopupClose(event:Event):void{}
			private function funpopupEnter(event:Event):void{SearchDtls(SearchPopUp.SelectRow.Id,0);}			
			private function SearchDtls(Id:int,_PrdFk:int):void
			{
				var Load:Array = new Array();
				Load[0] = GlobalXml; Load[1] = Id;  				
				useWeb("GuestCheckOut","Search_CUSTOM",Load);
			}
			
			
			
			protected function FnClear():void
			{
				Txt_TotalTariff.text="";
				Txt_NetAmount.text="";
				Txt_AdditionalCharge.text="";
				Txt_Discount.text="";lbl_tariff.text="";
				Txt_Totaldiscount.text="";
				Txt_Luxury.text="";
				Txt_ServiceTax12.text="";
				Txt_NetAmount.text="";
				Txt_referance.text="";
				Txt_Discount.text="";
				Txt_Totaldiscount.text="";
				Id=0;lbl_Nettariff.text="";
				lbl_tarffLT.text="";lbl_TariffST.text="";
				Txt_ServiceCharge2.text="";
				Txt_Servicecharge12.text="";
				Txt_ServiceTax7.text="";
				Txt_Cess.text="";
				Txt_HECess.text="";F1="";
				Txt_Bed.text="";
				Txt_Apartment.text="";
				Txt_TariffLoad.text="";
				DT_CheckOutDate.text="";
				Txt_PropertyType.text="";
				hlp_GuestName.dataProvider=null;
				Txt_CheckInDate.text="";
				Txt_ChkoutInvoice.text="";
				lbl_ExtraMatress.text="";
				ddl_Items.dataProvider=null;
				txt_itemdays.text="";
				txt_itemamt.text="";
				ExtraMaters=0;
				chk_ServiceCharge.selected=false;
				
			}
			
			// Discount
			protected function Txt_Discount_changeHandler():void
			{
				if(Txt_Discount.text=="")
				{
					var total:Number=Math.round(Number(Txt_TotalTariff.text));
					//Txt_TotalTariff.text=NF_Two.format(total);
					var luxury:Number=Math.round(Number(Txt_Luxury.text));
					Txt_Luxury.text=NF_Two.format(luxury);
					var service:Number=Math.round(Number(Txt_ServiceTax12.text));
					Txt_ServiceTax12.text=NF_Two.format(service);
					var Charges:Number=Math.round(Number(Txt_ServiceCharge2.text));
					Charges=Number(total*2.5/100);
					Txt_ServiceCharge2.text=NF_Two.format(Charges);
					var ServiceTax:Number=Math.round(Number(Txt_Servicecharge12.text));
					ServiceTax=Number(Charges*12.36/100);
					Txt_Servicecharge12.text=NF_Two.format(ServiceTax);
					var Cess:Number=Math.round(Number(Txt_Cess.text));
					Cess=Number(service*2/100);
					Txt_Cess.text=NF_Two.format(Cess);
					var HECess:Number=Math.round(Number(Txt_HECess.text));
					HECess=Number(service*1/100);
					Txt_HECess.text=NF_Two.format(HECess);
					Txt_NetAmount.text=NF_Two.format(Number(total+luxury+service+Charges+ServiceTax+Cess+HECess)).toString();
					
					Txt_Totaldiscount.text="";
					
				}
				else if(Number(Txt_Discount.text)!=0)
				{
					var total:Number=Math.round(Number(Txt_TotalTariff.text));
					//Txt_TotalTariff.text=NF_Two.format(total);
					var luxury:Number=Math.round(Number(Txt_Luxury.text));
					Txt_Luxury.text=NF_Two.format(luxury);
					var service:Number=Math.round(Number(Txt_ServiceTax12.text));
					Txt_ServiceTax12.text=NF_Two.format(service);
					var Charges:Number=Math.round(Number(Txt_ServiceCharge2.text));
					Charges=Number(total*2.5/100);
					Txt_ServiceCharge2.text=NF_Two.format(Charges);
					var ServiceTax:Number=Math.round(Number(Txt_Servicecharge12.text));
					ServiceTax=Number(Charges*12.36/100);
					Txt_Servicecharge12.text=NF_Two.format(ServiceTax);
					var Cess:Number=Math.round(Number(Txt_Cess.text));
					Cess=Number(service*2/100);
					Txt_Cess.text=NF_Two.format(Cess);
					var HECess:Number=Math.round(Number(Txt_HECess.text));
					HECess=Number(service*1/100);
					Txt_HECess.text=NF_Two.format(HECess);
					Txt_NetAmount.text=NF_Two.format(Number(total+luxury+service+Charges+ServiceTax+Cess+HECess)).toString();
					
					
					var Net:String=NF_Two.format(Txt_NetAmount.text)
					Txt_NetAmount.text=Net.replace(",","");
					var Tmp:Number=Math.round(Number(Txt_Discount.text));
					var days:Number=Math.round(Number(lbl_tariff.text));
					Txt_Totaldiscount.text=NF_Two.format(Number(Tmp*days).toString());
					var NetRound:String=NF_Two.format(Txt_Totaldiscount.text)
					Txt_Totaldiscount.text=NetRound.replace(",","");
					Txt_NetAmount.text=NF_Two.format(Number(Txt_NetAmount.text)-Number(Txt_Totaldiscount.text));	
				}
				else
				{
					var total:Number=Math.round(Number(Txt_TotalTariff.text));
					//Txt_TotalTariff.text=NF_Two.format(total);
					var luxury:Number=Math.round(Number(Txt_Luxury.text));
					Txt_Luxury.text=NF_Two.format(luxury);
					var service:Number=Math.round(Number(Txt_ServiceTax12.text));
					Txt_ServiceTax12.text=NF_Two.format(service);
					var Charges:Number=Math.round(Number(Txt_ServiceCharge2.text));
					Charges=Number(total*2.5/100);
					Txt_ServiceCharge2.text=NF_Two.format(Charges);
					var ServiceTax:Number=Math.round(Number(Txt_Servicecharge12.text));
					ServiceTax=Number(Charges*12.36/100);
					Txt_Servicecharge12.text=NF_Two.format(ServiceTax);
					var Cess:Number=Math.round(Number(Txt_Cess.text));
					Cess=Number(service*2/100);
					Txt_Cess.text=NF_Two.format(Cess);
					var HECess:Number=Math.round(Number(Txt_HECess.text));
					HECess=Number(service*1/100);
					Txt_HECess.text=NF_Two.format(HECess);
					Txt_NetAmount.text=NF_Two.format(Number(total+luxury+service+Charges+ServiceTax+Cess+HECess)).toString();
					
					Txt_Totaldiscount.text="";
					
				}
			}
			protected function Add_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Grp_Service.visible=true;
			}
			protected function FNClose(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Grp_Service.visible=false;
			}
			protected function Tariff_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Grp_Tariff.visible=true;
			}
			protected function FnClosetariff_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Grp_Tariff.visible=false;
			}
			
			// Service Save
			public 	var F2:String="";
			
			protected function FnServiceSave():void
			{
				{
					F2="Second";
					var ErrStr:String="";var Flag:Boolean=true;
					//					if(hlp_GuestName.text=="")
					//					{
					//						if(Flag==true)
					//						{
					//							hlp_GuestName.setFocus();Flag=false;
					//						}
					//						ErrStr=ErrStr+"*  Guest Name is Required.\n";					
					//					}
					if((Grid_Service.dataProvider==null)||(Grid_Service.dataProvider.length==0))
					{
						if(Flag==true)
						{ 
							//Grd_Details.setFocus();
							Flag=false;
						}
						if(txt_MiscellaneousAmount.text=="")
						{
							ErrStr=ErrStr+ "Do You Want to Exit Kot?";
						}
						
					}
					//					if(Number(Txt_ServiceNetAmount.text)==0)
					//					{
					//						if(Flag==true)
					//						{ 
					//							
					//							Flag=false;
					//						}
					//						ErrStr=ErrStr+ "Do You Want to Exist Kot?";
					//					}
					
					// MiscellaneousAmount			
					//					if(Chk_Miscellaneous.selected==true)
					//					{
					//						if(txt_MiscellaneousAmount.text=="")
					//						{
					//							if(Flag==true)
					//							{
					//								txt_MiscellaneousAmount.setFocus();Flag=false;
					//							}
					//							ErrStr=ErrStr+"*  Miscellaneous Amount is Required.\n";					
					//						}
					//						if(txt_MiscellaneousRemarks.text=="")
					//						{
					//							if(Flag==true)
					//							{
					//								txt_MiscellaneousRemarks.setFocus();Flag=false;
					//							}
					//							ErrStr=ErrStr+"*  Miscellaneous Remarks is Required.\n";					
					//						}
					//						
					//					}
					if(ErrStr!="")
					{
						alignAlert(Alert.show(ErrStr, "Warning",Alert.YES | Alert.NO, null,
							ServiceKot, iconWarning, Alert.NO),10,"");
						return;
						
					}					
					//					var Ac_Hdr:ArrayCollection=new ArrayCollection
					//						([{
					//							CheckOutHdrId:PrintChkOutId,
					//							ChkOutServiceAmtl:Txt_ServiceBillAmt.text,
					//							ChkOutserviceVat:Txt_ServiceVat.text,
					//							ChhkOutserviceST:Txt_SerivceTax.text,
					//							OtherService:Txt_BST.text,
					//							Cess:Txt_ServiceEcess.text,
					//							HECess:Txt_serviceHECess.text,
					//							NetAmount:Txt_ServiceNetAmount.text,
					//							Id:Id,MiscellaneousRemarks:txt_MiscellaneousRemarks.text,
					//							MiscellaneousAmount:txt_MiscellaneousAmount.text
					//						}]);
					//					var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
					//					var KOT:ArrayCollection= new  ArrayCollection();
					//					KOT.removeAll();
					//					KOT=Grid_Service.dataProvider as ArrayCollection;
					//					var ServiceXml:String="";
					//					ServiceXml += "<ROOT>";
					//					ServiceXml += ObjToXmlStr_Comm(KOT,"ServiceXml")
					//					ServiceXml += "</ROOT>";
					//		useWeb("CheckOutServiceHdr","Save_CUSTOM",[GlobalXml,HdrXml,ServiceXml]);
				}
				if(Id == 0)
				{ 
					//		useWeb("GuestCheckOut","Save_CUSTOM",[GlobalXml,HdrXml]);
					alignAlert(Alert.show("Do you want Generate Service Invoice ?", "Warning",Alert.YES | Alert.NO, null,
						FnSeviceUpdate, iconWarning, Alert.NO),10,"");
					btn_Service.enabled=true;
					Btn_Settlement.enabled=true;
				}
			}
			private function ServiceKot(event:CloseEvent):void 
			{	
				if (event.detail == Alert.YES) 
				{
					useWeb("CheckoutAndIntermediate","ServiceEntry_CUSTOM",[GlobalXml,"ServiceEntry","","","",PrintChkOutId,0,0,Global_AC[0].UsrId,0]);
					Btn_Settlement_clickHandler();
				}
			}
			public function FnSeviceUpdate(event:CloseEvent):void
			{
				
				if ((event.detail==Alert.YES)) 
				{
					var Ac_Hdr:ArrayCollection=new ArrayCollection
						([{
							CheckOutHdrId:PrintChkOutId,
							ChkOutServiceAmtl:Txt_ServiceBillAmt.text,
							ChkOutserviceVat:Txt_ServiceVat.text,
							ChhkOutserviceST:Txt_SerivceTax.text,
							OtherService:Txt_BST.text,
							Cess:Txt_ServiceEcess.text,
							HECess:Txt_serviceHECess.text,
							NetAmount:Txt_ServiceNetAmount.text,
							Id:Id,MiscellaneousRemarks:txt_MiscellaneousRemarks.text,
							MiscellaneousAmount:txt_MiscellaneousAmount.text}]);
					var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
					var KOT:ArrayCollection= new  ArrayCollection();
					KOT.removeAll();
					KOT=Grid_Service.dataProvider as ArrayCollection;
					var ServiceXml:String="";
					ServiceXml += "<ROOT>";
					ServiceXml += ObjToXmlStr_Comm(KOT,"ServiceXml")
					ServiceXml += "</ROOT>";
					useWeb("CheckOutServiceHdr","Save_CUSTOM",[GlobalXml,HdrXml,ServiceXml]);
				}
				//				if ((event.detail==Alert.NO))
				//				{
				//					Help();
				//					FnClear();
				//					PageLoad();
				//					FnServiceClr();
				//					FnSettleClr();
				//				}
			}
			// Service Clear
			protected function FnServiceClr():void
			{
				//FnClear();
				Grid_Service.dataProvider=null;
				CheckOutHdrId=0;lbl_tariff.text="";
				Txt_ServiceBillAmt.text="";
				Txt_ServiceVat.text="";Txt_SerivceTax.text="";
				Txt_ServiceNetAmount.text="";
				Txt_TotalTariff.text="";
				Txt_NetAmount.text="";Txt_AdditionalCharge.text="";
				Txt_Discount.text="";Txt_Totaldiscount.text="";
				Txt_Luxury.text="";Txt_ServiceTax12.text="";
				Txt_NetAmount.text="";Txt_referance.text="";
				Txt_Discount.text="";Txt_Totaldiscount.text="";
				Id=0;Txt_ServiceCharge2.text="";
				Txt_Servicecharge12.text="";Txt_ServiceTax7.text="";
				Txt_Cess.text="";Txt_HECess.text="";F1="";
				F2="";Txt_ServiceEcess.text="";Txt_serviceHECess.text="";
				dt_ServiceDate.text="";
				Chk_Miscellaneous.selected=false;
				txt_MiscellaneousAmount.text="";
				txt_MiscellaneousRemarks.text="";
				txt_MiscellaneousAmount.visible=false;
				txt_MiscellaneousRemarks.visible=false;
			}
			//Additional Days Calculation(Check Box)
			protected function Chk_change_changeHandler(event:Event):void
			{
				if(ServiceChargeChk == 1)
				{
					if(Chk_change.selected==true)
					{
						//Txt_AdditionalCharge.editable=true;
						//					Txt_AdditionalCharge.text;
						//					lbl_tariff.text;
						var additional:Number=(Math.round(Number(lbl_Nettariff.text)));
						//	var adddtdays:Number=(Number(lbl_tariff.text))+1;
						var NoOfdays:Number=(Number(lbl_tariff.text));
						var total:Number=(Math.round(Number(lbl_Nettariff.text))*NoOfdays);
						var total1:Number=(Math.round(Number(total)+(additional)));
						//			var total:Number=(Math.round(Number(lbl_Nettariff.text)+Math.round(Number(lbl_Nettariff.text)))*NoOfdays);
						Txt_TotalTariff.text=NF_Two.format(total1);
						//					var luxury:Number=Math.round(Number(Txt_Luxury.text));
						//					Txt_Luxury.text=NF_Two.format(luxury);
						
						var luxury1:Number=(Number(lbl_tarffLT.text));
						luxury1=Number(total1*luxury1/100)
						Txt_Luxury.text=NF_Two.format(luxury1);
						
						var service1:Number=(Number(lbl_TariffST.text));
						service1=Number(total1*service1/100)
						Txt_ServiceTax12.text=NF_Two.format(service1);
						
						//					var service:Number=Math.round(Number(Txt_ServiceTax12.text));
						//					Txt_ServiceTax12.text=NF_Two.format(service);
						var Charges:Number=Math.round(Number(Txt_ServiceCharge2.text));
						Charges=Number(total1*2.5/100);
						Txt_ServiceCharge2.text=NF_Two.format(Charges);
						var ServiceTax:Number=Math.round(Number(Txt_Servicecharge12.text));
						ServiceTax=Number(Charges*12.00/100);
						Txt_Servicecharge12.text=NF_Two.format(ServiceTax);
						var Cess:Number=Math.round(Number(Txt_Cess.text));
						Cess=Number((service1+ServiceTax)*2/100);
						Txt_Cess.text=NF_Two.format(Cess);
						var HECess:Number=Math.round(Number(Txt_HECess.text));
						HECess=Number((service1+ServiceTax)*1/100);
						Txt_HECess.text=NF_Two.format(HECess);
						Txt_NetAmount.text=NF_Two.format(Math.round(Number(total1+luxury1+service1+Charges+ServiceTax+Cess+HECess))).toString();
						
						var adddtdays:Number=(Number(lbl_tariff.text))+1;
						lbl_tariff.text=(Number(adddtdays)).toString();
					}
					else
					{
						
						var NoOfdays:Number=(Number(lbl_tariff.text))-1;	
						var total:Number=(Math.round(Number(lbl_Nettariff.text))*NoOfdays);
						Txt_TotalTariff.text=NF_Two.format(total);
						//					var luxury:Number=Math.round(Number(Txt_Luxury.text));
						//					Txt_Luxury.text=NF_Two.format(luxury);
						//					var service:Number=Math.round(Number(Txt_ServiceTax12.text));
						//					Txt_ServiceTax12.text=NF_Two.format(service);
						
						var luxury:Number=(Number(lbl_tarffLT.text));
						luxury=Number(total*luxury/100)
						Txt_Luxury.text=NF_Two.format(luxury);
						
						var service:Number=(Number(lbl_TariffST.text));
						service=Number(total*service/100)
						Txt_ServiceTax12.text=NF_Two.format(service);
						
						
						
						var Charges:Number=Math.round(Number(Txt_ServiceCharge2.text));
						Charges=Number(total*2.5/100);
						Txt_ServiceCharge2.text=NF_Two.format(Charges);
						var ServiceTax:Number=Math.round(Number(Txt_Servicecharge12.text));
						ServiceTax=Number(Charges*12.00/100);
						Txt_Servicecharge12.text=NF_Two.format(ServiceTax);
						var Cess:Number=Math.round(Number(Txt_Cess.text));
						Cess=Number((service+ServiceTax)*2/100);
						Txt_Cess.text=NF_Two.format(Cess);
						var HECess:Number=Math.round(Number(Txt_HECess.text));
						HECess=Number((service+ServiceTax)*1/100);
						Txt_HECess.text=NF_Two.format(HECess);
						Txt_NetAmount.text=NF_Two.format(Math.round(Number(total+luxury+service+Charges+ServiceTax+Cess+HECess))).toString();
						
						var adddtdays:Number=(Number(lbl_tariff.text))-1;
						lbl_tariff.text=(Number(adddtdays)).toString();
					}
					Txt_AdditionalCharge.text="";
					
				}
				else // ServiceCharge if not selected (0)
				{
					if(Chk_change.selected==true)
					{
						//Txt_AdditionalCharge.editable=true;
						//					Txt_AdditionalCharge.text;
						//					lbl_tariff.text;
						var additional:Number=(Math.round(Number(lbl_Nettariff.text)));
						//	var adddtdays:Number=(Number(lbl_tariff.text))+1;
						var NoOfdays:Number=(Number(lbl_tariff.text));
						var total:Number=(Math.round(Number(lbl_Nettariff.text))*NoOfdays);
						var total1:Number=(Math.round(Number(total)+(additional)));
						//			var total:Number=(Math.round(Number(lbl_Nettariff.text)+Math.round(Number(lbl_Nettariff.text)))*NoOfdays);
						Txt_TotalTariff.text=NF_Two.format(total1);
						//					var luxury:Number=Math.round(Number(Txt_Luxury.text));
						//					Txt_Luxury.text=NF_Two.format(luxury);
						
						var luxury1:Number=(Number(lbl_tarffLT.text));
						luxury1=Number(total1*luxury1/100)
						Txt_Luxury.text=NF_Two.format(luxury1);
						
						var service1:Number=(Number(lbl_TariffST.text));
						service1=Number(total1*service1/100)
						Txt_ServiceTax12.text=NF_Two.format(service1);
						
						//					var service:Number=Math.round(Number(Txt_ServiceTax12.text));
						//					Txt_ServiceTax12.text=NF_Two.format(service);
						var Charges:Number=Math.round(Number(Txt_ServiceCharge2.text));
						Charges=Number(0*2.5/100);
						Txt_ServiceCharge2.text=NF_Two.format(Charges);
						var ServiceTax:Number=Math.round(Number(Txt_Servicecharge12.text));
						ServiceTax=Number(Charges*12.00/100);
						Txt_Servicecharge12.text=NF_Two.format(ServiceTax);
						var Cess:Number=Math.round(Number(Txt_Cess.text));
						Cess=Number((service1)*2/100);
						Txt_Cess.text=NF_Two.format(Cess);
						var HECess:Number=Math.round(Number(Txt_HECess.text));
						HECess=Number((service1)*1/100);
						Txt_HECess.text=NF_Two.format(HECess);
						Txt_NetAmount.text=NF_Two.format(Math.round(Number(total1+luxury1+service1+Charges+ServiceTax+Cess+HECess))).toString();
						
						var adddtdays:Number=(Number(lbl_tariff.text))+1;
						lbl_tariff.text=(Number(adddtdays)).toString();
					}
					else
					{
						
						var NoOfdays:Number=(Number(lbl_tariff.text))-1;	
						var total:Number=(Math.round(Number(lbl_Nettariff.text))*NoOfdays);
						Txt_TotalTariff.text=NF_Two.format(total);
						//					var luxury:Number=Math.round(Number(Txt_Luxury.text));
						//					Txt_Luxury.text=NF_Two.format(luxury);
						//					var service:Number=Math.round(Number(Txt_ServiceTax12.text));
						//					Txt_ServiceTax12.text=NF_Two.format(service);
						
						var luxury:Number=(Number(lbl_tarffLT.text));
						luxury=Number(total*luxury/100)
						Txt_Luxury.text=NF_Two.format(luxury);
						
						var service:Number=(Number(lbl_TariffST.text));
						service=Number(total*service/100)
						Txt_ServiceTax12.text=NF_Two.format(service);
						
						
						
						var Charges:Number=Math.round(Number(Txt_ServiceCharge2.text));
						Charges=Number(0*2.5/100);
						Txt_ServiceCharge2.text=NF_Two.format(Charges);
						var ServiceTax:Number=Math.round(Number(Txt_Servicecharge12.text));
						ServiceTax=Number(Charges*12.00/100);
						Txt_Servicecharge12.text=NF_Two.format(ServiceTax);
						var Cess:Number=Math.round(Number(Txt_Cess.text));
						Cess=Number((service)*2/100);
						Txt_Cess.text=NF_Two.format(Cess);
						var HECess:Number=Math.round(Number(Txt_HECess.text));
						HECess=Number((service)*1/100);
						Txt_HECess.text=NF_Two.format(HECess);
						Txt_NetAmount.text=NF_Two.format(Math.round(Number(total+luxury+service+Charges+ServiceTax+Cess+HECess))).toString();
						
						var adddtdays:Number=(Number(lbl_tariff.text))-1;
						lbl_tariff.text=(Number(adddtdays)).toString();
					}
					Txt_AdditionalCharge.text="";
				}
			}
			
			//Extra Matress calculation(Tariff)
			protected function FnAdd():void
			{
				
				
				
				var NoOfdays:Number=(Number(lbl_tariff.text))	
				var total:String=NF_Two.format((Number(lbl_Nettariff.text))*NoOfdays);
				Txt_TotalTariff.text=total.replace(",","");
				//	Txt_TotalTariff.text=NF_Two.format(total);
				var ExtraPerDay:String=NF_Two.format(Number(txt_itemamt.text));
				ExtraPerDay=ExtraPerDay.replace(",","");
				var Extra:String=NF_Two.format(Number(txt_itemdays.text)* Number(txt_itemamt.text));
				//txt_itemamt.text=Extra.replace(",","");
				Extra=Extra.replace(",","");
				lbl_ExtraMatress.text=NF_Two.format(Extra);
				//var ExtraMatress:Number=(Math.round(Number(Txt_TotalTariff.text))+Number(Extra));
				//var luxury:Number=(Number(lbl_tarffLT.text));
				//luxury=Number(ExtraMatress*luxury/100)
				//Txt_Luxury.text=NF_Two.format(luxury);
				ExtraMaters=Number(Extra);
				var BillFrom:String="";
				var BillTo:String="";
				BillFrom=DT_BillFromDate.text;
				BillTo=DT_BillTo.text;
				useWeb("CheckoutAndIntermediate","Guest_CUSTOM",[GlobalXml,"CHKINROOMDETAILS","",BillFrom,BillTo,CheckInHdrId,StateId,0,0,ExtraMaters]);
				//				var service:Number=(Number(lbl_TariffST.text));
				//				service=Number(ExtraMatress*service/100)
				//				Txt_ServiceTax12.text=NF_Two.format(service);
				//				
				//				
				//				var Charges:Number=Math.round(Number(Txt_ServiceCharge2.text));
				//				Charges=Number(ExtraMatress*2.5/100);
				//				Txt_ServiceCharge2.text=NF_Two.format(Charges);
				//				var ServiceTax:Number=Math.round(Number(Txt_Servicecharge12.text));
				//				ServiceTax=Number(Charges*12.00/100);
				//				Txt_Servicecharge12.text=NF_Two.format(ServiceTax);
				//				var Cess:Number=Math.round(Number(Txt_Cess.text));
				//				Cess=Number((service+ServiceTax)*2/100);
				//				Txt_Cess.text=NF_Two.format(Cess);
				//				var HECess:Number=Math.round(Number(Txt_HECess.text));
				//				HECess=Number((service+ServiceTax)*1/100);
				//				Txt_HECess.text=NF_Two.format(HECess);
				//				Txt_NetAmount.text=NF_Two.format(Math.round(Number(ExtraMatress+luxury+service+Charges+ServiceTax+Cess+HECess))).toString();
				
				Grp_Tariff.visible=false;
			}
			
			protected function btn_Tariff_clickHandler():void
			{
				// TODO Auto-generated method stub
				//				var ErrStr:String="";var Flag:Boolean=true;
				//				if(hlp_GuestName.text=="")
				//				{
				//					if(Flag==true)
				//					{
				//						hlp_GuestName.setFocus();Flag=false;
				//					}
				//					ErrStr=ErrStr+"*  Guest Name is Required.\n";					
				//				}
				//				if(ErrStr!="")
				//				{
				//					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
				//					return;					
				//				}
				btn_Tariff.Button_B_mouseOverHandler();				
				btn_Service.Button_OutHandler();					
				Btn_Settlement.Button_OutHandler();
				bdr_Tariff.visible=true;
				bdr_Service.visible=false;
				bdr_Settle.visible=false;
				
			}
			
			protected function btn_Service_clickHandler():void
			{
				//FnServiceClr();
				btn_Service.Button_B_mouseOverHandler();				
				btn_Tariff.Button_OutHandler();					
				Btn_Settlement.Button_OutHandler();
				bdr_Tariff.visible=false;
				bdr_Service.visible=true;
				bdr_Settle.visible=false;
				if(Grid_Service.dataProvider==null)
				{
					ErrStr=ErrStr+"*  KOT Details is Required.\n";	
				}
				else
				{
					//				var Len:Number=0,TotAmt:Number=0;var VT:Number=0,ST:Number=0;
					//				var VAT:Number=Number(lbl_ServiceVAT.text);
					//				var ServiceTax:Number=Number(lbl_ST.text);
					//				var Cess:Number=2;
					//				var HECess:Number=1;
					//	Txt_ServiceNetAmount.text="";
					//	Txt_ServiceVat.text="";
					//	Txt_SerivceTax.text="";
					//	Txt_ServiceBillAmt.text="";
					//				var Ac_Tmp:ArrayCollection=new ArrayCollection();
					//				Ac_Tmp=Grid_Service.dataProvider as ArrayCollection;
					//				var Total:int=0;
					//				for(var i:int=0;i<Ac_Tmp.length;i++)
					//				{
					//					Total+=Number(Ac_Tmp[i].Amount);
					//				}
					//				if(Ac_Tmp == null)
					//				{
					//					var TA:String=NF_Two.format(Total);
					//					Txt_ServiceBillAmt.text=TA.replace(",","");
					//					var Net:Number=Number(Txt_ServiceBillAmt.text);
					//					var TT:String=NF_Two.format(Net*VAT/100);
					//					Txt_ServiceVat.text=TT.replace(",","");
					//					var TT:String=NF_Two.format(Net*ServiceTax/100);
					//					Txt_SerivceTax.text=TT.replace(",","");
					//					var Cee:Number=Number(Txt_SerivceTax.text);
					//					var CS:String=NF_Two.format(Cee*Cess/100);
					//					Txt_ServiceEcess.text=CS.replace(",","");
					//					var HCee:Number=Number(Txt_SerivceTax.text);
					//					var HCS:String=NF_Two.format(HCee*HECess/100);
					//					Txt_serviceHECess.text=HCS.replace(",","");
					//					var TT:String=NF_Two.format(Net*ServiceTax/100);
					//					var Tmp:Number=Number(Txt_ServiceBillAmt.text)+Number(Txt_ServiceVat.text)+Number(Txt_SerivceTax.text)+
					//						Number(Txt_ServiceEcess.text)+Number(Txt_serviceHECess.text);	
					//					Txt_ServiceNetAmount.text=NF_Two.format(Math.round(Tmp));
					//				}
					//				else
					//				{
					//					Len=Ac_Tmp.length;
					//				}
					//				for(var i:int=0;i<Len;i++)
					//				{
					//					TotAmt+=Number(Ac_Tmp[i].Amount);					
					//				}
					
					//				var Type:String="Food and Bevarnge";
					//				var Type:String="Service";
					//				if(Type == "Food and Bevarnge")
					//				{
					//					var TA:String=NF_Two.format(Total);
					//					Txt_ServiceBillAmt.text=TA.replace(",","");
					//					var Net:Number=Number(Txt_ServiceBillAmt.text);
					//					var TT:String=NF_Two.format(Net*VAT/100);
					//					Txt_ServiceVat.text=TT.replace(",","");
					//					var TT:String=NF_Two.format(Net*ServiceTax/100);
					//					Txt_SerivceTax.text=TT.replace(",","");
					//					var Cee:Number=Number(Txt_SerivceTax.text);
					//					var CS:String=NF_Two.format(Cee*Cess/100);
					//					Txt_ServiceEcess.text=CS.replace(",","");
					//					var HCee:Number=Number(Txt_SerivceTax.text);
					//					var HCS:String=NF_Two.format(HCee*HECess/100);
					//					Txt_serviceHECess.text=HCS.replace(",","");
					//					var Tmp:Number=Number(Txt_ServiceBillAmt.text)+Number(Txt_ServiceVat.text)+Number(Txt_SerivceTax.text)+
					//						Number(Txt_ServiceEcess.text)+Number(Txt_serviceHECess.text);	
					//					Txt_ServiceNetAmount.text=NF_Two.format(Math.round(Tmp));	
					//					Grp_Service.visible=false;
					//					hlp_item.text="";
					//					Txt_ItemAmount.text="";
					//					dt_ServiceDate.text="";
					//				}
				}
				//				Txt_BST.text="";
			}
			
			protected function Btn_Settlement_clickHandler():void
			{
				//				ErrStr="";
				//				ErrStr=ValidationFun();
				//				if(ErrStr !=="")
				//				{
				//					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
				//					return;
				//				}
				Btn_Settlement.Button_B_mouseOverHandler();				
				btn_Tariff.Button_OutHandler();					
				btn_Service.Button_OutHandler();
				bdr_Tariff.visible=false;
				bdr_Service.visible=false;
				bdr_Settle.visible=true;
				////				
				useWeb("CheckoutAndIntermediate","SettleLoad_CUSTOM",[GlobalXml,"Print","","","",PrintChkOutId,StateId,CheckInHdrId,0,0]);
				//useWeb("GuestCheckOut","Guest_CUSTOM",[GlobalXml,"CHKINROOMDETAILS","",CheckInHdrId,StateId,0,0,0]);
				
			}
			
			private function ValidationFun():String
			{
				ErrStr="";
				var Flag:Boolean=true;
				if((Grid_Settle.dataProvider==null)||(Grid_Settle.dataProvider.length==0))
				{
					if(Flag==true)
					{ 
						//Grd_Details.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+ "*  Please Generate Tariff and Service Bill  \n";
				}
				return ErrStr;
			}
			//Settlement
			public 	var F3:String="";
			//Settlement Save
			protected function FnSettleSave():void
			{
				ErrStr="";
				ErrStr=ValidationFun();
				if(ErrStr !=="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				}
				
				
				F3="third";
				var Ac_Hdr:ArrayCollection=new ArrayCollection
					([{
						CheckOutHdrId:PrintChkOutId,
						PayeeName:Txt_Pname.text,
						Address:Txt_address.text,
						Consolidated:Chk_Select.selected,
						Id:Id}]);
				var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
				var BILL:ArrayCollection= new  ArrayCollection();
				BILL.removeAll();
				BILL=Grid_Settle.dataProvider as ArrayCollection;
				var SettleXml:String="";
				SettleXml += "<ROOT>";
				SettleXml += ObjToXmlStr_Comm(BILL,"SettleXml")
				SettleXml += "</ROOT>";
				useWeb("CheckOutSettleHdr","Save_CUSTOM",[GlobalXml,HdrXml,SettleXml]);
				
				
			}
			// Settlement Page Clear
			protected function FnSettleClr():void
			{
				TodayDate="";
				CheckOutHdrId=0;CheckInHdrId=0;StateId=0;
				Txt_Pname.text="";
				Txt_address.text="";
				Chk_Select.selected=false;
				FnClear();
				Grid_Settle.dataProvider=null;
				Grid_Service.dataProvider=null;
				CheckOutHdrId=0;lbl_tariff.text="";
				Txt_ServiceBillAmt.text="";
				Txt_ServiceVat.text="";Txt_SerivceTax.text="";
				Txt_ServiceNetAmount.text="";
				Txt_ServiceEcess.text="";
				Txt_serviceHECess.text="";
				hlp_property.dataProvider=null;
				hlp_GuestName.dataProvider=null;
				hlp_GuestName.text="";
				hlp_GuestName.fnClear();
				Txt_Stay.text="";
				Txt_type.text="";Txt_bookinlevel.text="";
				Txt_Billdate.text="";Txt_Client.text="";
				Txt_Property.text="";Txt_TotalTariff.text="";
				Txt_NetAmount.text="";Txt_AdditionalCharge.text="";
				Txt_Discount.text="";Txt_Totaldiscount.text="";
				Txt_Luxury.text="";Txt_ServiceTax12.text="";
				Txt_NetAmount.text="";Txt_referance.text="";
				Txt_Discount.text="";Txt_Totaldiscount.text="";
				Id=0;Help();Txt_ServiceCharge2.text="";
				Txt_Servicecharge12.text="";Txt_ServiceTax7.text="";
				Txt_BST.text="";
				Txt_Cess.text="";Txt_HECess.text="";F1="";
				F2="";F3="";Txt_Name.text="";
				hlp_property.text="";bdr_Tariff.visible=true;
				bdr_Settle.visible=false;hlp_property.setFocus();
				btn_Service.enabled=false;
				bdr_Service.visible=false;
				bdr_Tariff.enabled=false;
				Grid_Settle.dataProvider=null;Txt_Pname.text
				btn_Tariff.Button_B_mouseOverHandler();				
				btn_Service.Button_OutHandler();					
				Btn_Settlement.Button_OutHandler();
				hlp_item.text="";
				Txt_ItemAmount.text="";
				dt_ServiceDate.text="";
				Txt_BST.text="";				
				bdr_tarserpay.visible=true;				
				bdr_Consolidate.visible=true;
				bdr_Consolidate.enabled=true;
				btn_TarPay.enabled=true;
				btn_SerPay.enabled=true;
				Chk_Select.enabled=true;
				DT_BillFromDate.text="";
				DT_BillTo.text="";
				Checkout.selected=true;
				Intermediate.selected=false;
				
				Chk_Miscellaneous.selected=false;
				txt_MiscellaneousAmount.text="";
				txt_MiscellaneousRemarks.text="";
				txt_MiscellaneousAmount.visible=false;
				txt_MiscellaneousRemarks.visible=false;
				// Tariff Pay
				bdr_TariffCash1.visible=false;
				bdr__TariffCheq1.visible=false;
				bdr_TariffCompinvoice1.visible=false;
				bdr_PaymentCredit.visible=false;
				bdr_TariffNEFT1.visible=false;
				// Serivce Pay
				bdr_ServicePaymentCredit.visible=false;
				bdr_ServiceCash1.visible=false;
				bdr_ServiceCheque1.visible=false;
				bdr_ServiceCompaInvoice1.visible=false;
				bdr_ServiceNEFT1.visible=false;
				// Consolidate Pay
				bdr_ConPaymentCredit.visible=false;
				ConsolidateCash1.visible=false;
				bdr_ConsolidateCheq1.visible=false;
				bdr_ConsolidateCmpnyInvoice1.visible=false;
				bdr_ConsolidateNEFT1.visible=false;
				btn_Service.enabled=false;
				Btn_Settlement.enabled=false;
				PrintChkOutId=0;
				ClientId=0;
				CityId=0;
				ServiceChargeChk=0;
				Intermediate.enabled=false;
				Checkout.enabled=true;
				DT_BillFromDate.enabled=false;
				DT_BillTo.enabled=false;
				Chk_PIInvoice.selected="";
				
				lbl_tariffpaymode.text="";
				lbl_tariffpaid.text="";
				
				lbl_ServicePaid.text="";
				lbl_ServicePayMode.text="";
				
				lbl_ConPaid.text="";
				lbl_ConPaymode.text="";
				
				
			}
			protected function AllClear():void
			{
				btn_Service.enabled=false;
				Btn_Settlement.enabled=false;
				PrintChkOutId=0;
				CheckOutHdrId=0;CheckInHdrId=0;StateId=0;
				Txt_Pname.text="";
				Txt_address.text="";
				Chk_Select.selected=false;
				FnClear();
				Grid_Settle.dataProvider=null;
				CheckOutHdrId=0;lbl_tariff.text="";
				Txt_ServiceBillAmt.text="";
				Txt_ServiceVat.text="";Txt_SerivceTax.text="";
				Txt_ServiceNetAmount.text="";
				Txt_ServiceEcess.text="";
				Txt_serviceHECess.text="";
				hlp_GuestName.dataProvider=null;
				hlp_GuestName.text="";
				hlp_GuestName.fnClear();
				Txt_Stay.text="";
				Txt_type.text="";Txt_bookinlevel.text="";
				Txt_Billdate.text="";Txt_Client.text="";
				Txt_Property.text="";Txt_TotalTariff.text="";
				Txt_NetAmount.text="";Txt_AdditionalCharge.text="";
				Txt_Discount.text="";Txt_Totaldiscount.text="";
				Txt_Luxury.text="";Txt_ServiceTax12.text="";
				Txt_NetAmount.text="";Txt_referance.text="";
				Txt_Discount.text="";Txt_Totaldiscount.text="";
				Id=0;Txt_ServiceCharge2.text="";
				Txt_Servicecharge12.text="";Txt_ServiceTax7.text="";
				Txt_BST.text="";
				Txt_Cess.text="";Txt_HECess.text="";F1="";
				F2="";F3="";Txt_Name.text="";
				hlp_property.text="";bdr_Tariff.visible=true;
				hlp_property.fnClear();
				bdr_Settle.visible=false;//hlp_property.setFocus();
				bdr_Service.visible=false;
				bdr_Tariff.enabled=false;
				Grid_Settle.dataProvider=null;Txt_Pname.text
				btn_Tariff.Button_B_mouseOverHandler();				
				btn_Service.Button_OutHandler();					
				Btn_Settlement.Button_OutHandler();
				hlp_item.text="";
				Txt_ItemAmount.text="";
				dt_ServiceDate.text="";
				Txt_BST.text="";				
				bdr_tarserpay.visible=true;				
				bdr_Consolidate.visible=true;
				bdr_Consolidate.enabled=true;
				btn_TarPay.enabled=true;
				btn_SerPay.enabled=true;
				Chk_Select.enabled=true;
				DT_BillFromDate.text="";
				DT_BillTo.text="";
				Checkout.selected=true;
				Intermediate.selected=false;
				// Tariff Pay
				bdr_TariffCash1.visible=false;
				bdr__TariffCheq1.visible=false;
				bdr_TariffCompinvoice1.visible=false;
				bdr_PaymentCredit.visible=false;
				bdr_TariffNEFT1.visible=false;
				// Serivce Pay
				bdr_ServicePaymentCredit.visible=false;
				bdr_ServiceCash1.visible=false;
				bdr_ServiceCheque1.visible=false;
				bdr_ServiceCompaInvoice1.visible=false;
				bdr_ServiceNEFT1.visible=false;
				// Consolidate Pay
				bdr_ConPaymentCredit.visible=false;
				ConsolidateCash1.visible=false;
				bdr_ConsolidateCheq1.visible=false;
				bdr_ConsolidateCmpnyInvoice1.visible=false;
				bdr_ConsolidateNEFT1.visible=false;
				PageLoad();
				Chk_PIInvoice.selected="";
				
				lbl_tariffpaymode.text="";
				lbl_tariffpaid.text="";
				
				lbl_ServicePaid.text="";
				lbl_ServicePayMode.text="";
				
				lbl_ConPaid.text="";
				lbl_ConPaymode.text="";
			}
			
			protected function Chk_Select_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(Chk_Select.selected == 1)
				{
					bdr_tarserpay.visible=false;
					bdr_Consolidate.visible=true;
					btn_ConPay.enabled=true;
					var Ac_Settle:ArrayCollection=new ArrayCollection();
					Ac_Settle=Grid_Settle.dataProvider as ArrayCollection;
					for(var k:int=0;k<Ac_Settle.length;k++)
					{
						if(Ac_Settle[k].BillType == "Consolidate")
						{
							Txt_ConsolidateLoad.text=Ac_Settle[k].OutStanding;
							
						}
					}
					
					//	Txt_ConsolidateLoad.text=Txt_ConsolidateOutStanding.text
					
				}
				else if(Chk_Select.selected == 0)
				{
					bdr_tarserpay.visible=true;
					bdr_Consolidate.visible=false;
					
				}
				
			}
			//Service (Grid)
			public function DeleteGrid1():void
			{
				var TotAmt:int=0;
				var total:Number=Math.round(Number(Txt_ServiceBillAmt.text));
				var VAT:Number=Number(lbl_ServiceVAT.text);
				var ServiceTax:Number=Number(lbl_ST.text);
				var BusinessST:Number=Number(lbl_BST.text);
				var Cess:Number=2;
				var HECess:Number=1;
				var Ac_Tmp:ArrayCollection=new ArrayCollection();
				Ac_Tmp=Grid_Service.dataProvider as ArrayCollection;
				var Serviceindex:int=Grid_Service.selectedIndex;
				Ac_Tmp.removeItemAt(Serviceindex);
				
				
				TypeService="Food And Beverages";
				
				var Food_ServiceBillAmt:String="";
				var Food_ServiceVat:String="";
				var Food_SerivceTax:String="";
				var Food_ServiceEcess:String="";
				var Food_serviceHECess:String="";
				var Food_ServiceNetAmount:String="";
				
				var Laundry_ServiceBillAmt:String="";
				var Laundry_ServiceVat:String="";
				var Laundry_SerivceTax:String="";
				var Laundry_ServiceEcess:String="";
				var Laundry_serviceHECess:String="";
				var Laundry_ServiceNetAmount:String="";
				var Laundry_BST:String="";
				
				
				
				if(TypeService == "Food And Beverages")
				{
					var Len:Number=0,VT1Number:Number=0,ST:Number=0;
					var VAT:Number=Number(lbl_ServiceVAT.text);
					var ServiceTax:Number=Number(lbl_ST.text);
					var BusinessST:Number=Number(lbl_BST.text);
					var Cess:Number=2;
					var HECess:Number=1;						
					
					var Total:int=0;
					
					for(var i:int=0;i<Ac_Tmp.length;i++)
					{
						if(Ac_Tmp[i].TypeService=="Food And Beverages")
						{								
							Total+=Number(Ac_Tmp[i].Amount);
							TypeService = Ac_Tmp[i].TypeService
						}								
					}							
					var FoodServiceBillAmt:String=NF_Two.format(Total);
					
					Food_ServiceBillAmt=FoodServiceBillAmt.replace(",","");
					
					var FoodNet:Number=Number(FoodServiceBillAmt.replace(",",""));
					
					var FoodServiceVat:String=NF_Two.format(FoodNet*VAT/100);
					
					Food_ServiceVat=FoodServiceVat.replace(",","");
					
					var FoodSerivceTax:String=NF_Two.format(Total*ServiceTax/100);
					
					Food_SerivceTax=FoodSerivceTax.replace(",","");
					
					var ServiceTax:Number=Number(FoodSerivceTax.replace(",",""));
					
					var FoodServiceEcess:String=NF_Two.format(ServiceTax*Cess/100);
					
					Food_ServiceEcess=FoodServiceEcess.replace(",","");						
					
					var FoodHCS:String=NF_Two.format(ServiceTax*HECess/100);							
					
					Food_serviceHECess=FoodHCS.replace(",","");
					
					var Tmp:Number=Number(Food_ServiceBillAmt)+Number(Food_ServiceVat)+
						Number(Food_SerivceTax)+Number(Food_ServiceEcess)+Number(Food_serviceHECess);	
					
					Food_ServiceNetAmount=NF_Two.format(Math.round(Tmp));	
					
				}
				TypeService="Laundry";
				if(TypeService == "Laundry")
				{
					var Len:Number=0,VT1Number:Number=0,ST:Number=0;
					var VAT:Number=Number(lbl_ServiceVAT.text);
					var ServiceTax:Number=Number(lbl_ST.text);
					var BusinessST:Number=Number(lbl_BST.text);
					var Cess:Number=2;
					var HECess:Number=1;
					
					var Total:int=0;
					
					for(var i:int=0;i<Ac_Tmp.length;i++)
					{
						if((Ac_Tmp[i].TypeService=="Laundry")||(Ac_Tmp[i].TypeService=="Services"))
						{									
							Total+=Number(Ac_Tmp[i].Amount);
							TypeService = Ac_Tmp[i].TypeService
						}								
					}
					
					var TA:String=NF_Two.format(Total);
					
					Laundry_ServiceBillAmt =TA.replace(",","");
					
					var Net:Number=Number(Laundry_ServiceBillAmt);
					
					var TT:String=NF_Two.format(Net*VAT/100);
					
					Laundry_ServiceVat=TT.replace(",","");
					
					//					var TT1:String=NF_Two.format(Net*ServiceTax/100);
					//					
					//					Laundry_SerivceTax=TT1.replace(",","");
					
					var TT2:String=NF_Two.format(Total*BusinessST/100);
					
					Laundry_BST=TT2.replace(",","");
					
					var Tax:Number=Number(Laundry_SerivceTax)+Number(Laundry_BST);							
					
					var CS:String=NF_Two.format(Tax*Cess/100);
					
					Laundry_ServiceEcess=CS.replace(",","");							
					
					var HCS:String=NF_Two.format(Tax*HECess/100);
					
					Laundry_serviceHECess=HCS.replace(",","");
					
					var Tmp:Number=Number(Laundry_ServiceBillAmt)+Number(Laundry_ServiceVat)+Number(Laundry_SerivceTax)+
						Number(Laundry_ServiceEcess)+Number(Laundry_serviceHECess)+Number(Laundry_BST);
					
					Laundry_ServiceNetAmount=NF_Two.format(Math.round(Tmp));	
					
				}
				
				Txt_ServiceBillAmt.text=String(Number(Food_ServiceBillAmt)+Number(Laundry_ServiceBillAmt));
				Txt_ServiceVat.text=String(Number(Food_ServiceVat)+Number(Laundry_ServiceVat));
				Txt_SerivceTax.text=String(Number(Food_SerivceTax)+Number(Laundry_SerivceTax));
				Txt_ServiceEcess.text=String(Number(Food_ServiceEcess)+Number(Laundry_ServiceEcess));
				Txt_serviceHECess.text=String(Number(Food_serviceHECess)+Number(Laundry_serviceHECess));
				Txt_BST.text=Laundry_BST;
				Txt_ServiceNetAmount.text=String(Number(Food_ServiceNetAmount.replace(",",""))+Number(Laundry_ServiceNetAmount.replace(",","")));
				
				//				Grp_Service.visible=false;
				//				hlp_item.text="";
				//				Txt_ItemAmount.text="";
				//				dt_ServiceDate.text="";
				
			}
			
			//Service (Product Select in help)
			public function OnSelectionItemname():void
			{
				
				if(hlp_item.selected())
				{
					//	hlp_item.text = "Broadband";
					hlp_item.text=hlp_item.Select_Row.Item;	
					if(hlp_item.text == "Broadband")
					{
						hlp_item.text=hlp_item.Select_Row.Item;
						ItemId=hlp_item.Select_Row.ItemId;
						TypeService=hlp_item.Select_Row.TypeService;
						Txt_ItemAmount.text=hlp_item.Select_Row.PerQuantityprice;
						Txt_ItemAmount.editable = true;
					}
					else
					{
						hlp_item.text=hlp_item.Select_Row.Item;
						ItemId=hlp_item.Select_Row.ItemId;
						TypeService=hlp_item.Select_Row.TypeService;
						Txt_ItemAmount.text=hlp_item.Select_Row.PerQuantityprice;
						Txt_ItemAmount.editable = false;
					}
					//					hlp_item.text=hlp_item.Select_Row.Item;
					//					ItemId=hlp_item.Select_Row.ItemId;
					//					TypeService=hlp_item.Select_Row.TypeService;
					//					Txt_ItemAmount.text=hlp_item.Select_Row.PerQuantityprice;
				}
				//				else
				//				{
				//					hlp_item.text="";
				//					ItemId=0;
				//				}
			}
			
			public var ServiceItem:String="";
			public static var Amount:Number=0;
			public static var len:Number=0;
			private var ac:ArrayCollection = new ArrayCollection();
			protected function AddServiceItem():void
			{
				//Grid_Service
				var obj:Object = new Object();
				obj.ServiceItem = hlp_item.text;
				obj.Amount = Txt_ItemAmount.text;
				ac.addItem(obj);
				
				
			}
			
			
			protected function Sctrl_docRefreshHandler(event):void
			{
				
				FnClear();
				FnServiceClr();
				FnSettleClr();
				PageLoad();
			}
			
			protected function btn_TarPay_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(Direct1=="Direct")
				{
					Cash.enabled=true;
					CreditCard.enabled=true;
					Cheque.enabled=true;
					NEFT.enabled=true;
					CompanyInvoice.enabled=false;
					Cash2.enabled=true;
					CreditCard2.enabled=true;
					Cheque2.enabled=true;
					NEFT2.enabled=true;
					CompanyInvoice2.enabled=false;
					var Ac_Settle:ArrayCollection=new ArrayCollection();
					Ac_Settle=Grid_Settle.dataProvider as ArrayCollection;
					for(var k:int=0;k<Ac_Settle.length;k++)
					{
						if(Ac_Settle[k].BillType == "Tariff")
						{
							Txt_TariffLoad.text=Ac_Settle[k].OutStanding;
							Txt_TariffPayAmount.enabled=true;
						}
					}
					bdr_TariffPay1.visible=true;
				}
				if(BTC1=="Bill to Company (BTC)")
				{
					Cash.enabled=false;
					CreditCard.enabled=false;
					Cheque.enabled=false;
					NEFT.enabled=false;
					CompanyInvoice.enabled=true;
					Cash2.enabled=false;
					CreditCard2.enabled=false;
					Cheque2.enabled=false;
					NEFT2.enabled=false;
					CompanyInvoice2.enabled=true;
					var Ac_Settle:ArrayCollection=new ArrayCollection();
					Ac_Settle=Grid_Settle.dataProvider as ArrayCollection;
					for(var k:int=0;k<Ac_Settle.length;k++)
					{
						if(Ac_Settle[k].BillType == "Tariff")
						{
							Txt_TariffLoad.text=Ac_Settle[k].OutStanding;
							Txt_TariffPayAmount.text=Ac_Settle[k].OutStanding;
							Txt_TariffPayAmount.enabled=false;
							//txt_TariffOutstanding.text=Ac_Settle[k].OutStanding;
						}
					}
					bdr_TariffPay1.visible=true;
				}
				if(BTC1=="Bill to Client")
				{
					Cash.enabled=false;
					CreditCard.enabled=false;
					Cheque.enabled=false;
					NEFT.enabled=false;
					CompanyInvoice.enabled=true;
					Cash2.enabled=false;
					CreditCard2.enabled=false;
					Cheque2.enabled=false;
					NEFT2.enabled=false;
					CompanyInvoice2.enabled=true;
					var Ac_Settle:ArrayCollection=new ArrayCollection();
					Ac_Settle=Grid_Settle.dataProvider as ArrayCollection;
					for(var k:int=0;k<Ac_Settle.length;k++)
					{
						if(Ac_Settle[k].BillType == "Tariff")
						{
							Txt_TariffLoad.text=Ac_Settle[k].OutStanding;							
							Txt_TariffPayAmount.text=Ac_Settle[k].OutStanding;
							Txt_TariffPayAmount.enabled=false;
							//txt_TariffOutstanding.text=Ac_Settle[k].OutStanding;							
						}
					}
					bdr_TariffPay1.visible=true;
				}
				if(Direct.selected==true)
				{
					Cash.selected="";
					CreditCard.selected="";
					CompanyInvoice.selected="";
					Cheque.selected="";
					NEFT.selected="";
					
					Cash.enabled=true;
					CreditCard.enabled=true;
					CompanyInvoice.enabled=false;
					Cheque.enabled=true;
					NEFT.enabled=true;
					
					txt_TariffOutstanding.text="";
					Txt_TariffPayAmount.text="";
					txt_TariffOutstanding.enabled=true;
					Txt_TariffPayAmount.enabled=true;
				}
				else
				{
					Cash.selected="";
					CreditCard.selected="";
					CompanyInvoice.selected="";
					Cheque.selected="";
					NEFT.selected="";
					
					Cash.enabled=false;
					CreditCard.enabled=false;
					CompanyInvoice.enabled=true;
					Cheque.enabled=false;
					NEFT.enabled=false;
					
					
					txt_TariffOutstanding.enabled=false;
					Txt_TariffPayAmount.enabled=false;
				}
				
			}
			protected function FNClose1(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				bdr_TariffPay1.visible=false;
				bdr_ConPay1.visible=false;
				bdr_SerPay1.visible=false;
				//bdr_PaymentCredit.visible=false;
			}
			
			protected function FNClose2(event:MouseEvent):void
			{
				bdr_PaymentCredit.visible=false;
			}
			protected function FNClose4(event:MouseEvent):void
			{
				bdr_ServicePaymentCredit.visible=false;
			}
			protected function btn_SerPay_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var Ac_Settle:ArrayCollection=new ArrayCollection();
				Ac_Settle=Grid_Settle.dataProvider as ArrayCollection;
				for(var k:int=0;k<Ac_Settle.length;k++)
				{
					if(Ac_Settle[k].BillType == "Service")
					{
						Txt_ServiceLoad.text=Ac_Settle[k].OutStanding;
						
					}
				}
				bdr_SerPay1.visible=true;
			}
			
			protected function btn_ConPay_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var Ac_Settle:ArrayCollection=new ArrayCollection();
				Ac_Settle=Grid_Settle.dataProvider as ArrayCollection;
				for(var k:int=0;k<Ac_Settle.length;k++)
				{
					if(Ac_Settle[k].BillType == "Consolidate")
					{
						Txt_ConsolidateLoad.text=Ac_Settle[k].OutStanding;
						Txt_ConsolidatePayment.text=Ac_Settle[k].OutStanding;
					}
				}
				if(Direct.selected==true)
				{
					Cash2.selected="";
					CreditCard2.selected="";
					CompanyInvoice2.selected="";
					Cheque2.selected="";
					NEFT2.selected="";
					
					Cash2.enabled=true;
					CreditCard2.enabled=true;
					CompanyInvoice2.enabled=false;
					Cheque2.enabled=true;
					NEFT2.enabled=true;
					
					Txt_ConsolidatePayment.text="";
					Txt_ConsolidateOutStanding.text="";
					Txt_ConsolidateOutStanding.enabled=true;
					Txt_ConsolidatePayment.enabled=true;
					
				}
				else
				{
					Cash2.selected="";
					CreditCard2.selected="";
					CompanyInvoice2.selected="";
					Cheque2.selected="";
					NEFT2.selected="";
					
					Cash2.enabled=false;
					CreditCard2.enabled=false;
					CompanyInvoice2.enabled=true;
					Cheque2.enabled=false;
					NEFT2.enabled=false;
					
					
					Txt_ConsolidateOutStanding.enabled=false;
					Txt_ConsolidatePayment.enabled=false;
					
				}
				bdr_ConPay1.visible=true;
			}
			// add tariff Payment save 	(Cash,Card,Cheque,Companyinvoice,NEFT)		
			public 	var F4:String="";
			public 	var F5:String="";
			public 	var F6:String="";
			public 	var F7:String="";
			public 	var F8:String="";
			public 	var Mode:String="";
			//	public 	var Mode:String="";
			protected function AddTariffPayment():void
			{
				if(Intermediate.selected==true)
				{
					Mode="Tariff";
					
					var ErrStr:String="";var Flag:Boolean=true;
					
					if(Txt_TariffPayAmount.text=="")
					{
						if(Flag==true)
						{
							Txt_TariffPayAmount.setFocus();Flag=false;
						}
						ErrStr=ErrStr+"*  Amount is Required.\n";					
					}
					if(Txt_TariffPayAmount.text=="0")
					{
						if(Flag==true)
						{
							Txt_TariffPayAmount.setFocus();Flag=false;
						}
						ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
					}
					
					if(Cash.selected==true)
					{
						PaymentMode='Cash'
					}
					else if(CreditCard.selected==true)
					{
						PaymentMode='Card'
					}
					else if (Cheque.selected==true)
					{
						PaymentMode='Cheque'
					}
					else if(CompanyInvoice.selected==true)
					{
						PaymentMode='CompanyInvoice'
					}
					else if(NEFT.selected==true)
					{
						PaymentMode='NEFT'
					}
					else
					{   
						ErrStr=ErrStr+"* Select Payment Mode Option.\n";
					}		
					if(ErrStr!="")
					{
						alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
						return;					
					}
					if(radiogroup1.selectedValue=="Cash")
					{
						F4="Cash";
						var ErrStr:String="";var Flag:Boolean=true;
						
						if(Txt_TariffPayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						if(Txt_TariffPayAmount.text=="0")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
						}
						
						if(DT_TariffCashDate.text=="")
						{
							if(Flag==true)
							{
								DT_TariffCashDate.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Date is Required.\n";					
						}
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_TariffLoad.text);
						Txt_TariffLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_TariffPayAmount.text+".00")
						Txt_TariffPayAmount.text = LL.replace(",","");
//						if(Txt_TariffLoad.text == Txt_TariffPayAmount.text)
//						{
//							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"TariffIntermediate","","","",CheckInHdrId,0,0,0,0]);
//						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Tariff",PaymentMode:"Cash",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_Pname.text,
								Address:Txt_address.text,
								AmountPaid:Txt_TariffPayAmount.text,
								CashReceivedOn:DT_TariffCashDate.text,
								CashReceivedBy:ddl_CashReceivedby.selectedItem,
								Id:Id,OutStanding:txt_TariffOutstanding.text}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CashXml");
						useWeb("CheckOutPaymentCash","Save_CUSTOM",[GlobalXml,HdrXml]);
						
						
					}
					
					if(radiogroup1.selectedValue=="Card")
					{
						F5="Card";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_TariffPayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						if(Txt_TariffPayAmount.text=="0")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
						}
						
						
						if(Txt_PaymentCardName.text=="")
						{
							if(Flag==true)
							{
								Txt_PaymentCardName.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Name of the Credit Card Required.\n";					
						}
						
						if(Txt_PaymentCardNo.text=="")
						{
							if(Flag==true)
							{
								Txt_PaymentCardNo.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*   Card Number is Required.\n";					
						}
						
						
						if(Txt_PaymentAmountSwip.text=="")
						{
							if(Flag==true)
							{
								Txt_PaymentAmountSwip.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*   Amount Swiped is Required.\n";					
						}
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						var TL:String=NF_Two.format(Txt_TariffLoad.text);
						Txt_TariffLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_TariffPayAmount.text+".00")
						Txt_TariffPayAmount.text = LL.replace(",","");
//						if(Txt_TariffLoad.text == Txt_TariffPayAmount.text)
//						{
//							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"TariffIntermediate","","","",CheckInHdrId,0,0,0,0]);
//						}
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Tariff",PaymentMode:"Card",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_Pname.text,
								Address:Txt_address.text,
								AmountPaid:Txt_TariffPayAmount.text,
								CardDetails:Txt_PaymentCardDtl.text,CCBrand:ddl_PaymentCCBrand.selectedItem,
								NameoftheCard:Txt_PaymentCardName.text,CreditCardNo:Txt_PaymentCardNo.text,
								ExpiryOn:dte_PaymentExpirydate.text,ROC:Txt_PaymentRoc.text,
								SOCBatchCloseNo:Txt_PaymentSoc.text,AmountSwipedFor:Txt_PaymentAmountSwip.text,
								ExpiryMonth:Txt_TarCardDateMonth.text,ExpiryYear:Txt_TarCardDateYear.text,Id:Id,
								OutStanding:txt_TariffOutstanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CardXml");
						useWeb("CheckOutPaymentCard","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					
					
					
					if(radiogroup1.selectedValue=="Cheque")
					{
						F6="Cheque";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_TariffPayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						if(Txt_TariffPayAmount.text=="0")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
						}
						
						
						if(Txt_PaymentChecqNO.text=="")
						{
							if(Flag==true)
							{
								Txt_PaymentChecqNO.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Cheque Number is Required.\n";					
						}
						
						if(Txt_CheqBankname.text=="")
						{
							if(Flag==true)
							{
								Txt_CheqBankname.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Bank Name is Required.\n";					
						}
						
						
						//					if(Txt_TarCheqDateMonth.text=="")
						//					{
						//						if(Flag==true)
						//						{
						//							Txt_TarCheqDateMonth.setFocus();Flag=false;
						//						}
						//						ErrStr=ErrStr+"* Month is Required.\n";					
						//					}
						//					
						//					if(Txt_TarCheqDateYear.text=="")
						//					{
						//						if(Flag==true)
						//						{
						//							Txt_TarCheqDateYear.setFocus();Flag=false;
						//						}
						//						ErrStr=ErrStr+"* Year is Required.\n";					
						//					}
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_TariffLoad.text);
						Txt_TariffLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_TariffPayAmount.text+".00")
						Txt_TariffPayAmount.text = LL.replace(",","");
//						if(Txt_TariffLoad.text == Txt_TariffPayAmount.text)
//						{
//							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"TariffIntermediate","","","",CheckInHdrId,0,0,0,0]);
//						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Tariff",PaymentMode:"Cheque",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_Pname.text,
								Address:Txt_address.text,
								AmountPaid:Txt_TariffPayAmount.text,
								ChequeNumber:Txt_PaymentChecqNO.text,BankName:Txt_CheqBankname.text,DateIssued:dte_CheqDate.text,
								DateIssueMonth:0,DateIssueYear:0,Id:Id,
								OutStanding:txt_TariffOutstanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CheqXml");
						useWeb("CheckOutPaymentCheque","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					if(radiogroup1.selectedValue=="CompanyInvoice")
					{
						F7="CompanyInvoice";
						var ErrStr:String="";var Flag:Boolean=true;
						
						
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_TariffLoad.text);
						Txt_TariffLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_TariffPayAmount.text+".00")
						Txt_TariffPayAmount.text = LL.replace(",","");
						//					if(Txt_TariffLoad.text == Txt_TariffPayAmount.text)
						//					{
						//						useWeb("GuestCheckOut","Paid_CUSTOM",[GlobalXml,"PaidUpdate","",CheckInHdrId,0,0,0]);
						//					}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Tariff",PaymentMode:"CompanyInvoice",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_Pname.text,
								Address:Txt_address.text,
								AmountPaid:Txt_TariffPayAmount.text,
								Approver:Txt_CmpnyAppru.text,Requester:Txt_TariffCmpReq.text,
								EmailId:Txt_TariffCmpEmail.text,PhoneNo:Txt_TariffCmpPhone.text,
								Id:Id,FileLoad:FilePath.text,OutStanding:txt_TariffOutstanding.text
								
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CmpInXml");
						useWeb("CheckOutPaymentCompInvoice","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					if(radiogroup1.selectedValue=="NEFT")
					{
						F8="NEFT";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_TariffPayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						if(Txt_TariffPayAmount.text=="0")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
						}
						
						
						if(Txt_TariffNEFTRef.text=="")
						{
							if(Flag==true)
							{
								Txt_TariffNEFTRef.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Reference Number is Required.\n";					
						}
						
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_TariffLoad.text);
						Txt_TariffLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_TariffPayAmount.text+".00")
						Txt_TariffPayAmount.text = LL.replace(",","");
//						if(Txt_TariffLoad.text == Txt_TariffPayAmount.text)
//						{
//							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"TariffIntermediate","","","",CheckInHdrId,0,0,0,0]);
//						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Tariff",PaymentMode:"NEFT",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_Pname.text,
								Address:Txt_address.text,
								AmountPaid:Txt_TariffPayAmount.text,
								ReferenceNumber:Txt_TariffNEFTRef.text,DateofNEFT:dte_NEFTDdate.text,
								BankName:Txt_TariffNEFTBankName.text,DateNEFTMonth:0,
								DateNEFTYear:0,Id:Id,OutStanding:txt_TariffOutstanding.text
							}])
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"NEFTXml");
						useWeb("CheckOutPaymentNEFT","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
				}
				else  // Checkout option selected (below process)
				{
					Mode="Tariff";
					
					var ErrStr:String="";var Flag:Boolean=true;
					
					if(Txt_TariffPayAmount.text=="")
					{
						if(Flag==true)
						{
							Txt_TariffPayAmount.setFocus();Flag=false;
						}
						ErrStr=ErrStr+"*  Amount is Required.\n";					
					}
					if(Txt_TariffPayAmount.text=="0")
					{
						if(Flag==true)
						{
							Txt_TariffPayAmount.setFocus();Flag=false;
						}
						ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
					}
					
					if(Cash.selected==true)
					{
						PaymentMode='Cash'
					}
					else if(CreditCard.selected==true)
					{
						PaymentMode='Card'
					}
					else if (Cheque.selected==true)
					{
						PaymentMode='Cheque'
					}
					else if(CompanyInvoice.selected==true)
					{
						PaymentMode='CompanyInvoice'
					}
					else if(NEFT.selected==true)
					{
						PaymentMode='NEFT'
					}
					else
					{   
						ErrStr=ErrStr+"* Select Payment Mode Option.\n";
					}		
					if(ErrStr!="")
					{
						alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
						return;					
					}
					if(radiogroup1.selectedValue=="Cash")
					{
						F4="Cash";
						var ErrStr:String="";var Flag:Boolean=true;
						
						if(Txt_TariffPayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						if(Txt_TariffPayAmount.text=="0")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
						}
						
						if(DT_TariffCashDate.text=="")
						{
							if(Flag==true)
							{
								DT_TariffCashDate.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Date is Required.\n";					
						}
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_TariffLoad.text);
						Txt_TariffLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_TariffPayAmount.text+".00")
						Txt_TariffPayAmount.text = LL.replace(",","");
						if(Txt_TariffLoad.text == Txt_TariffPayAmount.text)
						{
							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"PaidUpdate","","","",CheckInHdrId,0,0,0,0]);
						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Tariff",PaymentMode:"Cash",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_Pname.text,
								Address:Txt_address.text,
								AmountPaid:Txt_TariffPayAmount.text,
								CashReceivedOn:DT_TariffCashDate.text,
								CashReceivedBy:ddl_CashReceivedby.selectedItem,
								Id:Id,OutStanding:txt_TariffOutstanding.text}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CashXml");
						useWeb("CheckOutPaymentCash","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					if(radiogroup1.selectedValue=="Card")
					{
						F5="Card";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_TariffPayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						if(Txt_TariffPayAmount.text=="0")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
						}
						
						
						if(Txt_PaymentCardName.text=="")
						{
							if(Flag==true)
							{
								Txt_PaymentCardName.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Name of the Credit Card Required.\n";					
						}
						
						if(Txt_PaymentCardNo.text=="")
						{
							if(Flag==true)
							{
								Txt_PaymentCardNo.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*   Card Number is Required.\n";					
						}
						
						
						if(Txt_PaymentAmountSwip.text=="")
						{
							if(Flag==true)
							{
								Txt_PaymentAmountSwip.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*   Amount Swiped is Required.\n";					
						}
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						var TL:String=NF_Two.format(Txt_TariffLoad.text);
						Txt_TariffLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_TariffPayAmount.text+".00")
						Txt_TariffPayAmount.text = LL.replace(",","");
						if(Txt_TariffLoad.text == Txt_TariffPayAmount.text)
						{
							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"PaidUpdate","","","",CheckInHdrId,0,0,0,0]);
						}
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Tariff",PaymentMode:"Card",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_Pname.text,
								Address:Txt_address.text,
								AmountPaid:Txt_TariffPayAmount.text,
								CardDetails:Txt_PaymentCardDtl.text,CCBrand:ddl_PaymentCCBrand.selectedItem,
								NameoftheCard:Txt_PaymentCardName.text,CreditCardNo:Txt_PaymentCardNo.text,
								ExpiryOn:dte_PaymentExpirydate.text,ROC:Txt_PaymentRoc.text,
								SOCBatchCloseNo:Txt_PaymentSoc.text,AmountSwipedFor:Txt_PaymentAmountSwip.text,
								ExpiryMonth:Txt_TarCardDateMonth.text,ExpiryYear:Txt_TarCardDateYear.text,Id:Id,
								OutStanding:txt_TariffOutstanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CardXml");
						useWeb("CheckOutPaymentCard","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					
					
					
					if(radiogroup1.selectedValue=="Cheque")
					{
						F6="Cheque";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_TariffPayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						if(Txt_TariffPayAmount.text=="0")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
						}
						
						
						if(Txt_PaymentChecqNO.text=="")
						{
							if(Flag==true)
							{
								Txt_PaymentChecqNO.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Cheque Number is Required.\n";					
						}
						
						if(Txt_CheqBankname.text=="")
						{
							if(Flag==true)
							{
								Txt_CheqBankname.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Bank Name is Required.\n";					
						}
						
						
						//					if(Txt_TarCheqDateMonth.text=="")
						//					{
						//						if(Flag==true)
						//						{
						//							Txt_TarCheqDateMonth.setFocus();Flag=false;
						//						}
						//						ErrStr=ErrStr+"* Month is Required.\n";					
						//					}
						//					
						//					if(Txt_TarCheqDateYear.text=="")
						//					{
						//						if(Flag==true)
						//						{
						//							Txt_TarCheqDateYear.setFocus();Flag=false;
						//						}
						//						ErrStr=ErrStr+"* Year is Required.\n";					
						//					}
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_TariffLoad.text);
						Txt_TariffLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_TariffPayAmount.text+".00")
						Txt_TariffPayAmount.text = LL.replace(",","");
						if(Txt_TariffLoad.text == Txt_TariffPayAmount.text)
						{
							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"PaidUpdate","","","",CheckInHdrId,0,0,0,0]);
						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Tariff",PaymentMode:"Cheque",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_Pname.text,
								Address:Txt_address.text,
								AmountPaid:Txt_TariffPayAmount.text,
								ChequeNumber:Txt_PaymentChecqNO.text,BankName:Txt_CheqBankname.text,DateIssued:dte_CheqDate.text,
								DateIssueMonth:0,DateIssueYear:0,Id:Id,
								OutStanding:txt_TariffOutstanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CheqXml");
						useWeb("CheckOutPaymentCheque","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					if(radiogroup1.selectedValue=="CompanyInvoice")
					{
						F7="CompanyInvoice";
						var ErrStr:String="";var Flag:Boolean=true;
						
						
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_TariffLoad.text);
						Txt_TariffLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_TariffPayAmount.text+".00")
						Txt_TariffPayAmount.text = LL.replace(",","");
						//					if(Txt_TariffLoad.text == Txt_TariffPayAmount.text)
						//					{
						//						useWeb("GuestCheckOut","Paid_CUSTOM",[GlobalXml,"PaidUpdate","",CheckInHdrId,0,0,0]);
						//					}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Tariff",PaymentMode:"CompanyInvoice",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_Pname.text,
								Address:Txt_address.text,
								AmountPaid:Txt_TariffPayAmount.text,
								Approver:Txt_CmpnyAppru.text,Requester:Txt_TariffCmpReq.text,
								EmailId:Txt_TariffCmpEmail.text,PhoneNo:Txt_TariffCmpPhone.text,
								Id:Id,FileLoad:FilePath.text,OutStanding:txt_TariffOutstanding.text
								
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CmpInXml");
						useWeb("CheckOutPaymentCompInvoice","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					if(radiogroup1.selectedValue=="NEFT")
					{
						F8="NEFT";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_TariffPayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						if(Txt_TariffPayAmount.text=="0")
						{
							if(Flag==true)
							{
								Txt_TariffPayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
						}
						
						
						if(Txt_TariffNEFTRef.text=="")
						{
							if(Flag==true)
							{
								Txt_TariffNEFTRef.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Reference Number is Required.\n";					
						}
						
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_TariffLoad.text);
						Txt_TariffLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_TariffPayAmount.text+".00")
						Txt_TariffPayAmount.text = LL.replace(",","");
						if(Txt_TariffLoad.text == Txt_TariffPayAmount.text)
						{
							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"PaidUpdate","","","",CheckInHdrId,0,0,0,0]);
						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Tariff",PaymentMode:"NEFT",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_Pname.text,
								Address:Txt_address.text,
								AmountPaid:Txt_TariffPayAmount.text,
								ReferenceNumber:Txt_TariffNEFTRef.text,DateofNEFT:dte_NEFTDdate.text,
								BankName:Txt_TariffNEFTBankName.text,DateNEFTMonth:0,
								DateNEFTYear:0,Id:Id,OutStanding:txt_TariffOutstanding.text
							}])
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"NEFTXml");
						useWeb("CheckOutPaymentNEFT","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
				}
				
			}
			
			// add service payment save (Cash,Card,Cheque,Companyinvoice,NEFT)
			
			protected function AddServicePayment():void
			{
				if(Intermediate.selected==true)
				{
					Mode="Service";
					var ErrStr:String="";var Flag:Boolean=true;
					if(Txt_ServicePayAmount.text=="")
					{
						if(Flag==true)
						{
							Txt_ServicePayAmount.setFocus();Flag=false;
						}
						ErrStr=ErrStr+"*  Amount is Required.\n";					
					}
					if(Txt_ServicePayAmount.text=="0")
					{
						if(Flag==true)
						{
							Txt_ServicePayAmount.setFocus();Flag=false;
						}
						ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
					}
					if(Cash1.selected==true)
					{
						PaymentMode='Cash'
					}
					else if(CreditCard1.selected==true)
					{
						PaymentMode='Card'
					}
					else if (Cheque1.selected==true)
					{
						PaymentMode='Cheque'
					}
					else if(CompanyInvoice1.selected==true)
					{
						PaymentMode='CompanyInvoice'
					}
					else if(NEFT1.selected==true)
					{
						PaymentMode='NEFT'
					}
					else
					{   
						ErrStr=ErrStr+"* Select Payment Mode Option.\n";
					}
					if(ErrStr!="")
					{
						alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
						return;					
					}
					// TODO Auto-generated method stub
					if(radiogroup1.selectedValue=="Cash")
					{
						F4="Cash";
						
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ServicePayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_ServicePayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						if(Txt_ServicePayAmount.text=="0")
						{
							if(Flag==true)
							{
								Txt_ServicePayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
						}
						
						if(Txt_ServicePayAmount.text=="0")
						{
							if(Flag==true)
							{
								Txt_ServicePayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
						}
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_ServiceLoad.text);
						Txt_ServiceLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_ServicePayAmount.text+".00")
						Txt_ServicePayAmount.text = LL.replace(",","");
//						if(Txt_ServiceLoad.text == Txt_ServicePayAmount.text)
//						{
//							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceIntermediate","","","",CheckInHdrId,0,0,0,0]);
//						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Service",PaymentMode:"Cash",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_SName.text,
								Address:Txt_SAddress.text,
								AmountPaid:Txt_ServicePayAmount.text,
								CashReceivedOn:DT_SerpayCashdate.text,
								CashReceivedBy:ddl_ServiPayCashRecBy.selectedItem,
								Id:Id,OutStanding:Txt_ServiceOutStanding.text}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CashXml");
						useWeb("CheckOutPaymentCash","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					if(radiogroup1.selectedValue=="Card")
					{
						F5="Card";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ServicePayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_ServicePayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						
						if(Txt_ServicePaymentCardName.text=="")
						{
							if(Flag==true)
							{
								Txt_ServicePaymentCardName.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Name of the Credit Card Required.\n";					
						}
						
						if(Txt_ServicePaymentCardNo.text=="")
						{
							if(Flag==true)
							{
								Txt_ServicePaymentCardNo.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*   Card Number is Required.\n";					
						}
						
						
						//					if(Txt_ServicePaymentRoc.text=="")
						//					{
						//						if(Flag==true)
						//						{
						//							Txt_ServicePaymentRoc.setFocus();Flag=false;
						//						}
						//						ErrStr=ErrStr+"*   ROC is Required.\n";					
						//					}
						
						if(Txt_ServicePaymentAmountSwip.text=="")
						{
							if(Flag==true)
							{
								Txt_ServicePaymentAmountSwip.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*   Amount Swiped is Required.\n";					
						}
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_ServiceLoad.text);
						Txt_ServiceLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_ServicePayAmount.text+".00")
						Txt_ServicePayAmount.text = LL.replace(",","");
//						if(Txt_ServiceLoad.text == Txt_ServicePayAmount.text)
//						{
//							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceIntermediate","","","",CheckInHdrId,0,0,0,0]);
//						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Service",PaymentMode:"Card",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_SName.text,
								Address:Txt_SAddress.text,
								AmountPaid:Txt_ServicePayAmount.text,
								CardDetails:Txt_ServicePaymentCardDtl.text,CCBrand:ddl_ServicePaymentCCBrand.selectedItem,
								NameoftheCard:Txt_ServicePaymentCardName.text,CreditCardNo:Txt_ServicePaymentCardNo.text,
								ExpiryOn:dte_ServicePaymentExpirydate.text,ROC:Txt_ServicePaymentRoc.text,
								SOCBatchCloseNo:Txt_ServicePaymentSoc.text,AmountSwipedFor:Txt_ServicePaymentAmountSwip.text,
								ExpiryMonth:Txt_SerCardExpirymonth.text,ExpiryYear:Txt_SerCardExpiryYear.text,Id:Id,
								OutStanding:Txt_ServiceOutStanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CardXml");
						useWeb("CheckOutPaymentCard","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					
					
					if(radiogroup1.selectedValue=="Cheque")
					{
						F6="Cheque";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ServicePayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_ServicePayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						
						
						//					if(Txt_ServicePaymentChecqNO.text=="")
						//					{
						//						if(Flag==true)
						//						{
						//							Txt_ServicePaymentChecqNO.setFocus();Flag=false;
						//						}
						//						ErrStr=ErrStr+"*  Cheque Number is Required.\n";					
						//					}
						//					
						//					if(Txt_ServicePayCheqBankname.text=="")
						//					{
						//						if(Flag==true)
						//						{
						//							Txt_ServicePayCheqBankname.setFocus();Flag=false;
						//						}
						//						ErrStr=ErrStr+"*  Bank Name is Required.\n";					
						//					}
						
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_ServiceLoad.text);
						Txt_ServiceLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_ServicePayAmount.text+".00")
						Txt_ServicePayAmount.text = LL.replace(",","");
//						if(Txt_ServiceLoad.text == Txt_ServicePayAmount.text)
//						{
//							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceIntermediate","","","",CheckInHdrId,0,0,0,0]);
//						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Service",PaymentMode:"Cheque",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_SName.text,
								Address:Txt_SAddress.text,
								AmountPaid:Txt_ServicePayAmount.text,
								ChequeNumber:Txt_ServicePaymentChecqNO.text,BankName:Txt_ServicePayCheqBankname.text,
								DateIssued:dte_ServiceCheqDate.text,DateIssueMonth:0,
								DateIssueYear:0,Id:Id,OutStanding:Txt_ServiceOutStanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CheqXml");
						useWeb("CheckOutPaymentCheque","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					if(radiogroup1.selectedValue=="CompanyInvoice")
					{
						F7="CompanyInvoice";
						var ErrStr:String="";var Flag:Boolean=true;
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_ServiceLoad.text);
						Txt_ServiceLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_ServicePayAmount.text+".00")
						Txt_ServicePayAmount.text = LL.replace(",","");
						//					if(Txt_ServiceLoad.text == Txt_ServicePayAmount.text)
						//					{
						//						useWeb("GuestCheckOut","PaidSer_CUSTOM",[GlobalXml,"ServiceUpdate","",CheckInHdrId,0,0,0]);
						//					}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Service",PaymentMode:"CompanyInvoice",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_SName.text,
								Address:Txt_SAddress.text,
								AmountPaid:Txt_ServicePayAmount.text,
								Approver:Txt_ServiceCmpnyAppru.text,Requester:Txt_servicePayCmpReq.text,
								EmailId:Txt_ServicePayCmpEmail.text,PhoneNo:Txt_ServicePayCmpPhone.text,
								Id:Id,FileLoad:FilePath1.text,OutStanding:Txt_ServiceOutStanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CmpInXml");
						useWeb("CheckOutPaymentCompInvoice","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					if(radiogroup1.selectedValue=="NEFT")
					{
						F8="NEFT";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ServicePayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_ServicePayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						
						
						if(Txt_ServiceNEFTRef.text=="")
						{
							if(Flag==true)
							{
								Txt_ServiceNEFTRef.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Reference Number is Required.\n";					
						}
						
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_ServiceLoad.text);
						Txt_ServiceLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_ServicePayAmount.text+".00")
						Txt_ServicePayAmount.text = LL.replace(",","");
//						if(Txt_ServiceLoad.text == Txt_ServicePayAmount.text)
//						{
//							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceIntermediate","","","",CheckInHdrId,0,0,0,0]);
//						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Service",PaymentMode:"NEFT",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_SName.text,
								Address:Txt_SAddress.text,
								AmountPaid:Txt_ServicePayAmount.text,
								ReferenceNumber:Txt_ServiceNEFTRef.text,DateofNEFT:dte_ServicePayNEFTDdate.text,
								BankName:Txt_SrvicePayBankName.text,DateNEFTMonth:0,
								DateNEFTYear:0,Id:Id,OutStanding:Txt_ServiceOutStanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"NEFTXml");
						useWeb("CheckOutPaymentNEFT","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
				}
				else // Checout option selected (below process)
				{
					Mode="Service";
					var ErrStr:String="";var Flag:Boolean=true;
					if(Txt_ServicePayAmount.text=="")
					{
						if(Flag==true)
						{
							Txt_ServicePayAmount.setFocus();Flag=false;
						}
						ErrStr=ErrStr+"*  Amount is Required.\n";					
					}
					if(Txt_ServicePayAmount.text=="0")
					{
						if(Flag==true)
						{
							Txt_ServicePayAmount.setFocus();Flag=false;
						}
						ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
					}
					if(Cash1.selected==true)
					{
						PaymentMode='Cash'
					}
					else if(CreditCard1.selected==true)
					{
						PaymentMode='Card'
					}
					else if (Cheque1.selected==true)
					{
						PaymentMode='Cheque'
					}
					else if(CompanyInvoice1.selected==true)
					{
						PaymentMode='CompanyInvoice'
					}
					else if(NEFT1.selected==true)
					{
						PaymentMode='NEFT'
					}
					else
					{   
						ErrStr=ErrStr+"* Select Payment Mode Option.\n";
					}
					if(ErrStr!="")
					{
						alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
						return;					
					}
					// TODO Auto-generated method stub
					if(radiogroup1.selectedValue=="Cash")
					{
						F4="Cash";
						
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ServicePayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_ServicePayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						if(Txt_ServicePayAmount.text=="0")
						{
							if(Flag==true)
							{
								Txt_ServicePayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
						}
						
						if(Txt_ServicePayAmount.text=="0")
						{
							if(Flag==true)
							{
								Txt_ServicePayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
						}
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_ServiceLoad.text);
						Txt_ServiceLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_ServicePayAmount.text+".00")
						Txt_ServicePayAmount.text = LL.replace(",","");
						if(Txt_ServiceLoad.text == Txt_ServicePayAmount.text)
						{
							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceUpdate","","","",CheckInHdrId,0,0,0,0]);
						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Service",PaymentMode:"Cash",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_SName.text,
								Address:Txt_SAddress.text,
								AmountPaid:Txt_ServicePayAmount.text,
								CashReceivedOn:DT_SerpayCashdate.text,
								CashReceivedBy:ddl_ServiPayCashRecBy.selectedItem,
								Id:Id,OutStanding:Txt_ServiceOutStanding.text}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CashXml");
						useWeb("CheckOutPaymentCash","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					if(radiogroup1.selectedValue=="Card")
					{
						F5="Card";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ServicePayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_ServicePayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						
						if(Txt_ServicePaymentCardName.text=="")
						{
							if(Flag==true)
							{
								Txt_ServicePaymentCardName.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Name of the Credit Card Required.\n";					
						}
						
						if(Txt_ServicePaymentCardNo.text=="")
						{
							if(Flag==true)
							{
								Txt_ServicePaymentCardNo.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*   Card Number is Required.\n";					
						}
						
						
						//					if(Txt_ServicePaymentRoc.text=="")
						//					{
						//						if(Flag==true)
						//						{
						//							Txt_ServicePaymentRoc.setFocus();Flag=false;
						//						}
						//						ErrStr=ErrStr+"*   ROC is Required.\n";					
						//					}
						
						if(Txt_ServicePaymentAmountSwip.text=="")
						{
							if(Flag==true)
							{
								Txt_ServicePaymentAmountSwip.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*   Amount Swiped is Required.\n";					
						}
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_ServiceLoad.text);
						Txt_ServiceLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_ServicePayAmount.text+".00")
						Txt_ServicePayAmount.text = LL.replace(",","");
						if(Txt_ServiceLoad.text == Txt_ServicePayAmount.text)
						{
							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceUpdate","","","",CheckInHdrId,0,0,0,0]);
						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Service",PaymentMode:"Card",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_SName.text,
								Address:Txt_SAddress.text,
								AmountPaid:Txt_ServicePayAmount.text,
								CardDetails:Txt_ServicePaymentCardDtl.text,CCBrand:ddl_ServicePaymentCCBrand.selectedItem,
								NameoftheCard:Txt_ServicePaymentCardName.text,CreditCardNo:Txt_ServicePaymentCardNo.text,
								ExpiryOn:dte_ServicePaymentExpirydate.text,ROC:Txt_ServicePaymentRoc.text,
								SOCBatchCloseNo:Txt_ServicePaymentSoc.text,AmountSwipedFor:Txt_ServicePaymentAmountSwip.text,
								ExpiryMonth:Txt_SerCardExpirymonth.text,ExpiryYear:Txt_SerCardExpiryYear.text,Id:Id,
								OutStanding:Txt_ServiceOutStanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CardXml");
						useWeb("CheckOutPaymentCard","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					
					
					if(radiogroup1.selectedValue=="Cheque")
					{
						F6="Cheque";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ServicePayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_ServicePayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						
						
						//					if(Txt_ServicePaymentChecqNO.text=="")
						//					{
						//						if(Flag==true)
						//						{
						//							Txt_ServicePaymentChecqNO.setFocus();Flag=false;
						//						}
						//						ErrStr=ErrStr+"*  Cheque Number is Required.\n";					
						//					}
						//					
						//					if(Txt_ServicePayCheqBankname.text=="")
						//					{
						//						if(Flag==true)
						//						{
						//							Txt_ServicePayCheqBankname.setFocus();Flag=false;
						//						}
						//						ErrStr=ErrStr+"*  Bank Name is Required.\n";					
						//					}
						
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_ServiceLoad.text);
						Txt_ServiceLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_ServicePayAmount.text+".00")
						Txt_ServicePayAmount.text = LL.replace(",","");
						if(Txt_ServiceLoad.text == Txt_ServicePayAmount.text)
						{
							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceUpdate","","","",CheckInHdrId,0,0,0,0]);
						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Service",PaymentMode:"Cheque",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_SName.text,
								Address:Txt_SAddress.text,
								AmountPaid:Txt_ServicePayAmount.text,
								ChequeNumber:Txt_ServicePaymentChecqNO.text,BankName:Txt_ServicePayCheqBankname.text,
								DateIssued:dte_ServiceCheqDate.text,DateIssueMonth:0,
								DateIssueYear:0,Id:Id,OutStanding:Txt_ServiceOutStanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CheqXml");
						useWeb("CheckOutPaymentCheque","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					if(radiogroup1.selectedValue=="CompanyInvoice")
					{
						F7="CompanyInvoice";
						var ErrStr:String="";var Flag:Boolean=true;
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_ServiceLoad.text);
						Txt_ServiceLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_ServicePayAmount.text+".00")
						Txt_ServicePayAmount.text = LL.replace(",","");
						//					if(Txt_ServiceLoad.text == Txt_ServicePayAmount.text)
						//					{
						//						useWeb("GuestCheckOut","PaidSer_CUSTOM",[GlobalXml,"ServiceUpdate","",CheckInHdrId,0,0,0]);
						//					}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Service",PaymentMode:"CompanyInvoice",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_SName.text,
								Address:Txt_SAddress.text,
								AmountPaid:Txt_ServicePayAmount.text,
								Approver:Txt_ServiceCmpnyAppru.text,Requester:Txt_servicePayCmpReq.text,
								EmailId:Txt_ServicePayCmpEmail.text,PhoneNo:Txt_ServicePayCmpPhone.text,
								Id:Id,FileLoad:FilePath1.text,OutStanding:Txt_ServiceOutStanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CmpInXml");
						useWeb("CheckOutPaymentCompInvoice","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					if(radiogroup1.selectedValue=="NEFT")
					{
						F8="NEFT";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ServicePayAmount.text=="")
						{
							if(Flag==true)
							{
								Txt_ServicePayAmount.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						
						
						if(Txt_ServiceNEFTRef.text=="")
						{
							if(Flag==true)
							{
								Txt_ServiceNEFTRef.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Reference Number is Required.\n";					
						}
						
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						
						var TL:String=NF_Two.format(Txt_ServiceLoad.text);
						Txt_ServiceLoad.text=TL.replace(",","");
						var LL:String=NF_Two.format(Txt_ServicePayAmount.text+".00")
						Txt_ServicePayAmount.text = LL.replace(",","");
						if(Txt_ServiceLoad.text == Txt_ServicePayAmount.text)
						{
							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceUpdate","","","",CheckInHdrId,0,0,0,0]);
						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Service",PaymentMode:"NEFT",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_SName.text,
								Address:Txt_SAddress.text,
								AmountPaid:Txt_ServicePayAmount.text,
								ReferenceNumber:Txt_ServiceNEFTRef.text,DateofNEFT:dte_ServicePayNEFTDdate.text,
								BankName:Txt_SrvicePayBankName.text,DateNEFTMonth:0,
								DateNEFTYear:0,Id:Id,OutStanding:Txt_ServiceOutStanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"NEFTXml");
						useWeb("CheckOutPaymentNEFT","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
				}
				
			}
			// add consolidate save (Cash,Card,Cheque,Companyinvoice,NEFT)
			protected function AddConsolidatePayment():void
			{
				
				if(Intermediate.selected==true)
				{
					Mode="Consolidated"
					var ErrStr:String="";var Flag:Boolean=true;
					if(Txt_ConsolidatePayment.text=="")
					{
						if(Flag==true)
						{
							Txt_ConsolidatePayment.setFocus();Flag=false;
						}
						ErrStr=ErrStr+"*  Amount is Required.\n";					
					}
					if(Txt_ConsolidatePayment.text=="0")
					{
						if(Flag==true)
						{
							Txt_ConsolidatePayment.setFocus();Flag=false;
						}
						ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
					}
					if(Cash2.selected==true)
					{
						PaymentMode='Cash'
					}
					else if(CreditCard2.selected==true)
					{
						PaymentMode='Card'
					}
					else if (Cheque2.selected==true)
					{
						PaymentMode='Cheque'
					}
					else if(CompanyInvoice2.selected==true)
					{
						PaymentMode='CompanyInvoice'
					}
					else if(NEFT2.selected==true)
					{
						PaymentMode='NEFT'
					}
					else
					{   
						ErrStr=ErrStr+"* Select Payment Mode Option.\n";
					}
					if(ErrStr!="")
					{
						alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
						return;					
					}
					
					// TODO Auto-generated method stub
					if(radiogroup1.selectedValue=="Cash")
					{
						F4="Cash";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ConsolidatePayment.text=="")
						{
							if(Flag==true)
							{
								Txt_ConsolidatePayment.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						
						if(DT_ConPayCashDate.text=="")
						{
							if(Flag==true)
							{
								DT_ConPayCashDate.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Date is Required.\n";					
						}
						
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						var TC:String=NF_Two.format(Txt_ConsolidateLoad.text);
						Txt_ConsolidateLoad.text=TC.replace(",","");
						var LC:String=NF_Two.format(Txt_ConsolidatePayment.text+".00")
						Txt_ConsolidatePayment.text = LC.replace(",","");
//						if(Txt_ConsolidateLoad.text == Txt_ConsolidatePayment.text)
//						{
//							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"TariffIntermediate","","","",CheckInHdrId,0,0,0,0]);
//							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceIntermediate","","","",CheckInHdrId,0,0,0,0]);
//							
//						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Consolidate",PaymentMode:"Cash",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_CName.text,
								Address:Txt_CAddress.text,
								AmountPaid:Txt_ConsolidatePayment.text,
								CashReceivedOn:DT_ConPayCashDate.text,
								CashReceivedBy:ddl_ConsoPayCashRecBy.selectedItem,
								Id:Id,FileLoad:FilePath2.text,OutStanding:Txt_ConsolidateOutStanding.text}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CashXml");
						useWeb("CheckOutPaymentCash","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					if(radiogroup1.selectedValue=="Card")
					{
						F5="Card";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ConsolidatePayment.text=="")
						{
							if(Flag==true)
							{
								Txt_ConsolidatePayment.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						
						
						if(Txt_ConPaymentCardName.text=="")
						{
							if(Flag==true)
							{
								Txt_ConPaymentCardName.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Name of the Credit Card Required.\n";					
						}
						
						if(Txt_ConPaymentCardNo.text=="")
						{
							if(Flag==true)
							{
								Txt_ConPaymentCardNo.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*   Card Number is Required.\n";					
						}
						
						
						if(Txt_ConPaymentAmountSwip.text=="")
						{
							if(Flag==true)
							{
								Txt_ConPaymentAmountSwip.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*   Amount Swiped is Required.\n";					
						}
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						var TC:String=NF_Two.format(Txt_ConsolidateLoad.text);
						Txt_ConsolidateLoad.text=TC.replace(",","");
						var LC:String=NF_Two.format(Txt_ConsolidatePayment.text+".00")
						Txt_ConsolidatePayment.text = LC.replace(",","");
//						if(Txt_ConsolidateLoad.text == Txt_ConsolidatePayment.text)
//						{
//							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"TariffIntermediate","","","",CheckInHdrId,0,0,0,0]);
//							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceIntermediate","","","",CheckInHdrId,0,0,0,0]);
//						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Consolidate",PaymentMode:"Card",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_CName.text,
								Address:Txt_CAddress.text,
								AmountPaid:Txt_ConsolidatePayment.text,
								CardDetails:Txt_ConPaymentCardDtl.text,CCBrand:ddl_ConPaymentCCBrand.selectedItem,
								NameoftheCard:Txt_ConPaymentCardName.text,CreditCardNo:Txt_ConPaymentCardNo.text,
								ExpiryOn:dte_ConPaymentExpirydate.text,ROC:Txt_ConPaymentRoc.text,
								SOCBatchCloseNo:Txt_ConPaymentSoc.text,AmountSwipedFor:Txt_ConPaymentAmountSwip.text,
								ExpiryMonth:Txt_ConExpiryMonth.text,ExpiryYear:Txt_ConExpiryYear.text,Id:Id,
								OutStanding:Txt_ConsolidateOutStanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CardXml");
						useWeb("CheckOutPaymentCard","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					
					
					if(radiogroup1.selectedValue=="Cheque")
					{
						F6="Cheque";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ConsolidatePayment.text=="")
						{
							if(Flag==true)
							{
								Txt_ConsolidatePayment.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						
						
						if(Txt_ConPaymentChecqNO.text=="")
						{
							if(Flag==true)
							{
								Txt_ConPaymentChecqNO.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Cheque Number is Required.\n";					
						}
						
						if(Txt_ConPayCheqBankname.text=="")
						{
							if(Flag==true)
							{
								Txt_ConPayCheqBankname.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Bank Name is Required.\n";					
						}
						
						
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						var TC:String=NF_Two.format(Txt_ConsolidateLoad.text);
						Txt_ConsolidateLoad.text=TC.replace(",","");
						var LC:String=NF_Two.format(Txt_ConsolidatePayment.text+".00")
						Txt_ConsolidatePayment.text = LC.replace(",","");
//						if(Txt_ConsolidateLoad.text == Txt_ConsolidatePayment.text)
//						{
//							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"TariffIntermediate","","","",CheckInHdrId,0,0,0,0]);
//							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceIntermediate","","","",CheckInHdrId,0,0,0,0]);
//						}
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Consolidate",PaymentMode:"Cheque",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_CName.text,
								Address:Txt_CAddress.text,
								AmountPaid:Txt_ConsolidatePayment.text,
								ChequeNumber:Txt_ConPaymentChecqNO.text,BankName:Txt_ConPayCheqBankname.text,
								DateIssued:dte_ConCheqDate.text,DateIssueMonth:0,
								DateIssueYear:0,Id:Id,OutStanding:Txt_ConsolidateOutStanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CheqXml");
						useWeb("CheckOutPaymentCheque","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					if(radiogroup1.selectedValue=="CompanyInvoice")
					{
						F7="CompanyInvoice";
						var ErrStr:String="";var Flag:Boolean=true;
						
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						var TC:String=NF_Two.format(Txt_ConsolidateLoad.text);
						Txt_ConsolidateLoad.text=TC.replace(",","");
						var LC:String=NF_Two.format(Txt_ConsolidatePayment.text+".00")
						Txt_ConsolidatePayment.text = LC.replace(",","");
						//					if(Txt_ConsolidateLoad.text == Txt_ConsolidatePayment.text)
						//					{
						//						useWeb("GuestCheckOut","Paid_CUSTOM",[GlobalXml,"PaidUpdate","",CheckInHdrId,0,0,0]);
						//						useWeb("GuestCheckOut","PaidSer_CUSTOM",[GlobalXml,"ServiceUpdate","",CheckInHdrId,0,0,0]);
						//					}
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Consolidate",PaymentMode:"CompanyInvoice",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_CName.text,
								Address:Txt_CAddress.text,
								AmountPaid:Txt_ConsolidatePayment.text,
								Approver:Txt_ConCmpnyAppru.text,Requester:Txt_ConPayCmpReq.text,
								EmailId:Txt_ConPayCmpEmail.text,PhoneNo:Txt_ConPayCmpPhone.text,Id:Id,
								OutStanding:Txt_ConsolidateOutStanding.text,FileLoad:FilePath2.text
								
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CmpInXml");
						useWeb("CheckOutPaymentCompInvoice","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					if(radiogroup1.selectedValue=="NEFT")
					{
						F8="NEFT";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ConsolidatePayment.text=="")
						{
							if(Flag==true)
							{
								Txt_ConsolidatePayment.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						
						
						if(Txt_ConNEFTRef.text=="")
						{
							if(Flag==true)
							{
								Txt_ConNEFTRef.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Reference Number is Required.\n";					
						}
						
						//					if(dte_ConNEFTDdate.text=="")
						//					{
						//						if(Flag==true)
						//						{
						//							dte_ConNEFTDdate.setFocus();Flag=false;
						//						}
						//						ErrStr=ErrStr+"*  Date Of NEFT is Required.\n";					
						//					}
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						var TC:String=NF_Two.format(Txt_ConsolidateLoad.text);
						Txt_ConsolidateLoad.text=TC.replace(",","");
						var LC:String=NF_Two.format(Txt_ConsolidatePayment.text+".00")
						Txt_ConsolidatePayment.text = LC.replace(",","");
//						if(Txt_ConsolidateLoad.text == Txt_ConsolidatePayment.text)
//						{
//							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"PaiTariffIntermediatedUpdate","","","",CheckInHdrId,0,0,0,0]);
//							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceIntermediate","","","",CheckInHdrId,0,0,0,0]);
//						}
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Consolidate",PaymentMode:"NEFT",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_CName.text,
								Address:Txt_CAddress.text,
								AmountPaid:Txt_ConsolidatePayment.text,
								ReferenceNumber:Txt_ConNEFTRef.text,DateofNEFT:dte_ConNEFTDdate.text,
								BankName:Txt_ConNEFTBankName.text,Id:Id,
								DateNEFTMonth:0,DateNEFTYear:0,
								OutStanding:Txt_ConsolidateOutStanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"NEFTXml");
						useWeb("CheckOutPaymentNEFT","Save_CUSTOM",[GlobalXml,HdrXml]);
					}

				}
				else // Checkout Option selected (below process)
				{
					Mode="Consolidated"
					var ErrStr:String="";var Flag:Boolean=true;
					if(Txt_ConsolidatePayment.text=="")
					{
						if(Flag==true)
						{
							Txt_ConsolidatePayment.setFocus();Flag=false;
						}
						ErrStr=ErrStr+"*  Amount is Required.\n";					
					}
					if(Txt_ConsolidatePayment.text=="0")
					{
						if(Flag==true)
						{
							Txt_ConsolidatePayment.setFocus();Flag=false;
						}
						ErrStr=ErrStr+"*  Amount Should not be zero.\n";					
					}
					if(Cash2.selected==true)
					{
						PaymentMode='Cash'
					}
					else if(CreditCard2.selected==true)
					{
						PaymentMode='Card'
					}
					else if (Cheque2.selected==true)
					{
						PaymentMode='Cheque'
					}
					else if(CompanyInvoice2.selected==true)
					{
						PaymentMode='CompanyInvoice'
					}
					else if(NEFT2.selected==true)
					{
						PaymentMode='NEFT'
					}
					else
					{   
						ErrStr=ErrStr+"* Select Payment Mode Option.\n";
					}
					if(ErrStr!="")
					{
						alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
						return;					
					}
					
					// TODO Auto-generated method stub
					if(radiogroup1.selectedValue=="Cash")
					{
						F4="Cash";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ConsolidatePayment.text=="")
						{
							if(Flag==true)
							{
								Txt_ConsolidatePayment.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						
						if(DT_ConPayCashDate.text=="")
						{
							if(Flag==true)
							{
								DT_ConPayCashDate.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Date is Required.\n";					
						}
						
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						var TC:String=NF_Two.format(Txt_ConsolidateLoad.text);
						Txt_ConsolidateLoad.text=TC.replace(",","");
						var LC:String=NF_Two.format(Txt_ConsolidatePayment.text+".00")
						Txt_ConsolidatePayment.text = LC.replace(",","");
						if(Txt_ConsolidateLoad.text == Txt_ConsolidatePayment.text)
						{
							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"PaidUpdate","","","",CheckInHdrId,0,0,0,0]);
							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceUpdate","","","",CheckInHdrId,0,0,0,0]);
							
						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Consolidate",PaymentMode:"Cash",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_CName.text,
								Address:Txt_CAddress.text,
								AmountPaid:Txt_ConsolidatePayment.text,
								CashReceivedOn:DT_ConPayCashDate.text,
								CashReceivedBy:ddl_ConsoPayCashRecBy.selectedItem,
								Id:Id,FileLoad:FilePath2.text,OutStanding:Txt_ConsolidateOutStanding.text}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CashXml");
						useWeb("CheckOutPaymentCash","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					if(radiogroup1.selectedValue=="Card")
					{
						F5="Card";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ConsolidatePayment.text=="")
						{
							if(Flag==true)
							{
								Txt_ConsolidatePayment.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						
						
						if(Txt_ConPaymentCardName.text=="")
						{
							if(Flag==true)
							{
								Txt_ConPaymentCardName.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Name of the Credit Card Required.\n";					
						}
						
						if(Txt_ConPaymentCardNo.text=="")
						{
							if(Flag==true)
							{
								Txt_ConPaymentCardNo.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*   Card Number is Required.\n";					
						}
						
						
						if(Txt_ConPaymentAmountSwip.text=="")
						{
							if(Flag==true)
							{
								Txt_ConPaymentAmountSwip.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*   Amount Swiped is Required.\n";					
						}
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						var TC:String=NF_Two.format(Txt_ConsolidateLoad.text);
						Txt_ConsolidateLoad.text=TC.replace(",","");
						var LC:String=NF_Two.format(Txt_ConsolidatePayment.text+".00")
						Txt_ConsolidatePayment.text = LC.replace(",","");
						if(Txt_ConsolidateLoad.text == Txt_ConsolidatePayment.text)
						{
							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"PaidUpdate","","","",CheckInHdrId,0,0,0,0]);
							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceUpdate","","","",CheckInHdrId,0,0,0,0]);
						}
						
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Consolidate",PaymentMode:"Card",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_CName.text,
								Address:Txt_CAddress.text,
								AmountPaid:Txt_ConsolidatePayment.text,
								CardDetails:Txt_ConPaymentCardDtl.text,CCBrand:ddl_ConPaymentCCBrand.selectedItem,
								NameoftheCard:Txt_ConPaymentCardName.text,CreditCardNo:Txt_ConPaymentCardNo.text,
								ExpiryOn:dte_ConPaymentExpirydate.text,ROC:Txt_ConPaymentRoc.text,
								SOCBatchCloseNo:Txt_ConPaymentSoc.text,AmountSwipedFor:Txt_ConPaymentAmountSwip.text,
								ExpiryMonth:Txt_ConExpiryMonth.text,ExpiryYear:Txt_ConExpiryYear.text,Id:Id,
								OutStanding:Txt_ConsolidateOutStanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CardXml");
						useWeb("CheckOutPaymentCard","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					
					
					if(radiogroup1.selectedValue=="Cheque")
					{
						F6="Cheque";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ConsolidatePayment.text=="")
						{
							if(Flag==true)
							{
								Txt_ConsolidatePayment.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						
						
						if(Txt_ConPaymentChecqNO.text=="")
						{
							if(Flag==true)
							{
								Txt_ConPaymentChecqNO.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Cheque Number is Required.\n";					
						}
						
						if(Txt_ConPayCheqBankname.text=="")
						{
							if(Flag==true)
							{
								Txt_ConPayCheqBankname.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Bank Name is Required.\n";					
						}
						
						
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						var TC:String=NF_Two.format(Txt_ConsolidateLoad.text);
						Txt_ConsolidateLoad.text=TC.replace(",","");
						var LC:String=NF_Two.format(Txt_ConsolidatePayment.text+".00")
						Txt_ConsolidatePayment.text = LC.replace(",","");
						if(Txt_ConsolidateLoad.text == Txt_ConsolidatePayment.text)
						{
							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"PaidUpdate","","","",CheckInHdrId,0,0,0,0]);
							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceUpdate","","","",CheckInHdrId,0,0,0,0]);
						}
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Consolidate",PaymentMode:"Cheque",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_CName.text,
								Address:Txt_CAddress.text,
								AmountPaid:Txt_ConsolidatePayment.text,
								ChequeNumber:Txt_ConPaymentChecqNO.text,BankName:Txt_ConPayCheqBankname.text,
								DateIssued:dte_ConCheqDate.text,DateIssueMonth:0,
								DateIssueYear:0,Id:Id,OutStanding:Txt_ConsolidateOutStanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CheqXml");
						useWeb("CheckOutPaymentCheque","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					
					if(radiogroup1.selectedValue=="CompanyInvoice")
					{
						F7="CompanyInvoice";
						var ErrStr:String="";var Flag:Boolean=true;
						//					if(Txt_ConsolidatePayment.text=="")
						//					{
						//						if(Flag==true)
						//						{
						//							Txt_ConsolidatePayment.setFocus();Flag=false;
						//						}
						//						ErrStr=ErrStr+"*  Amount is Required.\n";					
						//					}
						//					if(ErrStr!="")
						//					{
						//						alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
						//						return;					
						//					}
						//					
						//					if(Txt_ConCmpnyAppru.text=="")
						//					{
						//						if(Flag==true)
						//						{
						//							Txt_ConCmpnyAppru.setFocus();Flag=false;
						//						}
						//						ErrStr=ErrStr+"*  Approver is Required.\n";					
						//					}
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						var TC:String=NF_Two.format(Txt_ConsolidateLoad.text);
						Txt_ConsolidateLoad.text=TC.replace(",","");
						var LC:String=NF_Two.format(Txt_ConsolidatePayment.text+".00")
						Txt_ConsolidatePayment.text = LC.replace(",","");
						//					if(Txt_ConsolidateLoad.text == Txt_ConsolidatePayment.text)
						//					{
						//						useWeb("GuestCheckOut","Paid_CUSTOM",[GlobalXml,"PaidUpdate","",CheckInHdrId,0,0,0]);
						//						useWeb("GuestCheckOut","PaidSer_CUSTOM",[GlobalXml,"ServiceUpdate","",CheckInHdrId,0,0,0]);
						//					}
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Consolidate",PaymentMode:"CompanyInvoice",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_CName.text,
								Address:Txt_CAddress.text,
								AmountPaid:Txt_ConsolidatePayment.text,
								Approver:Txt_ConCmpnyAppru.text,Requester:Txt_ConPayCmpReq.text,
								EmailId:Txt_ConPayCmpEmail.text,PhoneNo:Txt_ConPayCmpPhone.text,Id:Id,
								OutStanding:Txt_ConsolidateOutStanding.text,FileLoad:FilePath2.text
								
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"CmpInXml");
						useWeb("CheckOutPaymentCompInvoice","Save_CUSTOM",[GlobalXml,HdrXml]);
					}
					if(radiogroup1.selectedValue=="NEFT")
					{
						F8="NEFT";
						var ErrStr:String="";var Flag:Boolean=true;
						if(Txt_ConsolidatePayment.text=="")
						{
							if(Flag==true)
							{
								Txt_ConsolidatePayment.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Amount is Required.\n";					
						}
						
						
						if(Txt_ConNEFTRef.text=="")
						{
							if(Flag==true)
							{
								Txt_ConNEFTRef.setFocus();Flag=false;
							}
							ErrStr=ErrStr+"*  Reference Number is Required.\n";					
						}
						
						//					if(dte_ConNEFTDdate.text=="")
						//					{
						//						if(Flag==true)
						//						{
						//							dte_ConNEFTDdate.setFocus();Flag=false;
						//						}
						//						ErrStr=ErrStr+"*  Date Of NEFT is Required.\n";					
						//					}
						
						if(ErrStr!="")
						{
							alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
							return;					
						}
						var TC:String=NF_Two.format(Txt_ConsolidateLoad.text);
						Txt_ConsolidateLoad.text=TC.replace(",","");
						var LC:String=NF_Two.format(Txt_ConsolidatePayment.text+".00")
						Txt_ConsolidatePayment.text = LC.replace(",","");
						if(Txt_ConsolidateLoad.text == Txt_ConsolidatePayment.text)
						{
							useWeb("CheckoutAndIntermediate","Paid_CUSTOM",[GlobalXml,"PaidUpdate","","","",CheckInHdrId,0,0,0,0]);
							useWeb("CheckoutAndIntermediate","PaidSer_CUSTOM",[GlobalXml,"ServiceUpdate","","","",CheckInHdrId,0,0,0,0]);
						}
						var Ac_Hdr:ArrayCollection=new ArrayCollection
							([{
								Payment:"Consolidate",PaymentMode:"NEFT",ChkOutHdrId:PrintChkOutId,
								PayeeName:Txt_CName.text,
								Address:Txt_CAddress.text,
								AmountPaid:Txt_ConsolidatePayment.text,
								ReferenceNumber:Txt_ConNEFTRef.text,DateofNEFT:dte_ConNEFTDdate.text,
								BankName:Txt_ConNEFTBankName.text,Id:Id,
								DateNEFTMonth:0,DateNEFTYear:0,
								OutStanding:Txt_ConsolidateOutStanding.text
							}]);
						var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"NEFTXml");
						useWeb("CheckOutPaymentNEFT","Save_CUSTOM",[GlobalXml,HdrXml]);
					}

				}
			}
			
			protected function TariffCash_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Cash.selected=true;
				CompanyInvoice.enabled=false;
				bdr_TariffCash1.visible=true;
				bdr_PaymentCredit.visible=false;
				bdr__TariffCheq1.visible=false;
				bdr_TariffCompinvoice1.visible=false;
				bdr_TariffNEFT1.visible=false;
				//				
				
				
				
				
			}
			
			protected function TariffCreditCard_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				CreditCard.selected=true;
				CompanyInvoice.enabled=false;
				bdr_PaymentCredit.visible=true;
				bdr_TariffCash1.visible=false;
				bdr__TariffCheq1.visible=false;
				bdr_TariffCompinvoice1.visible=false;
				bdr_TariffNEFT1.visible=false;
				
				
			}
			
			protected function TariffCheque_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Cheque.selected=true;
				CompanyInvoice.enabled=false;
				bdr__TariffCheq1.visible=true
				bdr_PaymentCredit.visible=false;
				bdr_TariffCash1.visible=false;
				bdr_TariffCompinvoice1.visible=false;
				bdr_TariffNEFT1.visible=false;
				//			
			}
			
			protected function TariffCompanyInvoice_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				CompanyInvoice.selected=true;
				Cash.enabled=false;
				CreditCard.enabled=false;
				Cheque.enabled=false;
				NEFT.enabled=false;
				bdr_TariffCompinvoice1.visible=true;
				bdr__TariffCheq1.visible=false
				bdr_PaymentCredit.visible=false;
				bdr_TariffCash1.visible=false;
				bdr_TariffNEFT1.visible=false;
				//				
			}
			
			protected function TariffNEFT_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				NEFT.selected=true;
				CompanyInvoice.enabled=false;
				bdr_TariffNEFT1.visible=true;
				bdr_TariffCompinvoice1.visible=false;
				bdr__TariffCheq1.visible=false
				bdr_PaymentCredit.visible=false;
				bdr_TariffCash1.visible=false;
				//				
			}
			
			protected function AddTariffPay_bb1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if (ChkOutHdrId == 0)
				{
					alignAlert(Alert.show("Card Details Added Successfully.","Message !",
						Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
				}
				bdr_PaymentCredit.visible=false;
			}
			
			protected function ServicePayCash1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Cash1.selected=true;
				bdr_ServiceCash1.visible=true;
				bdr_ServicePaymentCredit.visible=false;
				bdr_ServiceCheque1.visible=false;
				bdr_ServiceCompaInvoice1.visible=false;
				bdr_ServiceNEFT1.visible=false;
				//				
				
			}
			
			protected function ServicePayCreditCard1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				CreditCard1.selected=true;
				bdr_ServicePaymentCredit.visible=true;
				bdr_ServiceCash1.visible=false;
				bdr_ServiceCheque1.visible=false;
				bdr_ServiceCompaInvoice1.visible=false;
				bdr_ServiceNEFT1.visible=false;
				//				
			}
			
			protected function AddService_bb1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if (ChkOutHdrId == 0)
				{
					alignAlert(Alert.show("Card Details Added Successfully.","Message !",
						Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
				}
				bdr_ServicePaymentCredit.visible=false;
			}
			
			protected function ServicePayCheque1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Cheque1.selected=true;
				bdr_ServiceCheque1.visible=true;
				bdr_ServicePaymentCredit.visible=false;
				bdr_ServiceCash1.visible=false;
				bdr_ServiceCompaInvoice1.visible=false;
				bdr_ServiceNEFT1.visible=false;
				//				
				
			}
			
			protected function ServicePayCompanyInvoice1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				CompanyInvoice1.selected=true;
				bdr_ServiceCompaInvoice1.visible=true;
				bdr_ServiceCheque1.visible=false;
				bdr_ServicePaymentCredit.visible=false;
				bdr_ServiceCash1.visible=false;
				bdr_ServiceNEFT1.visible=false;
				//				
			}
			
			protected function ServicePayNEFT1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				NEFT1.selected=true;
				bdr_ServiceNEFT1.visible=true;
				bdr_ServiceCash1.visible=false;
				bdr_ServicePaymentCredit.visible=false;
				bdr_ServiceCheque1.visible=false;
				bdr_ServiceCompaInvoice1.visible=false;
				//				
			}
			
			
			
			
			
			
			protected function ConPayCash2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Cash2.selected=true;
				CompanyInvoice2.enabled=false;
				ConsolidateCash1.visible=true;
				bdr_ConPaymentCredit.visible=false;
				bdr_ConsolidateCheq1.visible=false;
				bdr_ConsolidateCmpnyInvoice1.visible=false;
				bdr_ConsolidateNEFT1.visible=false;
				//				
			}
			
			protected function AddCredit_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if (ChkOutHdrId == 0)
				{
					alignAlert(Alert.show("Payment Added Successfully.","Message !",
						Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
				}
				bdr_ConPaymentCredit.visible=false;
				
			}
			
			protected function FNClose3(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				bdr_ConPaymentCredit.visible=false;
			}
			
			protected function ConCreditCard2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				CreditCard2.selected=true;
				CompanyInvoice2.enabled=false;
				bdr_ConPaymentCredit.visible=true;
				ConsolidateCash1.visible=false;
				bdr_ConsolidateCheq1.visible=false;
				bdr_ConsolidateCmpnyInvoice1.visible=false;
				bdr_ConsolidateNEFT1.visible=false;
				//				
			}
			
			protected function ConCheque2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Cheque2.selected=true;
				CompanyInvoice2.enabled=false;
				bdr_ConsolidateCheq1.visible=true;
				bdr_ConPaymentCredit.visible=false;
				ConsolidateCash1.visible=false;
				bdr_ConsolidateCmpnyInvoice1.visible=false;
				bdr_ConsolidateNEFT1.visible=false;
				//				
			}
			
			protected function ConCompanyInvoice2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Cash2.enabled=false;
				CreditCard2.enabled=false;
				Cheque2.enabled=false;
				NEFT2.enabled=false;
				CompanyInvoice2.selected=true;
				bdr_ConsolidateCmpnyInvoice1.visible=true;
				bdr_ConsolidateCheq1.visible=false;
				bdr_ConPaymentCredit.visible=false;
				ConsolidateCash1.visible=false;
				bdr_ConsolidateNEFT1.visible=false;
				//				
			}
			
			protected function ConNEFT2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				NEFT2.selected=true;
				CompanyInvoice2.enabled=false;
				bdr_ConsolidateNEFT1.visible=true;
				ConsolidateCash1.visible=false;
				bdr_ConPaymentCredit.visible=false;
				bdr_ConsolidateCheq1.visible=false;
				bdr_ConsolidateCmpnyInvoice1.visible=false;
				//			
			}
			//Tariff(allowed equal amunt to check)
			protected function Txt_TariffPayAmount_changeHandler():void
			{
				
				var OS:String=NF_Two.format(Txt_TariffLoad.text);
				Txt_TariffLoad.text=OS.replace(",",""); 
				var TF:String = Txt_TariffLoad.text;
				var tt:String = (Txt_TariffPayAmount.text+".00")
				
				txt_TariffOutstanding.text =  String(Number(tt)-Number(TF))
				var oustand:String= NF_Two.format(txt_TariffOutstanding.text);
				txt_TariffOutstanding.text=txt_TariffOutstanding.text.replace("-",""); 
				
				if(Txt_TariffPayAmount.text!="")
				{
					
					if(Number(Txt_TariffPayAmount.text)>Number(Txt_TariffLoad.text))
					{
						Txt_TariffPayAmount.text="";
						txt_TariffOutstanding.text="";
						alignAlert(Alert.show("Process Halted ! Excess Amount deducted",
							"Message !",Alert.OK, null, null,iconWarning, Alert.OK),10,"");
						
						return; 
						
					}
					Cash.setFocus();
				}
				
			}
			
			// Service (allowed equal amunt to check )
			protected function Txt_ServicePayAmount_changeHandler():void
			{
				
				var OS1:String=NF_Two.format(Txt_ServiceLoad.text);
				Txt_ServiceLoad.text=OS1.replace(",",""); 
				var TF1:String = Txt_ServiceLoad.text;
				var tt1:String = (Txt_ServicePayAmount.text+".00")
				
				Txt_ServiceOutStanding.text =  String(Number(tt1)-Number(TF1))
				var oustand1:String= NF_Two.format(Txt_ServiceOutStanding.text);
				Txt_ServiceOutStanding.text=Txt_ServiceOutStanding.text.replace("-","");
				
				if(Txt_ServicePayAmount.text!="")
				{
					
					
					if(Number(Txt_ServicePayAmount.text)>Number(Txt_ServiceLoad.text))
					{
						Txt_ServicePayAmount.text="";
						Txt_ServiceOutStanding.text="";
						alignAlert(Alert.show("Process Halted ! Excess Amount deducted",
							"Message !",Alert.OK, null, null,iconWarning, Alert.OK),10,"");
						
						return; 
						
					}
					Cash.setFocus();
				}
				
			}
			// Consolidate (allowed equal amunt)
			protected function Txt_ConsolidatePayment_changeHandler():void
			{
				
				var OS2:String=NF_Two.format(Txt_ConsolidateLoad.text);
				Txt_ConsolidateLoad.text=OS2.replace(",",""); 
				var TF2:String = Txt_ConsolidateLoad.text;
				var tt2:String = (Txt_ConsolidatePayment.text+".00")
				
				Txt_ConsolidateOutStanding.text =  String(Number(tt2)-Number(TF2))
				var oustand2:String= NF_Two.format(Txt_ConsolidateOutStanding.text);
				Txt_ConsolidateOutStanding.text=Txt_ConsolidateOutStanding.text.replace("-",""); 
				
				if(Txt_ConsolidatePayment.text!="")
				{
					
					if(Number(Txt_ConsolidatePayment.text)>Number(Txt_ConsolidateLoad.text))
					{
						Txt_ConsolidatePayment.text="";
						alignAlert(Alert.show("Process Halted ! Excess Amount deducted",
							"Message !",Alert.OK, null, null,iconWarning, Alert.OK),10,"");
						
						return; 
						
					}
					Cash.setFocus();
				}
			}
			// Tariff Clear
			protected function TariffPayClr():void
			{
				// TODO Auto-generated method stub
				CheckOutHdrId=0;
				Txt_Cashreceive.text="";
				DT_TariffCashDate.text="";				
				ddl_CashReceivedby.selectedItem="";
				Txt_TarCardDateMonth.text="";
				Txt_TarCardDateYear.text="";
				Txt_PaymentChecqNO.text="";
				Txt_CheqBankname.text="";
				dte_CheqDate.text="";
				Txt_TarCheqDateMonth.text="";
				Txt_TarCheqDateYear.text="";
				Txt_CmpnyAppru.text="";
				Txt_TariffCmpReq.text="";
				Txt_TariffCmpEmail.text="";
				Txt_TariffCmpPhone.text="";
				Txt_TariffNEFTRef.text="";
				Txt_TarNEFTDateMonth.text="";
				Txt_TarNEFTDateYearh.text="";
				dte_NEFTDdate.text="";
				Txt_TariffNEFTBankName.text="";
				Txt_PaymentCardDtl.text="";
				ddl_PaymentCCBrand.selectedItem="";
				Txt_PaymentCardName.text="";
				Txt_PaymentCardNo.text="";
				dte_PaymentExpirydate.text="";
				Txt_PaymentRoc.text="";
				Txt_PaymentSoc.text="";
				Txt_PaymentAmountSwip.text="";
				if(Direct.selected==true)
				{
					Cash.selected="";
					CreditCard.selected="";
					CompanyInvoice.selected="";
					Cheque.selected="";
					NEFT.selected="";
					
					Cash.enabled=true;
					CreditCard.enabled=true;
					CompanyInvoice.enabled=false;
					Cheque.enabled=true;
					NEFT.enabled=true;
					
					txt_TariffOutstanding.text="";
					Txt_TariffPayAmount.text="";
					txt_TariffOutstanding.enabled=true;
					Txt_TariffPayAmount.enabled=true;
				}
				else
				{
					Cash.selected="";
					CreditCard.selected="";
					CompanyInvoice.selected="";
					Cheque.selected="";
					NEFT.selected="";
					
					Cash.enabled=false;
					CreditCard.enabled=false;
					CompanyInvoice.enabled=true;
					Cheque.enabled=false;
					NEFT.enabled=false;
					
					
					txt_TariffOutstanding.enabled=false;
					Txt_TariffPayAmount.enabled=false;
				}
				
				bdr_TariffCash1.visible=false;
				bdr__TariffCheq1.visible=false;
				bdr_TariffCompinvoice1.visible=false;
				bdr_PaymentCredit.visible=false;
				bdr_TariffNEFT1.visible=false;
				//txt_TariffOutstanding.text="";
				
				//	Txt_TariffLoad.text="";
				
				
			}
			// serviceItem Payment(Cash,Card,Cheque,Companyinvoice,NEFT) clear
			protected function ServicePayClr():void
			{
				// TODO Auto-generated method stub
				Txt_ServiPayCash.text="";
				ddl_ServiPayCashRecBy.selectedItem="";
				Txt_ServicePaymentCardDtl.text="";
				ddl_ServicePaymentCCBrand.selectedItem="";
				Txt_ServicePaymentCardName.text="";
				Txt_ServicePaymentCardNo.text="";
				dte_ServicePaymentExpirydate.text="";
				Txt_ServicePaymentRoc.text="";
				Txt_ServicePaymentSoc.text="";
				Txt_ServicePaymentAmountSwip.text="";
				Txt_ServicePaymentChecqNO.text="";
				Txt_ServicePayCheqBankname.text="";
				dte_ServiceCheqDate.text="";
				Txt_SerCheqDateMonth.text="";
				Txt_SerCheqDateYear.text="";
				Txt_ServiceCmpnyAppru.text="";
				Txt_servicePayCmpReq.text="";
				Txt_ServicePayCmpEmail.text="";
				Txt_ServicePayCmpPhone.text="";
				Txt_ServiceNEFTRef.text="";
				Txt_SerNEFTDateMonth.text="";
				Txt_SerNEFTDateYear.text
				dte_ServicePayNEFTDdate.text="";
				Txt_SrvicePayBankName.text="";
				DT_SerpayCashdate.text="";
				Txt_ServicePayAmount.text="";
				Cash1.selected="";
				CreditCard1.selected="";
				Cheque1.selected="";
				CompanyInvoice1.selected="";
				NEFT1.selected="";
				FilePath1.text="";
				Txt_ServiceOutStanding.text="";
				Cash1.enabled=true;
				CreditCard1.enabled=true;
				CompanyInvoice1.enabled=true;
				Cheque1.enabled=true;
				NEFT1.enabled=true;
				bdr_ServicePaymentCredit.visible=false;
				bdr_ServiceCash1.visible=false;
				bdr_ServiceCheque1.visible=false;
				bdr_ServiceCompaInvoice1.visible=false;
				bdr_ServiceNEFT1.visible=false;
				//				if(Direct.selected==true)
				//				{
				//					Cash1.selected="";
				//					CreditCard1.selected="";
				//					CompanyInvoice1.selected="";
				//					Cheque1.selected="";
				//					NEFT1.selected="";
				//					
				//					Cash1.enabled=true;
				//					CreditCard1.enabled=true;
				//					CompanyInvoice1.enabled=false;
				//					Cheque1.enabled=true;
				//					NEFT1.enabled=true;
				//					
				//				}
				//				else
				//				{
				//					Cash1.selected="";
				//					CreditCard1.selected="";
				//					CompanyInvoice1.selected="";
				//					Cheque1.selected="";
				//					NEFT1.selected="";
				//					
				//					Cash1.enabled=false;
				//					CreditCard1.enabled=false;
				//					CompanyInvoice1.enabled=true;
				//					Cheque1.enabled=false;
				//					NEFT1.enabled=false;
				//					
				//					
				//				}
				
				
				
			}
			//Consolidate Payment(Cash,Card,Cheque,Companyinvoice,NEFT) Clear
			protected function ConsolidatePayClr():void
			{
				// TODO Auto-generated method stub
				Txt_ConsoPayCash.text="";
				DT_ConPayCashDate.text="";
				ddl_ConsoPayCashRecBy.selectedItem="";
				Txt_ConPaymentCardDtl.text="";
				ddl_ConPaymentCCBrand.selectedItem="";
				Txt_ConPaymentCardName.text="";
				Txt_ConPaymentCardNo.text="";
				dte_ConPaymentExpirydate.text="";
				Txt_ConPaymentRoc.text="";
				Txt_ConPaymentSoc.text="";
				Txt_ConPaymentAmountSwip.text="";
				Txt_ConPaymentChecqNO.text="";
				Txt_ConPayCheqBankname.text="";
				Txt_ConCheqdateMonth.text="";
				Txt_ConCheqdateYear.text="";
				dte_ConCheqDate.text="";
				Txt_ConCmpnyAppru.text="";
				Txt_ConPayCmpReq.text="";
				Txt_ConPayCmpEmail.text="";
				Txt_ConPayCmpPhone.text="";
				Txt_ConNEFTRef.text="";
				
				Txt_ConsolidateOutStanding.text="";
				Txt_ConNEFTDateMonth.text="";
				Txt_ConNEFTDateYear.text="";
				Txt_ConNEFTBankName.text="";
				Txt_ConsolidateLoad.text="";
				
				
				Cash2.selected="";
				CreditCard2.selected="";
				Cheque2.selected="";
				CompanyInvoice2.selected="";
				NEFT2.selected="";
				FilePath2.text="";
				Cash2.enabled=true;
				CreditCard2.enabled=true;
				CompanyInvoice2.enabled=true;
				Cheque2.enabled=true;
				NEFT2.enabled=true;
				
				bdr_ConPaymentCredit.visible=false;
				ConsolidateCash1.visible=false;
				bdr_ConsolidateCheq1.visible=false;
				bdr_ConsolidateCmpnyInvoice1.visible=false;
				bdr_ConsolidateNEFT1.visible=false;
				
				if(Direct.selected==true)
				{
					Cash2.selected="";
					CreditCard2.selected="";
					CompanyInvoice2.selected="";
					Cheque2.selected="";
					NEFT2.selected="";
					
					Cash2.enabled=true;
					CreditCard2.enabled=true;
					CompanyInvoice2.enabled=false;
					Cheque2.enabled=true;
					NEFT2.enabled=true;
					
					Txt_ConsolidatePayment.text="";
					Txt_ConsolidateOutStanding.text="";
					Txt_ConsolidateOutStanding.enabled=true;
					Txt_ConsolidatePayment.enabled=true;
					
				}
				else
				{
					Cash2.selected="";
					CreditCard2.selected="";
					CompanyInvoice2.selected="";
					Cheque2.selected="";
					NEFT2.selected="";
					
					Cash2.enabled=false;
					CreditCard2.enabled=false;
					CompanyInvoice2.enabled=true;
					Cheque2.enabled=false;
					NEFT2.enabled=false;
					
					
					Txt_ConsolidateOutStanding.enabled=false;
					Txt_ConsolidatePayment.enabled=false;
					
				}
			}
			//dropdown for tariff cash
			protected function ddl_CashReceivedby_changeHandler(event:IndexChangeEvent):void
			{
				// TODO Auto-generated method stub
				if(ddl_CashReceivedby.selectedItem.label=="Resident Managers")
				{  
					useWeb("CheckoutAndIntermediate","GuestLoad_CUSTOM",[GlobalXml,'GuestName','','','',0,0,PropertyId,0,0]);
				}
				if(ddl_CashReceivedby.selectedItem.label=="Assistant Resident Managers")
				{  
					useWeb("CheckoutAndIntermediate","GuestLoad_CUSTOM",[GlobalXml,'GuestName','','','',0,0,PropertyId,0,0]);
				}
			}
			//dropdown for service cash
			protected function ddl_ServiPayCashRecBy_changeHandler(event:IndexChangeEvent):void
			{
				// TODO Auto-generated method stub
				if(ddl_ServiPayCashRecBy.selectedItem.label=="Resident Managers")
				{  
					useWeb("CheckoutAndIntermediate","GuestLoad_CUSTOM",[GlobalXml,'GuestName','','','',0,0,PropertyId,0,0]);
				}
				if(ddl_ServiPayCashRecBy.selectedItem.label=="Assistant Resident Managers")
				{  
					useWeb("CheckoutAndIntermediate","GuestLoad_CUSTOM",[GlobalXml,'GuestName','','','',0,0,PropertyId,0,0]);
				}
			}
			//drop down for Consolidate cash
			protected function ddl_ConsoPayCashRecBy_changeHandler(event:IndexChangeEvent):void
			{
				// TODO Auto-generated method stub
				if(ddl_ConsoPayCashRecBy.selectedItem.label=="Resident Managers")
				{  
					useWeb("CheckoutAndIntermediate","GuestLoad_CUSTOM",[GlobalXml,'GuestName','','','',0,0,PropertyId,0,0]);
				}
				if(ddl_ConsoPayCashRecBy.selectedItem.label=="Assistant Resident Managers")
				{  
					useWeb("CheckoutAndIntermediate","GuestLoad_CUSTOM",[GlobalXml,'GuestName','','','',0,0,PropertyId,0,0]);
				}
			}
			//to settlemnt grid check box select print option
			public function FnSelect():void
			{ 
				// TODO Auto-generated method stub
				if(Checkout.selected==true)
				{
					var BillType:String="";
					var OutStanding:String="";
					BillType=Grid_Settle.selectedItem.BillType;
					OutStanding=Grid_Settle.selectedItem.OutStanding;
					if(BillType == "Tariff")
					{
						ExternalInterface.call("changeDocumentTitle",Str_ChkOut+PrintChkOutId);
					}
					if(BillType == "Service")
					{
						ExternalInterface.call("changeDocumentTitle",Str_Serv+PrintChkOutId);
					}
					if(BillType == "Consolidate")
					{
						ExternalInterface.call("changeDocumentTitle",Str_Settle+PrintChkOutId);
					}
					
				}
				else if(Intermediate.selected==true)
				{
					var BillType:String="";
					var OutStanding:String="";
					BillType=Grid_Settle.selectedItem.BillType;
					OutStanding=Grid_Settle.selectedItem.OutStanding;
					//		
					
					if(BillType == "Tariff")
					{
						ExternalInterface.call("changeDocumentTitle",Str_ChkOut+PrintChkOutId);
			//			ExternalInterface.call("changeDocumentTitle",Str_InChkTar+PrintChkOutId);
//						if(OutStanding == "0")
//						{
//							ExternalInterface.call("changeDocumentTitle",Str_ChkOut+PrintChkOutId);
//						}
//						else
//						{
//							ExternalInterface.call("changeDocumentTitle",Str_InChkTar+PrintChkOutId);
//						}
						
					}
					if(BillType == "Service")
					{
						ExternalInterface.call("changeDocumentTitle",Str_Serv+PrintChkOutId);
			//			ExternalInterface.call("changeDocumentTitle",Str_InChkSer+PrintChkOutId);
//						if(OutStanding == "0")
//						{
//							ExternalInterface.call("changeDocumentTitle",Str_Serv+PrintChkOutId);
//						}
//						else
//						{
//							ExternalInterface.call("changeDocumentTitle",Str_InChkSer+PrintChkOutId);
//						}
						
					}
					if(BillType == "Consolidate")
					{
						ExternalInterface.call("changeDocumentTitle",Str_Settle+PrintChkOutId);
			//			ExternalInterface.call("changeDocumentTitle",Str_InChkSett+PrintChkOutId);
//						if(OutStanding == "0")
//						{
//							ExternalInterface.call("changeDocumentTitle",Str_Settle+PrintChkOutId);
//						}
//						else
//						{
//							ExternalInterface.call("changeDocumentTitle",Str_InChkSett+PrintChkOutId);
//						}
						
					}
				}
				
				
			}
			
			
			protected function DT_TariffCashDate_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			public var ImageFormat:String="";
			public function init():void
			{
				// This URL should be replaced with your server side URL
				//				var browserUrl:String = ExternalInterface.call("eval", "window.location.href");
				//				var arr:Array =browserUrl.split("/");
				ImageFormat=FilePath.text;				
				uploadURL.url = "http://sstage.in/BTCUpload.php?id="+hlp_GuestName.text+BTCSId+"&pid="+BTCSId+"&imgcount="+0+"&imgformat="+BTCSId;
				uploadURL.method = "POST"; // OR "POST" as you need it
				uploadURL.contentType = "multipart/form-data";				
				// Event Listeners for UI Buttons (Upload/Browse)
				
				Filedata.addEventListener(MouseEvent.CLICK, browseFiles);
				Filedata1.addEventListener(MouseEvent.CLICK, browseFiles);
				Filedata2.addEventListener(MouseEvent.CLICK, browseFiles);
				uploadbutton.addEventListener(MouseEvent.CLICK,uploadFiles);
				uploadbutton1.addEventListener(MouseEvent.CLICK,uploadFiles);
				uploadbutton2.addEventListener(MouseEvent.CLICK,uploadFiles);
				fileRef.addEventListener(Event.SELECT, selectHandler);
				
				
			}				
			
			//Browse for files			
			private function browseFiles(event:Event):void
			{
				fileTypes.push(imageTypes);
				fileTypes.push(documentTypes);
				fileRef.browse(fileTypes);				
			}
			
			// called after user selects a file form the browse window.			
			private function selectHandler(event:Event):void
			{
				FilePath.text = event.currentTarget.name.toString();
				FilePath1.text = event.currentTarget.name.toString();
				FilePath2.text=event.currentTarget.name.toString();
				ImageFormat=FilePath.text;	
			}	
			
			// called when user clicks on the Upload button to upload the file			
			private function uploadFiles():void
			{
				fileRef.addEventListener(Event.COMPLETE, completeHandler);
				fileRef.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA,dataHandler);
				fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR,securityErrorHandler);
				fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS,httpStatusHandler);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
				fileRef.upload(uploadURL);
			}
			
			// called after a file is uploaded			
			private function completeHandler(event:Event):void
			{
				//Alert.show("File Uploaded successfully");				
			}
			
			//called after file upload is done and Data has been returned from Server			
			private function dataHandler(event:DataEvent):void
			{
				//Alert.show("File Uploaded successfully");	
				var ImageFlage:Boolean=true;
				resultsTxtField.text = event.data.toString();
				var Err_Image:String=resultsTxtField.text;
				var Fatal:String=Err_Image.substr(8,18);
				if(Fatal=="b>Fatal error</b>:")
				{
					ImageFlage=false;
					alignAlert(Alert.show("There was an error uploading the file, please try again!","Error !",Alert.OK, null, null,iconErrLarge, Alert.OK),10,"");
				}
				if(resultsTxtField.text=="There was an error uploading the file, please try again!")
				{
					ImageFlage=false;
					alignAlert(Alert.show(resultsTxtField.text,"Error !",Alert.OK, null, null,iconErrLarge, Alert.OK),10,"");
				}				
				if(ImageFlage==true)
				{					
					useWeb("CheckoutAndIntermediate","ImageUpload_CUSTOM",[GlobalXml,'IMAGEUPLOAD',"http://sstage.in/BTC/"+resultsTxtField.text,"","",BTCSId,0,0,0,0,0]);
				}
			}
			
			// called if there is an error detected by flash player browsing or uploading a file
			
			private function ioErrorHandler(event:IOErrorEvent):void
			{
				mx.controls.Alert.show(String(event),"ioError",0);
			}
			// called if a security error
			
			private function securityErrorHandler(event:SecurityErrorEvent):void
			{
				mx.controls.Alert.show(String(event),"Security Error",0);
			}
			// server will return an http status code, code 200 means all is good
			
			private function httpStatusHandler(event:HTTPStatusEvent):void
			{
				if (event.status != 200)
				{
					mx.controls.Alert.show(String(event),"Error",0);
				}
			}
			
			//Image Download
			public var PropertyImageId:int=0;			
			//			private function init1():void {
			//				// Initialize the array collection to an empty collection. 
			//				arrColl = new ArrayCollection();
			//				
			//				// Set up the URL request to download the file specified by the FILE_URL variable. 
			//				urlReq = new URLRequest(FILE_URL);
			//				
			//				// Define file reference object and add a bunch of event listeners. 
			//				fileRef = new FileReference();
			//				fileRef.addEventListener(Event.CANCEL, doEvent);
			//				fileRef.addEventListener(Event.COMPLETE, doEvent);
			//				fileRef.addEventListener(Event.OPEN, doEvent);
			//				fileRef.addEventListener(Event.SELECT, doEvent);
			//				fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS, doEvent);
			//				fileRef.addEventListener(IOErrorEvent.IO_ERROR, doEvent);
			//				fileRef.addEventListener(ProgressEvent.PROGRESS, doEvent);
			//				fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR, doEvent);
			//			}
			//			
			//			private function doEvent(evt:Event):void {
			//				
			//				FilePath.text="";
			//			}
			//			
			//			private function downloadSourceCodeZip():void {
			//				// Clear existing array collection. 
			//				//arrColl = new ArrayCollection();
			//				//Alert.show(FILE_URL);
			//				// Hide the Text control. //
			//				//txt.visible = false;
			//				// Begin download. 
			//				fileRef.download(urlReq);
			//			}
			//			
			//			private function showAlert(item:Object):void {
			//				Alert.show(item.eventString, item.type);
			//			}
			
			
			
			protected function btn_Sctrl1_docRefreshHandler():void
			{
				// TODO Auto-generated method stub
				PageLoad();
				
				init();
				FnClear();
				FnServiceClr();
				FnSettleClr();
				bdr_Tariff.enabled=false;
				
				
			}
			public static var misValue:Number;
			protected function checkbox1_changeHandler(event:Event):void
			{
				misValue=Number(txt_MiscellaneousAmount.text)
				txt_MiscellaneousAmount.visible=Chk_Miscellaneous.selected;
				txt_MiscellaneousRemarks.visible=Chk_Miscellaneous.selected	
				if(Chk_Miscellaneous.selected==false)
				{
					Txt_ServiceNetAmount.text=String(Number(Txt_ServiceNetAmount.text)-misValue)
					txt_MiscellaneousRemarks.text="";
					txt_MiscellaneousAmount.text="";
					txt_MiscellaneousAmount.enabled=true;
				}
			}
			
			protected function chk_ServiceCharge_changeHandler(event:Event):void
			{
				
				if(chk_ServiceCharge.selected==true)
				{
					
					var NoOfdays:Number=(Number(lbl_tariff.text))
					
					var total:Number=(Math.round(Number(lbl_Nettariff.text))*NoOfdays);
					
					Txt_TotalTariff.text=NF_Two.format(total);
					
					var LU:String=Txt_Luxury.text;
					
					var luxury:Number=Number(LU.replace(',',''));
					
					Txt_Luxury.text=NF_Two.format(luxury);
					
					var ST12:String=Txt_ServiceTax12.text;
					
					var service:Number=Number(ST12.replace(',',''));
					
					Txt_ServiceTax12.text=NF_Two.format(service);
					
					var Charges:Number=0;
					
					Charges=Number(total*2.5/100);
					
					ServiceChargeValue2Per=Charges;
					
					Txt_ServiceCharge2.text=NF_Two.format(Charges);
					
					var ServiceTax:Number=0;
					
					ServiceTax=Number(Charges*12.00/100);
					
					ServiceChargeValue12Per=ServiceTax;
					
					Txt_Servicecharge12.text=NF_Two.format(ServiceTax);
					
					var Cess:Number=0;
					
					Cess=Number((service+ServiceTax)*2/100);
					
					Txt_Cess.text=NF_Two.format(Cess);
					
					var HECess:Number=0;
					
					HECess=Number((service+ServiceTax)*1/100);
					
					Txt_HECess.text=NF_Two.format(HECess);
					Txt_NetAmount.text=NF_Two.format(Math.round(Number(total+luxury+service+Charges+ServiceTax+Cess+HECess+ExtraMaters))).toString();
				}
				else
				{
					var NoOfdays:Number=(Number(lbl_tariff.text))
					
					var total:Number=(Math.round(Number(lbl_Nettariff.text))*NoOfdays);
					
					Txt_TotalTariff.text=NF_Two.format(total);
					
					var LU:String=Txt_Luxury.text;
					
					var luxury:Number=Number(LU.replace(',',''));
					
					Txt_Luxury.text=NF_Two.format(luxury);
					
					var ST12:String=Txt_ServiceTax12.text;
					
					var service:Number=Number(ST12.replace(',',''));
					
					Txt_ServiceTax12.text=NF_Two.format(service);
					
					var Charges:Number=0;
					
					Charges=Number(total*0/100);
					
					ServiceChargeValue2Per=Charges;
					
					Txt_ServiceCharge2.text=NF_Two.format(Charges);
					
					var ServiceTax:Number=0;
					
					ServiceTax=Number(Charges*12.00/100);
					
					ServiceChargeValue12Per=ServiceTax;
					
					Txt_Servicecharge12.text=NF_Two.format(ServiceTax);
					
					var Cess:Number=0;
					
					Cess=Number((service+ServiceTax)*2/100);
					
					Txt_Cess.text=NF_Two.format(Cess);
					
					var HECess:Number=0;
					
					HECess=Number((service+ServiceTax)*1/100);
					
					Txt_HECess.text=NF_Two.format(HECess);
					Txt_NetAmount.text=NF_Two.format(Math.round(Number(total+luxury+service+Charges+ServiceTax+Cess+HECess+ExtraMaters))).toString();
				}
			}
			protected function txt_MiscellaneousAmount_focusOutHandler(event:FocusEvent):void
			{
				
				
				
				var SL:String=NF_Two.format(Txt_ServiceNetAmount.text);
				Txt_ServiceNetAmount.text=SL.replace(",","");
				
				var MA:String=NF_Two.format(txt_MiscellaneousAmount.text+".00");
				txt_MiscellaneousAmount.text=MA.replace(",","");
				//	Txt_ServiceNetAmount.text = NF_Two.format((Number(Txt_ServiceNetAmount.text)+Number(MA)));
				Txt_ServiceNetAmount.text = String(Number(Txt_ServiceNetAmount.text)+Number(txt_MiscellaneousAmount.text));
				
				txt_MiscellaneousAmount.enabled=false;
				//		Txt_ServiceNetAmount.text=String(Number(Txt_ServiceNetAmount.text)+Number(txt_MiscellaneousAmount.text))
				
			}
			
//			protected function Intermediate_clickHandler(event:MouseEvent):void
//			{
//				// TODO Auto-generated method stub
//				lbl_Billfrom.visible=true;
//				lbl_Billto.visible=true;
//				DT_BillFromDate.visible=true;
//				DT_BillTo.visible=true;
//			}
//			
//			protected function Checkout_clickHandler(event:MouseEvent):void
//			{
//				// TODO Auto-generated method stub
//				lbl_Billfrom.visible=false;
//				lbl_Billto.visible=false;
//				DT_BillFromDate.visible=false;
//				DT_BillTo.visible=false;
//			}
			
			protected function Process_clickHandler(event:MouseEvent):void
			{
				
				// TODO Auto-generated method stub
				

					if(Checkout.selected == true)
					{
						var BillFrom:String="";
						var BillTo:String="";
						BillFrom=DT_BillFromDate.text;
						BillTo=DT_BillTo.text;
						
						var BillTo=DT_BillTo.text;	
						//var TodayDate:String=TodayDate;
						var BillTo:String=DT_BillTo.text;
						var BillTo1:String=TodayDate;
						var D:String=BillTo.substr(0,2);
						var M:String=BillTo.substr(3,2);
						var Y:String=BillTo.substr(6,10);
						var D1:String=BillTo1.substr(0,2);
						var M1:String=BillTo1.substr(3,2);
						var Y1:String=BillTo1.substr(6,10);
						var RangeMiddle:String=Y+'/'+M+'/'+D;
						var RangeEnd:String=Y1+'/'+M1+'/'+String(Number(D1)+1);
						var RangeStart:String=Y+'/'+M+'/'+D;
						//					var BillTo1 = 
						//						{rangeStart:new Date(RangeStart),rangeEnd:new Date(RangeEnd)};
						//					BillTo1=new Date(RangeEnd);
						
						if(RangeStart <= RangeEnd)
						{
							useWeb("CheckoutAndIntermediate","Guest_CUSTOM",[GlobalXml,"CHKINROOMDETAILS","",BillFrom,BillTo,CheckInHdrId,StateId,0,0,ExtraMaters]);
							//		useWeb("CheckOutServiceHdr","TariffLoad_CUSTOM",[GlobalXml,"ProductLoad",BillFrom,,CheckInHdrId,GuestId,StateId,0,0,0]);
							
						}
							
						else
						{
							alignAlert(Alert.show("Can't be Process Future Checkout","Alert Message !",
								Alert.OK,null,null,iconWarning,Alert.OK),10,"");
							
							return;
							Sctrl.enabled=false;
							
						}
					}
					
					if(Intermediate.selected == true)
					{
						var BillFrom:String="";
						var BillTo:String="";
						BillFrom=DT_BillFromDate.text;
						BillTo=DT_BillTo.text;
						
						var BillTo=DT_BillTo.text;	
						//var TodayDate:String=TodayDate;
						var BillTo:String=DT_BillTo.text;
						var BillTo1:String=TodayDate;
						var D:String=BillTo.substr(0,2);
						var M:String=BillTo.substr(3,2);
						var Y:String=BillTo.substr(6,10);
						var D1:String=BillTo1.substr(0,2);
						var M1:String=BillTo1.substr(3,2);
						var Y1:String=BillTo1.substr(6,10);
						var RangeMiddle:String=Y+'/'+M+'/'+D;
						var RangeEnd:String=Y1+'/'+M1+'/'+D1;
						var RangeStart:String=Y+'/'+M+'/'+D;
						//					var BillTo1 = 
						//						{rangeStart:new Date(RangeStart),rangeEnd:new Date(RangeEnd)};
						//					BillTo1=new Date(RangeEnd);
						if(RangeStart == RangeEnd)
						{
							alignAlert(Alert.show("Can't be Process Intermediate for Checkout Date","Alert Message !",
								Alert.OK,null,null,iconWarning,Alert.OK),10,"");
							
							return;
						}
						if(RangeStart <= RangeEnd)
						{
							useWeb("CheckoutAndIntermediate","Guest_CUSTOM",[GlobalXml,"CHKINROOMDETAILS","",BillFrom,BillTo,CheckInHdrId,StateId,0,0,ExtraMaters]);
							//		useWeb("CheckOutServiceHdr","TariffLoad_CUSTOM",[GlobalXml,"ProductLoad",BillFrom,,CheckInHdrId,GuestId,StateId,0,0,0]);
							
						}
							
						else
						{
							alignAlert(Alert.show("Can't be Process Future Checkout","Alert Message !",
								Alert.OK,null,null,iconWarning,Alert.OK),10,"");
							
							return;
							Sctrl.enabled=false;
							
						}
					}
					
						
				
				
			}
			
			protected function Checkout_clickHandler(event:MouseEvent):void
			{
				Chk_PIInvoice.visible=false;
				var BillF:String=DT_BillFromDate.text;
				//var BillTo:String=DT_BillTo.text;
				var BillTo:String=ExpChkoutDT;
				var D:String=BillF.substr(0,2);
				var M:String=BillF.substr(3,2);
				var Y:String=BillF.substr(6,10);
				var D1:String=BillTo.substr(0,2);
				var M1:String=BillTo.substr(3,2);
				var Y1:String=BillTo.substr(6,10);
				var RangeMiddle:String=Y+'/'+M+'/'+D;
				var RangeEnd:String=Y1+'/'+M1+'/'+D1;
				var RangeStart:String=Y+'/'+M+'/'+D;
				DT_BillTo.selectableRange = 
					{rangeStart:new Date(RangeStart),rangeEnd:new Date(RangeEnd)};
				DT_BillTo.selectedDate=new Date(RangeEnd);
				
				// TODO Auto-generated method stub
				DT_BillFromDate.enabled=false;
				DT_BillTo.enabled=false;
				//Sctrl.enabled=false;
				FnClear();
				FnServiceClr();
				bdr_Tariff.enabled=false;
			//	bdr_Service.enabled=false;
			//	FnSettleClr();
			}
			
			protected function Intermediate_clickHandler(event:MouseEvent):void
			{
				Chk_PIInvoice.visible=false;
				var BillF:String=DT_BillFromDate.text;
				//var BillTo:String=DT_BillTo.text;
				var BillTo:String=TodayDate;
				var BillTo1:String=ExpChkoutDT;
				
				if(ExpChkoutDT <= TodayDate)
				{
//					var BillF:String=DT_BillFromDate.text;
//					//var BillTo:String=DT_BillTo.text;
//					var BillTo:String=ExpChkoutDT;
					var D:String=BillF.substr(0,2);
					var M:String=BillF.substr(3,2);
					var Y:String=BillF.substr(6,10);
					var D1:String=BillTo1.substr(0,2);
					var M1:String=BillTo1.substr(3,2);
					var Y1:String=BillTo1.substr(6,10);
					var RangeMiddle:String=Y+'/'+M+'/'+D;
					var RangeEnd:String=Y1+'/'+M1+'/'+D1;
					var RangeStart:String=Y+'/'+M+'/'+D;
					DT_BillTo.selectableRange = 
						{rangeStart:new Date(RangeStart),rangeEnd:new Date(RangeEnd)};
					DT_BillTo.selectedDate=new Date(RangeEnd);
				}
				else 
				{
					var D:String=BillF.substr(0,2);
					var M:String=BillF.substr(3,2);
					var Y:String=BillF.substr(6,10);
					var D1:String=BillTo.substr(0,2);
					var M1:String=BillTo.substr(3,2);
					var Y1:String=BillTo.substr(6,10);
					var RangeMiddle:String=Y+'/'+M+'/'+D;
					var RangeEnd:String=Y1+'/'+M1+'/'+String(Number(D1)+1);
					var RangeStart:String=Y+'/'+M+'/'+D;
					DT_BillTo.selectableRange = 
						{rangeStart:new Date(RangeStart),rangeEnd:new Date(RangeEnd)};
					DT_BillTo.selectedDate=new Date(RangeEnd);
				}
				
				
				
				// TODO Auto-generated method stub
				DT_BillFromDate.enabled=true;
				DT_BillTo.enabled=true;
				
				//Sctrl.enabled=false;
				FnClear();
				FnServiceClr();
				bdr_Tariff.enabled=false;
			//	bdr_Service.enabled=false;
				//FnSettleClr();
			}
			
			protected function ProcessClear_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				FnSettleClr();
			}
			
			protected function Chk_PIInvoice_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
		]]>
	</fx:Script>
	<s:VGroup x="0" y="0" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
		
		<s:BorderContainer x="5" y="0" width="907" height="524" backgroundColor="#fbf9f9" borderVisible="false" >
			<!-- Guest Details  -->					   
			<s:Group x="2" y="2" width="904" height="518">
				<mx:Label x="5" y="104" text="Guest Name"/>
				<mx:Label x="5" y="50" width="201" text="Check Out Details" color="Red"/>
				<mx:Label x="5" y="134" width="36" text="Stay"/>
				<s:TextInput x="96" y="135" width="160" id="Txt_Stay" editable="false"/>
				<s:Label x="10" y="164" text="Type" visible="false"/>
				<s:TextInput x="93" y="159" width="168" id="Txt_type" visible="false"/>
				<mx:Label x="5" y="163" text="Room No"/>
				<s:TextInput x="96" y="164" width="160" id="Txt_bookinlevel" editable="false"/>
				<mx:Label x="5" y="317" text="Client"/>
				<s:TextInput x="96" y="317" width="160" id="Txt_Client"/>
				<mx:Label x="5" y="436" text="Property" visible="false"/>
				<s:TextInput x="96" y="435" width="160" id="Txt_Property" visible="false"/>
				
				<mx:Label x="5" y="158" text="CheckOut No" visible="false"/>
				<s:Label x="4" y="141" text="Guest Name" visible="false"/>
				<s:TextInput x="71" y="391" width="160" id="Txt_ChkoutNo" visible="false"/>
				<mx:Label x="5" y="190" text="Bill Date" visible="false"/>
				<s:TextInput x="96" y="287" width="160" id="Txt_Billdate"/>
				
				<s:BorderContainer x="257" y="44" width="648" height="474" id="bdr_Tariff" borderVisible="false" backgroundColor="#fbf9f9"
								   visible="true" enabled="false">
					<s:BorderContainer x="5" y="0" width="641" height="414" backgroundColor="#fbf9f9" borderVisible="true">
						<s:Scroller x="-10" y="0" width="640" height="412" depth="1">
							<s:Group x="3" y="2" width="641" height="412">
								<mx:Label x="10" y="8" width="169" text="Tariff - New Tariff Bill" color="Red"/>
								
								<mx:HRule x="45" y="30" width="550" height="2"/>
								<mx:HRule x="45" y="208" width="550" height="2"/>
								<mx:Label x="41" y="63" width="78" text="Total Tariff :"/>
								<mx:Label id="lbl_tariff" x="170" y="63" width="30" height="21"
										  text="" visible="true" textAlign="left"/>
								<mx:Label x="203" y="63" width="40" text="days" id="lbl_tariff1"/>
								<s:TextInput x="483" y="63" width="100" id="Txt_TotalTariff" textAlign="right" 
											 editable="false" prompt="0.00"/>
								<mx:Label x="41" y="100" width="219" text="Additional days charge : 1 day added" id="lbl_additional" visible="false"/>
								<s:CheckBox x="371" y="100" visible="false" id="Chk_change"  
											change="Chk_change_changeHandler(event)"/>
								<s:TextInput x="483" y="100" width="100" id="Txt_AdditionalCharge" editable="false" prompt="0.00" textAlign="right" visible="false"/>
								<s:Label x="41" y="93" width="91" text="Discount / Day" visible="false"/>
								<s:TextInput x="146" y="87" id="Txt_Discount" change="Txt_Discount_changeHandler()" textAlign="right" prompt="0.00" visible="false"/>
								<s:TextInput x="483" y="87" width="100" id="Txt_Totaldiscount" visible="false"
											 textAlign="right" editable="false" prompt="0.00"/>
								<s:Label x="17" y="208" text="Tariff Items" visible="false"/>
								<mx:HRule x="17" y="231" width="550" height="2" visible="false"/>
								<mx:HRule x="45" y="156" width="550" height="2" visible="true"/>
								<mx:HRule x="17" y="487" width="550" height="2"/>
								<mx:Label x="44" y="218" text="Luxury Tax @(" depth="100"/>
								<s:TextInput x="483" y="218" width="100" id="Txt_Luxury" textAlign="right" editable="false" prompt="0.00"/>
								<s:Label x="44" y="251" text="Service Tax @(7.20%) applied on Tariff " visible="false"/>
								<s:TextInput x="483" y="244" width="100" id="Txt_ServiceTax7" textAlign="right" editable="false" prompt="0.00" visible="false"/>
								<mx:Label x="136" y="258" text="%)applied on tariff items"/>
								<s:TextInput x="483" y="258" width="100" id="Txt_ServiceTax12" textAlign="right" editable="false" prompt="0.00"/>
								<mx:HRule x="45" y="293" width="550" height="2"/>
								<mx:VRule x="580" y="13" width="3" height="550" visible="false"/>							<mx:Label x="44" y="306" text="Service Charges @(2.5%) applied on Tariff Amount"/>
								<s:TextInput x="483" y="306" width="100" id="Txt_ServiceCharge2" prompt="0.00" textAlign="right"/>
								<mx:Label x="44" y="334" text="Service Tax @(12.00%) applied on Service Charges"/>
								<s:TextInput x="483" y="334" width="100" id="Txt_Servicecharge12" prompt="0.00" textAlign="right"/>
								<mx:Label x="44" y="365" text="Cess @(2%) applied on ServiceTax"/>
								<s:TextInput x="483" y="365" width="100" id="Txt_Cess" prompt="0.00" textAlign="right"/>
								<mx:Label x="44" y="397" text="HECess @(1%) applied on ServiceTax"/>
								<s:TextInput x="483" y="397" width="100" id="Txt_HECess" prompt="0.00" textAlign="right"/>
								<mx:Label x="44" y="434" text="Net Amount"/>
								<s:TextInput x="483" y="426" width="100" id="Txt_NetAmount" textAlign="right" editable="false"  prompt="0.00"/>
								<mx:HRule x="45" y="418" width="550" height="2"/>
								<s:Label x="17" y="498" text="Reference :"/>
								<s:TextInput x="84" y="496" width="200" id="Txt_referance" depth="10"/>
								<mx:Label id="lbl_tarffLT" x="122" y="218" width="25" height="22" text="" depth="100"/>
								<mx:Label x="146" y="218" text="%)applied on Net Tariff"/>
								
								<s:HGroup x="133" y="63" width="300" height="320" id="Grp_Tariff" visible="false" depth="100" >
									<s:BorderContainer width="301" height="329">
										<s:HGroup x="0" y="0" width="299" height="317">
											<s:Panel width="300" height="321" title="Tariff Items" depth="4000">
												<s:Image x="276" y="-24" source="@Embed(source='../Assets/CrossSmall.png')" 
														 buttonMode="true" toolTip="Close" click="FnClosetariff_clickHandler(event)"/>
												<s:DropDownList x="119" y="35" width="134" prompt="Extra Matress" id="ddl_Items">
													<s:ArrayList>
														<fx:String>Extra Matress</fx:String>
													</s:ArrayList>
												</s:DropDownList>
												<s:Label x="36" y="41" text="Items"/>
												<s:TextInput x="119" y="84" width="113" prompt="No of days" id="txt_itemdays"/>
												<s:TextInput x="119" y="176" width="139" prompt="Description" id="txt_itemsdescription" visible="false"/> 
												<s:Label x="36" y="87" text="Days"/>
												<s:TextInput x="119" y="128" width="113" id="txt_itemamt" restrict="0-9"/>
												<s:Label x="36" y="136" text="Amount"/>
												<s:Label x="36" y="181" text="Description" id="Txt_description" visible="false"/> 
												<WrbComp:Button_HB x="107" y="232" Lable_val="Add" id="Extra" click="FnAdd()">
												</WrbComp:Button_HB>
											</s:Panel>
										</s:HGroup>
									</s:BorderContainer>
								</s:HGroup>
								
								<mx:Label x="45" y="258" text="ServiceTax("/>
								<mx:Label id="lbl_TariffST" x="110" y="258" width="25" height="22" text=""/>
								<mx:Label id="lbl_Nettariff" x="115" y="63" width="47" height="22" text="" visible="true"/>
								<s:Label x="233" y="84" width="41" height="22" text="/Day" visible="false"/>
								<WrbComp:Button_HB x="466" y="166" width="130" click="Tariff_clickHandler(event)"
												   Lable_val="ExtraMatress" visible="true">
								</WrbComp:Button_HB>
								<mx:Label x="160" y="63" width="12" height="16" text="/" textAlign="center"/>
								<mx:Label x="41" y="130" text="Extra Matress"/>
								<mx:Label id="lbl_ExtraMatress" x="483" y="130" width="100"
										  text="0.00" textAlign="right"/>
								<s:CheckBox x="41" y="173" label="Service Charge" id="chk_ServiceCharge"  change="chk_ServiceCharge_changeHandler(event)"/>
								
								<!--	<WrbComp:Button_BB x="446" y="563" id="Sctrl1" click="FnClear()" Lable_val="Clear">
								</WrbComp:Button_BB> -->
							</s:Group>
							
						</s:Scroller>	
					</s:BorderContainer>
					<WrbComp:Button_BB id="Sctrl" x="445" y="422" height="30"
									   click="FnSave()" Lable_val="Generate Bill">
					</WrbComp:Button_BB>
					<WrbComp:Button_BB id="Sctrl0" x="546" y="422" height="30" click="FnSettleClr()"
									   Lable_val="Clear">
						
					</WrbComp:Button_BB>
					<WrbComp:SaveControl x="372" y="422" id="btn_Sctrl" docRefresh="Sctrl_docRefreshHandler(event)">
					</WrbComp:SaveControl>
					<s:CheckBox x="163" y="431" label="Proforma Invoice" id="Chk_PIInvoice" click="Chk_PIInvoice_clickHandler(event)" visible="false"/>
				</s:BorderContainer>
				<s:HGroup x="0" y="1" width="100%" height="40" horizontalAlign="center">
					<s:Spacer x="11" width="138" height="10"/>
					<WrbComp:TabButton_HB width="120" height="40" _Label="Tariff" click="btn_Tariff_clickHandler()" id="btn_Tariff"/>
					<WrbComp:TabButton_HB width="120" height="40" _Label="Service" click="btn_Service_clickHandler()" id="btn_Service" />
					<WrbComp:TabButton_HB width="120" height="40" _Label="Settlement" id="Btn_Settlement" 
										  click="Btn_Settlement_clickHandler()" enabled="false"/>
				</s:HGroup>
				<!-- Service -->
				<s:BorderContainer x="259" y="45" width="645" height="474" id="bdr_Service" backgroundColor="#fbf9f9" borderVisible="false" 
								   visible="false" depth="200">
					<s:BorderContainer x="4" y="0" width="641" height="393" backgroundColor="#fbf9f9">
						<s:Scroller x="-10" y="0" width="100%" height="100%" depth="1">
							<s:Group x="134" y="352" width="100%" height="100%" depth="100">
								
								<s:BorderContainer x="21" y="29" width="593" height="179" >
									<s:Scroller x="0" y="-1" width="595" height="190">
										<s:Group width="593" height="190" >
											<mx:DataGrid id="Grid_Service" x="-14" y="1"  verticalAlign="middle" editable="true" 
														 width="607" height="179" tabIndex="4" dataProvider="{ac}">
												<mx:columns>
													<mx:DataGridColumn dataField="Id" headerText="Id" width="50" editable="false" visible="false"/>
													<mx:DataGridColumn dataField="PropertyId" headerText="PropertyId" width="50" editable="false" visible="false"/>
													<mx:DataGridColumn dataField="ItemId" headerText="ItemId" width="50" editable="false" visible="false"/>
													<mx:DataGridColumn dataField="Quantity" headerText="Quantity" width="50" editable="false" visible="false"/>
													<mx:DataGridColumn dataField="GuestId" headerText="RoomId" width="50" editable="false" visible="false"/>
													<mx:DataGridColumn dataField="Action" headerText="Action" width="80" editable="false" visible="true">
														<mx:itemRenderer>
															<fx:Component>
																<mx:HBox horizontalAlign="center" verticalAlign="middle">										
																	<mx:Image source="@Embed(source='../assets/delete.png')" buttonMode="true"
																			  click="outerDocument.DeleteGrid1()"/>
																</mx:HBox>
															</fx:Component>
														</mx:itemRenderer>
														
														<!--	<mx:itemRenderer >
														<fx:Component>
														<mx:HBox horizontalAlign="center" verticalAlign="middle">
														<mx:CheckBox selected="{data.checks}"  
														/>
														</mx:HBox>	
														</fx:Component>
														</mx:itemRenderer> -->
													</mx:DataGridColumn>
													<mx:DataGridColumn dataField="Date" headerText="Date" width="100" editable="false"/>
													<mx:DataGridColumn dataField="ServiceItem" headerText="Item" width="100" editable="false"/>
													<mx:DataGridColumn dataField="Amount" headerText="Amount" width="80" editable="false"/>
													<mx:DataGridColumn dataField="TypeService" headerText="TypeService" width="80" editable="false" visible="false"/>
												</mx:columns>
											</mx:DataGrid> 
										</s:Group>
									</s:Scroller>
								</s:BorderContainer>	
								<mx:Label x="10" y="6" text="Service - New Service Bill" color="Red"/>
								<mx:Label x="49" y="260" text="Total Service Bill Amount"/>
								<s:TextInput x="470" y="260" id="Txt_ServiceBillAmt" textAlign="right" prompt="0.00" editable="false"/>
								<mx:Label x="49" y="285" text="Vat @  " id="lbl_ServiceVat"/>
								<s:TextInput x="470" y="285" id="Txt_ServiceVat" textAlign="right" prompt="0.00" editable="false"/>
								<mx:Label x="49" y="313" text="Service Tax @ "/>
								<s:TextInput x="470" y="313" id="Txt_SerivceTax" prompt="0.00" textAlign="right" editable="false"/>
								<WrbComp:Button_HB x="485" y="219" width="99" Lable_val="Add Services" click="Add_clickHandler(event)" visible="true">
								</WrbComp:Button_HB>
								<s:HGroup x="125" y="10" width="347" height="313" id="Grp_Service" depth="10000" visible="false">
									<s:BorderContainer width="346" height="314" borderVisible="false" backgroundAlpha="0.1">
										<s:HGroup x="0" y="4" width="347" height="338">
											<s:Panel width="346" height="310" title="Add New Service">
												<s:Image x="319" y="-24" source="@Embed(source='../Assets/CrossSmall.png')" 
														 buttonMode="true" toolTip="Close" click="FNClose(event)"/>
												<s:Label x="45" y="32" text="Item"/>
												<WrbHelpComp:HelpText x="123" y="28" width="162" id="hlp_item" 
																	  pxSetHeight="183" depth="46"
																	  pxSetColumnsWidth="0,160,140,0"
																	  onselection="{OnSelectionItemname()}">
												</WrbHelpComp:HelpText>
												<s:Label x="45" y="85" text="Amount"/>
												<s:TextInput x="123" y="79" id="Txt_ItemAmount" editable="false" prompt="0.00" textAlign="right"/>
												<s:Label x="45" y="137" text="Date" />
												<mx:DateField x="123" y="130" width="126" yearNavigationEnabled="true" id="dt_ServiceDate" 
															  formatString="DD/MM/YYYY" selectableRange="{{rangeEnd:new Date()}}"
															  styleName="DisabledDateField"/>
												
												<WrbComp:Button_HB x="129" y="209" Lable_val="Add" click="AddToGrid()">
												</WrbComp:Button_HB>
											</s:Panel>
											
										</s:HGroup>
									</s:BorderContainer>
								</s:HGroup>
								<mx:HRule x="44" y="423" width="550"/>
								<mx:Label x="49" y="430" text="Net Amount"/>
								<s:TextInput x="470" y="430" id="Txt_ServiceNetAmount" prompt="0.00" textAlign="right" editable="false"/>
								<mx:HRule x="45" y="456"  width="550"/>
								
								<mx:Label id="lbl_ServiceVAT" x="90" y="285" width="40" height="19"
										  text=""/>
								<mx:Label x="128" y="285" height="19" text="%"/>
								<mx:Label x="130" y="314" width="41" height="19" id="lbl_ST"/>
								<mx:Label x="170" y="314" width="160" text="%  on Food and Bevrages"/>
								<mx:Label x="49" y="368" text="Education Cess @2.00%"/>
								<s:TextInput x="470" y="368" id="Txt_ServiceEcess" prompt="0.00" enabled="false" textAlign="right"/>
								<mx:Label x="49" y="396" text="Secondary and Higher Education Cess @1.00%" />
								<s:TextInput x="470" y="396" id="Txt_serviceHECess" prompt="0.00" textAlign="right" enabled="false"/>
								<mx:Label x="49" y="340" text="Service Tax @ " id="Lbl_ServiceOthers"/>
								<mx:Label id="lbl_BST" x="134" y="340" width="41" text=""/>
								<mx:Label x="173" y="340" text="% on Others"/>
								<s:TextInput x="470" y="340" id="Txt_BST" editable="false" prompt="0.00" textAlign="right"/>
								<s:CheckBox x="22" y="226" label="Miscellaneous" id="Chk_Miscellaneous" change="checkbox1_changeHandler(event)"/>
								<s:TextInput x="129" y="224" prompt="Amount" restrict="0-9" visible="false" textAlign="right" id="txt_MiscellaneousAmount" focusOut="txt_MiscellaneousAmount_focusOutHandler(event)"/>
								<s:TextInput x="279" y="224" width="186" prompt="Remarks" visible="false" maxChars="30" textAlign="left" id="txt_MiscellaneousRemarks"/>
								
								
							</s:Group>
						</s:Scroller>
					</s:BorderContainer>
					<WrbComp:Button_HB x="394" y="429"  click="FnServiceSave()" Lable_val="Generate Bill" id="Btn_ServiceGenerate">
					</WrbComp:Button_HB>
					<WrbComp:Button_HB x="505" y="429"  click="FnSettleClr()" Lable_val="Clear">
					</WrbComp:Button_HB>
				</s:BorderContainer>
				<s:TextInput x="96" y="132" width="160" id="Txt_Name" enabled="false" visible="false"/>
				
				<s:BorderContainer x="255" y="43" width="648" height="474" backgroundColor="#fbf9f9" borderVisible="false"
								   visible="false" id="bdr_Settle" depth="300" >
					<mx:DataGrid id="Grid_Settle" x="23" y="22"  verticalAlign="middle" editable="true" 
								 width="589" height="109" tabIndex="4" >
						<mx:columns>
							<mx:DataGridColumn dataField="Id" headerText="Id" width="50" editable="false" visible="false"/>
							<mx:DataGridColumn dataField="PropertyId" headerText="PropertyId" width="50" editable="false" visible="false"/>
							<mx:DataGridColumn dataField="GuestId" headerText="RoomId" width="50" editable="false" visible="false"/>
							<mx:DataGridColumn dataField="Print" headerText="Print" width="40" editable="false">
								<mx:itemRenderer >
									<fx:Component>
										<mx:HBox horizontalAlign="center" verticalAlign="middle">
											
											<mx:CheckBox selected="{data.checks}"  
														 change="outerDocument.FnSelect();"/>
										</mx:HBox>	
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn> 
							<mx:DataGridColumn dataField="BillType" headerText="Billtype" width="80" editable="false"/>
							<mx:DataGridColumn dataField="BillNo" headerText="CheckOutNo" width="0" editable="false" visible="false"/>
							<mx:DataGridColumn dataField="Amount" headerText="BillAmount" width="70" editable="false"/>
							<mx:DataGridColumn dataField="NetAmount" headerText="PaidAmount" width="70" editable="false"/>
							<mx:DataGridColumn dataField="OutStanding" headerText="OutStanding" width="70" editable="false"/>
							<mx:DataGridColumn dataField="PaymentStatus" headerText="PaymentStatus" width="90" editable="false" />
							<mx:DataGridColumn dataField="PreviosPaidAmount" headerText="PreviosPaidAmount" width="0" editable="false" visible="false"/>
							<!--	<mx:itemEditor>
							<fx:Component>
							<mx:ComboBox>
							<mx:dataProvider>
							<fx:String>Unpaid</fx:String>
							<fx:String>Paid</fx:String>
							</mx:dataProvider>
							</mx:ComboBox> 
							</fx:Component>
							</mx:itemEditor>
							</mx:DataGridColumn> -->
						</mx:columns>
					</mx:DataGrid>
					<s:CheckBox x="33" y="189" label="Consolidated" id="Chk_Select" click="Chk_Select_clickHandler(event)" visible="true"/>
					<WrbComp:Button_HB x="394" y="429"  click="FnSettleSave()" Lable_val="Check Out" id="btn_Settle" enabled="false">
					</WrbComp:Button_HB>
					<WrbComp:Button_HB x="505" y="429"  click="FnSettleClr()" Lable_val="Clear">
					</WrbComp:Button_HB>
					<mx:Label x="23" y="170" text="Payment" color="Red"/>
					<s:BorderContainer x="23" y="222" width="602" height="200" id="bdr_tarserpay" backgroundColor="#fbf9f9" borderVisible="false"
									   depth="500" visible="true">
						<mx:Label x="12" y="30" text="Payee Name" id="lbl_pName"/>
						<mx:Label x="323" y="30" text="Payee Name" />
						<s:TextInput id="Txt_Pname" x="96" y="30" width="159"/>
						<mx:Label x="12" y="59" text="Address"/>
						<mx:Label x="323" y="59" text="Address"/>
						<s:TextArea id="Txt_address" x="96" y="60" width="185" height="57" depth="10" />
						<mx:Label x="4" y="5" text="Tariff Payments" color="Red"/>
						<mx:Label x="309" y="5" text="Service Payments" color="Red"/>
						<WrbComp:Button_HB x="134" y="160" width="149" Lable_val="Add Payment" id="btn_TarPay" click="btn_TarPay_clickHandler(event)">
						</WrbComp:Button_HB>
						<WrbComp:Button_HB x="444" y="160" width="149" Lable_val="Add Payment" id="btn_SerPay" click="btn_SerPay_clickHandler(event)">
						</WrbComp:Button_HB>
						<s:TextInput x="418" y="30" width="159" id="Txt_SName"/>
						<s:TextInput x="418" y="60" width="175" height="57" id="Txt_SAddress"/>
						<mx:Label id="lbl_tariffpaid" x="118" y="125" width="78"/>
						<mx:Label id="lbl_tariffpaymode" x="198" y="125" width="94"/>
						<mx:Label x="12" y="125" text="Amount Paid"/>
						<mx:Label x="94" y="125" width="26" text="Rs:"/>
						<mx:Label x="321" y="125" text="Amount Paid"/>
						<mx:Label x="410" y="125" width="26" text="Rs:"/>
						<mx:Label id="lbl_ServicePaid" x="432" y="125" width="72" text=""/>
						<mx:Label id="lbl_ServicePayMode" x="506" y="125" width="90"/>
					</s:BorderContainer>
					<s:BorderContainer x="23" y="215" width="602" height="200" id="bdr_Consolidate" borderVisible="false" backgroundColor="#fbf9f9" 
									   visible="false">
						<mx:Label x="27" y="12" text="Consolidate Payment" color="Red"/>
						<mx:Label x="43" y="33" text="Payee Name" />
						<s:TextInput  x="147" y="33" width="159" id="Txt_CName"/>
						<mx:Label x="47" y="64" text="Address"/>
						<s:TextArea  x="146" y="64" width="185" height="57" id="Txt_CAddress"/>
						<WrbComp:Button_HB x="186" y="163" width="149" Lable_val="Add Payment" id="btn_ConPay" click="btn_ConPay_clickHandler(event)">
						</WrbComp:Button_HB>
						<mx:Label x="48" y="136" text="Amount Paid :"/>
						<mx:Label x="131" y="136" text="Rs :"/>
						<mx:Label id="lbl_ConPaid" x="161" y="136" width="86" text=""/>
						<mx:Label x="251" y="136" width="84" text="" id="lbl_ConPaymode"/>
					</s:BorderContainer>
					<WrbComp:SaveControl x="325" y="430" id="btn_Sctrl1" docRefresh="btn_Sctrl1_docRefreshHandler()">
					</WrbComp:SaveControl>
				</s:BorderContainer>
				<mx:Label x="5" y="74" text="Property"/>
				<WrbHelpComp:HelpText x="96" y="94" width="160"  visible="false">
				</WrbHelpComp:HelpText>
				<s:BorderContainer x="275" y="49" width="605" height="459" depth="900" id="bdr_TariffPay1" visible="false" backgroundColor="#fbf9f9">
					<s:BorderContainer x="0" y="10" width="603" height="40" borderVisible="false">
						<s:Label x="15" y="13" text="Tariff Payment" color="Red"/>
						<s:Image x="560" y="11" source="@Embed(source='../Assets/CrossSmall.png')" 
								 buttonMode="true" toolTip="Close" click="FNClose1(event)"/>
					</s:BorderContainer>
					<mx:Label x="29" y="60" text="Advance Amount Available :"/>
					<mx:Label x="29" y="89" text="Amount to be Paid               :"/>
					<s:TextInput x="191" y="57" id="Txt_Tariffadvance" editable="false"/>
					<s:TextInput x="191" y="85" id="Txt_TariffLoad" editable="false" prompt="0.00" textAlign="right" />
					<mx:HRule x="27" y="114" width="500" height="1"/>
					<mx:Label x="29" y="132" width="154"
							  text="Amount Paid                         :"/>
					<s:TextInput x="191" y="130" id="Txt_TariffPayAmount" restrict="0-9." prompt="0.00" textAlign="right" focusOut="Txt_TariffPayAmount_changeHandler()"
								 />
					<mx:Label x="29" y="159" width="154" height="21"
							  text="Payment  Mode                    :"/>
					<s:HGroup x="191" y="159" width="403" height="21" gap="10">
						<s:RadioButton id="Cash" height="22" label="Cash" buttonMode="true"
									   click="TariffCash_clickHandler(event)"
									   groupName="radiogroup1" value="Cash"/>
						<s:RadioButton id="CreditCard" height="22" label="Credit Card"
									   buttonMode="true"
									   click="TariffCreditCard_clickHandler(event)"
									   groupName="radiogroup1" value="Card"/>
						<s:RadioButton id="Cheque" height="22" label="Cheque" buttonMode="true"
									   click="TariffCheque_clickHandler(event)"
									   groupName="radiogroup1" value="Cheque"/>
						<s:RadioButton id="CompanyInvoice" height="22" label="Company Invoice"
									   buttonMode="true"
									   click="TariffCompanyInvoice_clickHandler(event)"
									   groupName="radiogroup1" value="CompanyInvoice"/>
						<s:RadioButton id="NEFT" height="22" label="NEFT" buttonMode="true"
									   click="TariffNEFT_clickHandler(event)"
									   groupName="radiogroup1" value="NEFT"/>
					</s:HGroup>
					<WrbComp:Button_HB x="134" y="409" width="154" Lable_val="Add Payment" click="AddTariffPayment()">
					</WrbComp:Button_HB>
					<s:Label x="182" y="130" text="*" styleName="ReqLable" color="red"/>
					<s:BorderContainer x="95" y="11" width="481" height="415" id="bdr_PaymentCredit" visible="false" 
									   depth="1000">
						<s:Image x="430" y="20" source="@Embed(source='../Assets/CrossSmall.png')" 
								 buttonMode="true" toolTip="Close" click="FNClose2(event)"/>
						<s:Label x="45" y="28" text="Card Details                       " color="Red"/>
						<s:TextInput x="263" y="63" width="200" id="Txt_PaymentCardDtl" visible="false"/>
						<s:Label x="64" y="77" text="CC Brand                            :"/>
						<s:DropDownList x="235" y="73" width="174" id="ddl_PaymentCCBrand">
							<mx:ArrayCollection>
								<fx:String>MasterCard</fx:String>
								<fx:String>VISACard</fx:String>
								<fx:String>AmericanExpress</fx:String>
								<fx:String>Discover</fx:String>
								<fx:String>MaestroCard</fx:String>
							</mx:ArrayCollection>
						</s:DropDownList>
						<s:Label x="64" y="120" text="Name of the Credit Card  :"/>
						<s:TextInput x="235" y="117" width="174" id="Txt_PaymentCardName"/>
						<s:Label x="64" y="154" text="Credit Card Number         :"/>
						<s:TextInput id="Txt_PaymentCardNo" x="235" y="151" width="174"
									 restrict="0-9" maxChars="4"/>
						<s:Label x="64" y="175" text="(Last 3/4 Digits)"/>
						<s:Label x="64" y="203" text="Expiry Date                         :"/>
						<mx:DateField x="235" y="196" width="115" id="dte_PaymentExpirydate" visible="false"/>
						<s:Label x="64" y="236" text="ROC                                     :"/>
						<s:TextInput x="235" y="236" width="174" id="Txt_PaymentRoc"/>
						<s:Label x="64" y="272" text="SOC/Batch Close No        :"/>
						<s:TextInput x="235" y="268" width="174" id="Txt_PaymentSoc" />
						<s:Label x="64" y="304" width="167" text="Amount swiped For           :"/>
						<s:TextInput x="235" y="300" width="174" id="Txt_PaymentAmountSwip" restrict="0-9" prompt="0.00" textAlign="right"/>
						<WrbComp:Button_BB x="194" y="362" width="118" Lable_val="Add" click="AddTariffPay_bb1_clickHandler(event)">
						</WrbComp:Button_BB>
						<s:Label x="223" y="75" text="*" styleName="ReqLable" color="red"/>
						<s:Label x="223" y="118" text="*" styleName="ReqLable" color="red"/>
						<s:Label x="223" y="152" text="*" styleName="ReqLable" color="red"/>
						<s:Label x="223" y="199" text="*" styleName="ReqLable" color="red"/>
						<s:Label x="223" y="300" text="*" styleName="ReqLable" color="red"/>
						<s:TextInput x="236" y="196" width="32" id="Txt_TarCardDateMonth" prompt="MM" restrict="0-9" textAlign="center" maxChars="2"/>
						<s:TextInput x="271" y="196" width="41" id="Txt_TarCardDateYear" prompt="YYYY" restrict="0-9" textAlign="center" maxChars="4"/>
					</s:BorderContainer>
					<WrbComp:Button_HB x="322" y="409" width="120" Lable_val="Clear" click="TariffPayClr()">
					</WrbComp:Button_HB>
					<s:BorderContainer x="87" y="208" width="445" height="120" id="bdr_TariffCash1" visible="false">
						
						<s:DropDownList x="180" y="69" width="126" id="ddl_CashReceivedby" visible="true" prompt="Please Select Manager"
										change="ddl_CashReceivedby_changeHandler(event)">
						</s:DropDownList>
						<s:TextInput x="180" y="27" id="Txt_Cashreceive" visible="false"/>
						<s:Label x="18" y="32" text="Cash Received On              :" id="lbl_Cashrecive" visible="true"/>
						<s:Label x="18" y="73" text="Cash Received By               :" id="lbl_CashReceive1" visible="true"/>
						<s:Label x="172" y="27" text="*" styleName="ReqLable" color="red" id="star1" visible="true"/>
						<mx:DateField id="DT_TariffCashDate" x="180" y="25" width="103" formatString="DD/MM/YYYY"
									  selectableRange="{{rangeEnd: new Date()}}" change="DT_TariffCashDate_changeHandler(event)"/>
						
					</s:BorderContainer>
					<s:BorderContainer x="52" y="196" width="498" height="165" id="bdr__TariffCheq1" visible="false">
						<mx:DateField x="243" y="98" width="126" id="dte_CheqDate" visible="true" formatString="DD/MM/YYYY"
									  selectableRange="{{rangeEnd: new Date()}}"/>
						<s:TextInput x="243" y="63" width="172" id="Txt_CheqBankname" visible="true"/>
						<s:TextInput id="Txt_PaymentChecqNO" x="243" y="29" width="172" visible="true"/>
						<s:Label id="lbl_ChqTariff" x="71" y="34" width="149"
								 text="Cheque Number                 :" visible="true"/>
						<s:Label id="lbl_PaymentBankname"  x="71" y="69" width="149"
								 text="Bank Name                          :" visible="true"/>
						<s:Label x="71" y="106" width="149" text="Date Issued                          :" id="lbl_CheqDate" visible="true"/>
						<s:TextInput x="243" y="101" width="37" id="Txt_TarCheqDateMonth" prompt="MM" restrict="0-9" textAlign="center" maxChars="2" visible="false"/>
						<s:TextInput x="283" y="101" width="50" id="Txt_TarCheqDateYear" prompt="YYYY" restrict="0-9" textAlign="center" maxChars="4" visible="false"/>
						<s:Label x="233" y="31" text="*" styleName="ReqLable" color="red"/>
					</s:BorderContainer>
					<s:BorderContainer x="57" y="194" width="466" height="205" id="bdr_TariffCompinvoice1" visible="false">
						<s:TextInput x="223" y="94" width="178" id="Txt_CmpnyAppru"  visible="true"/>
						<s:TextInput x="223" y="120" width="178" id="Txt_TariffCmpReq" visible="true"/>
						<s:TextInput x="223" y="147" width="178" id="Txt_TariffCmpEmail" visible="true"/>
						<s:TextInput x="223" y="175" width="178" id="Txt_TariffCmpPhone" visible="true"/>
						<mx:Label id="lbl_TariffCIapp" visible="true" x="56" y="94" width="156"
								  text="Approver                                :"/>
						<mx:Label id="lbl_TariffCmpReq" visible="true" x="56" y="121" width="156"
								  text="Requester                             :"/>
						<mx:Label id="lbl_TariffCmpEmail" visible="true" x="56" y="147" width="156"
								  text="Email ID                                 :"/>
						<mx:Label id="lbl_TariffCmpPhone" visible="true" x="56" y="175" width="156"
								  text="Phone No                               :"/>
						
						<mx:Panel x="59" y="10" height="70" title="File Uploader">
							<mx:ControlBar>
								<mx:Spacer width="80%"/>
								<mx:HBox>
									<mx:TextInput id="FilePath" width="150"  visible="true"/>
									<mx:Button id="Filedata" label="Browse File" name="Filedata" />
									<mx:Button label="UpLoad File" name="uploadbutton" id="uploadbutton" visible="false" width="0" />
								</mx:HBox>
								<mx:TextArea id="resultsTxtField"  width="0"  name="resultsTxtField" visible="false"/>
							</mx:ControlBar>
						</mx:Panel>
						
					</s:BorderContainer>
					<s:BorderContainer x="66" y="200" width="478" height="164" id="bdr_TariffNEFT1" visible="false">
						<s:TextInput x="220" y="31" width="189" id="Txt_TariffNEFTRef" visible="true"/>
						<mx:DateField x="220" y="64" width="126" id="dte_NEFTDdate" visible="true" formatString="DD/MM/YYYY"
									  selectableRange="{{rangeEnd: new Date()}}"/>
						<s:TextInput x="220" y="99" width="189" id="Txt_TariffNEFTBankName" visible="true"/>
						<s:Label x="48" y="37" text="Referance Number             :" id="lbl_TariffNEFTRef" visible="true"/>
						<s:Label x="48" y="71" text="Date Of NEFT                       :" id="lbl_TariffNEFTDate" visible="true"/>
						<s:Label x="48" y="103" text="Bank Name                           :" id="lbl_TariffNEFTBank" visible="true"/>
						<s:TextInput x="220" y="68" width="36" id="Txt_TarNEFTDateMonth" prompt="MM" restrict="0-9" textAlign="center" maxChars="2" visible="false"/>
						<s:TextInput x="259" y="68" width="44" id="Txt_TarNEFTDateYearh" prompt="YYYY" restrict="0-9" textAlign="center" maxChars="4" visible="false"/>
					</s:BorderContainer>
					<mx:Label x="325" y="132" text="OutStanding :"/>
					<s:TextInput x="412" y="130" id="txt_TariffOutstanding" editable="false" prompt="0.00" textAlign="right"/>
					<!--<s:DropDownList x="191" y="206" width="188" id="ddl_Paymentmode" selectedItem="Cash">
					<mx:ArrayCollection>
					<fx:String>Cash</fx:String>
					<fx:String>CreditCard</fx:String>
					<fx:String>Cheque</fx:String>
					<fx:String>CompanyInvoice</fx:String>
					<fx:String>NEFT</fx:String>
					</mx:ArrayCollection>
					</s:DropDownList>-->
					
					
				</s:BorderContainer>
				<s:BorderContainer x="275" y="49" width="605" height="459" depth="900" id="bdr_SerPay1" visible="false" backgroundColor="#fbf9f9">
					<s:BorderContainer x="0" y="10" width="603" height="40" borderVisible="false">
						<s:Label x="15" y="13" text="Service Payment" color="Red"/>
						<s:Image x="560" y="11" source="@Embed(source='../Assets/CrossSmall.png')" 
								 buttonMode="true" toolTip="Close" click="FNClose1(event)"/>
					</s:BorderContainer>
					<mx:Label x="29" y="68" text="Advance Amount Available :"/>
					<mx:Label x="29" y="100" text="Amount to be Paid               :"/>
					<s:TextInput x="191" y="68" id="Txt_ServiceAdvance" editable="false" prompt="0.00" textAlign="right" />
					<s:TextInput x="191" y="96" id="Txt_ServiceLoad" editable="false" prompt="0.00" textAlign="right" />
					<mx:HRule x="39" y="126" width="500" height="1"/>
					<!--<s:Label x="29" y="143" text="Settlement Status                :"/>
					<s:DropDownList x="191" y="138" width="188" id="ddl_ServiceStatus" selectedItem="UnSettled">
					<mx:ArrayCollection>
					<fx:String>Settled</fx:String>
					<fx:String>UnSettled</fx:String>
					</mx:ArrayCollection>
					</s:DropDownList> -->
					<mx:Label x="29" y="138" text="Amount Paid                         :"/>
					
					<s:TextInput x="191" y="138" id="Txt_ServicePayAmount" textAlign="right" restrict="0-9."   prompt="0.00" focusOut="Txt_ServicePayAmount_changeHandler()"/>
					<mx:Label x="29" y="167" height="21" text="Payment  Mode                    :"/>
					<s:HGroup x="191" y="167" width="403" height="21" gap="10">
						<s:RadioButton id="Cash1" height="22" label="Cash" buttonMode="true"
									   click="ServicePayCash1_clickHandler(event)"
									   groupName="radiogroup1" value="Cash"/>
						<s:RadioButton id="CreditCard1" height="22" label="Credit Card"
									   buttonMode="true"
									   click="ServicePayCreditCard1_clickHandler(event)"
									   groupName="radiogroup1" value="Card"/>
						<s:RadioButton id="Cheque1" height="22" label="Cheque" buttonMode="true"
									   click="ServicePayCheque1_clickHandler(event)"
									   groupName="radiogroup1" value="Cheque"/>
						<s:RadioButton id="CompanyInvoice1" height="22" label="Company Invoice"
									   buttonMode="true"
									   click="ServicePayCompanyInvoice1_clickHandler(event)"
									   groupName="radiogroup1" value="CompanyInvoice"/>
						<s:RadioButton id="NEFT1" height="22" label="NEFT" buttonMode="true"
									   click="ServicePayNEFT1_clickHandler(event)"
									   groupName="radiogroup1" value="NEFT"/> 
					</s:HGroup>
					<WrbComp:Button_HB x="151" y="412" width="153" Lable_val="Add Payment" click="AddServicePayment()" >
					</WrbComp:Button_HB>
					<s:BorderContainer x="115" y="25" width="471" height="409" id="bdr_ServicePaymentCredit" visible="false" 
									   depth="1000">
						<s:Image x="435" y="18" source="@Embed(source='../Assets/CrossSmall.png')" 
								 buttonMode="true" toolTip="Close" click="FNClose4(event)"/>
						<s:Label x="34" y="27" text="Card Details                       " color="red"/>
						<s:TextInput x="263" y="63" width="200" id="Txt_ServicePaymentCardDtl" visible="false"/>
						<s:Label x="49" y="85" text="CC Brand                            :"/>
						<s:DropDownList x="220" y="81" width="174" id="ddl_ServicePaymentCCBrand">
							<mx:ArrayCollection>
								<fx:String>MasterCard</fx:String>
								<fx:String>VISACard</fx:String>
								<fx:String>AmericanExpress</fx:String>
								<fx:String>Discover</fx:String>
								<fx:String>MaestroCard</fx:String>
							</mx:ArrayCollection>
						</s:DropDownList>
						<s:Label x="49" y="120" text="Name of the Credit Card  :"/>
						<s:TextInput x="220" y="117" width="174" id="Txt_ServicePaymentCardName"/>
						<s:Label x="49" y="154" text="Credit Card Number         :"/>
						<s:TextInput id="Txt_ServicePaymentCardNo" x="220" y="151" width="174"
									 restrict="0-9" maxChars="4"/>
						<s:Label x="49" y="175" text="(Last 3/4 Digits)"/>
						<s:Label x="49" y="203" text="Expiry On                             :"/>
						<mx:DateField x="220" y="194" width="115" id="dte_ServicePaymentExpirydate" visible="false"/>
						<s:Label x="49" y="236" text="ROC                                     :"/>
						<s:TextInput x="220" y="231" width="174" id="Txt_ServicePaymentRoc"/>
						<s:Label x="49" y="269" text="SOC/Batch Close No        :"/>
						<s:TextInput x="220" y="265" width="174" id="Txt_ServicePaymentSoc" />
						<s:Label x="49" y="302" width="167" text="Amount swiped For           :"/>
						<s:TextInput x="220" y="296" width="174" id="Txt_ServicePaymentAmountSwip" restrict="0-9" prompt="0.00" textAlign="right"/>
						<WrbComp:Button_BB x="192" y="357" width="118" Lable_val="Add" click="AddService_bb1_clickHandler(event)">
						</WrbComp:Button_BB> 
						<s:Label x="203" y="82" text="*" styleName="ReqLable" color="red"/>
						<s:Label x="203" y="117" text="*" styleName="ReqLable" color="red"/>
						<s:Label x="203" y="151" text="*" styleName="ReqLable" color="red"/>
						<s:Label x="203" y="197" text="*" styleName="ReqLable" color="red"/>
						<s:Label x="203" y="270" text="*" styleName="ReqLable" color="red"/>
						<s:Label x="203" y="302" text="*" styleName="ReqLable" color="red"/>
						<s:TextInput x="220" y="195" width="41" restrict="0-9" maxChars="2" prompt="MM" textAlign="center" id="Txt_SerCardExpirymonth"/>
						<s:TextInput x="265" y="195" width="39" restrict="0-9" maxChars="4" prompt="YYYY" textAlign="center" id="Txt_SerCardExpiryYear"/>
						
					</s:BorderContainer> 
					<WrbComp:Button_HB x="344" y="412" width="153" Lable_val="Clear" click="ServicePayClr()">
					</WrbComp:Button_HB>
					<s:BorderContainer x="94" y="218" width="431" height="144" id="bdr_ServiceCash1" visible="false">
						<s:TextInput id="Txt_ServiPayCash" visible="false" x="199" y="35" width="88" />
						<s:DropDownList x="199" y="72" width="166" id="ddl_ServiPayCashRecBy" visible="true" prompt="Please Select Manager"
										change="ddl_ServiPayCashRecBy_changeHandler(event)">
							
						</s:DropDownList>
						<s:Label x="45" y="41" text="Cash Received On              :" id="lbl_servPayCashRece" visible="true"/>
						<s:Label x="45" y="77" text="Cash Received By               :" id="lbl_ServiPayCashreby" visible="true"/>
						<mx:DateField id="DT_SerpayCashdate" x="199" y="34" width="109"
									  formatString="DD/MM/YYYY"
									  selectableRange="{{rangeEnd: new Date()}}"/>
						<s:Label x="314" y="36" text="*" styleName="ReqLable" color="red"/>
					</s:BorderContainer>
					<s:BorderContainer x="48" y="208" width="483" height="145" visible="false" id="bdr_ServiceCheque1">
						<s:TextInput id="Txt_ServicePaymentChecqNO" visible="true" x="216" y="28"
									 width="194" height="20"/>
						<s:TextInput id="Txt_ServicePayCheqBankname" visible="true" x="216" y="59"
									 width="194" height="20"/>
						<mx:DateField x="216" y="91" width="126" id="dte_ServiceCheqDate" visible="true" formatString="DD/MM/YYYY"
									  selectableRange="{{rangeEnd: new Date()}}"/>
						<s:Label id="lbl_ServicePayChqTariff" x="62" y="31" width="149"
								 text="Cheque Number                 :" visible="true"/>
						<s:Label id="lbl_ServicePaymentBankname"  x="62" y="63" width="149"
								 text="Bank Name                          :" visible="true"/>
						<s:Label x="62" y="96" width="149" text="Date Issued                          :" id="lbl_ServiceCheqDate" visible="true"/>
						<s:TextInput x="215" y="92" width="32" id="Txt_SerCheqDateMonth" resizeEffect="0-9" maxChars="2" prompt="MM" textAlign="center" visible="false"/>
						<s:TextInput x="252" y="92" width="46" id="Txt_SerCheqDateYear" resizeEffect="0-9" maxChars="4" prompt="YYYY" textAlign="center" visible="false"/>
					</s:BorderContainer>
					<s:BorderContainer x="61" y="205" width="473" height="199" id="bdr_ServiceCompaInvoice1" visible="false">
						<mx:Panel x="59" y="10" height="70" title="File Uploader">
							<mx:ControlBar>
								<mx:Spacer width="80%"/>
								<mx:HBox>
									<mx:TextInput id="FilePath1" width="150"  visible="true"/>
									<mx:Button id="Filedata1" label="Browse File" name="Filedata" />
									<mx:Button label="UpLoad File" name="uploadbutton" id="uploadbutton1" visible="false" width="0" />
								</mx:HBox>
								<mx:TextArea id="resultsTxtField1"  width="0"  name="resultsTxtField" visible="false"/>
							</mx:ControlBar>
						</mx:Panel>
						<s:TextInput x="226" y="83" width="178" id="Txt_ServiceCmpnyAppru"  visible="true"/>
						<s:TextInput x="226" y="112" width="178" id="Txt_servicePayCmpReq" visible="true"/>
						<s:TextInput x="226" y="138" width="178" id="Txt_ServicePayCmpEmail" visible="true"/>
						<s:TextInput x="226" y="165" width="178" id="Txt_ServicePayCmpPhone" visible="true" restrict="0-9"/>
						<mx:Label id="lbl_ServicePayCIapp" visible="true" x="61" y="83" width="153"
								  text="Approver                                :"/>
						<mx:Label id="lbl_ServicePayCmpReq" visible="true" x="61" y="112" width="153"
								  text="Requester                             :"/>
						<mx:Label id="lbl_SerivcePayCmpEmail" visible="true" x="61" y="138"
								  width="158" text="Email ID                                 :"/>
						<mx:Label id="lbl_ServicePayCmpPhone" visible="true" x="61" y="165"
								  width="153" text="Phone No                              :"/>
					</s:BorderContainer>
					<s:BorderContainer x="54" y="211" width="476" height="158" id="bdr_ServiceNEFT1" visible="false">
						<s:TextInput x="216" y="25" width="189" id="Txt_ServiceNEFTRef" visible="true"/>
						<mx:DateField x="216" y="62" width="126" id="dte_ServicePayNEFTDdate" visible="true" formatString="DD/MM/YYYY"
									  selectableRange="{{rangeEnd: new Date()}}"/>
						<s:TextInput x="216" y="105" width="189" id="Txt_SrvicePayBankName" visible="true"/>
						<s:Label x="51" y="32" text="Referance Number             :" id="lbl_ServicePayNEFTRef" visible="true"/>
						<s:Label x="51" y="69" text="Date Of NEFT                       :" id="lbl_ServicePayNEFTDate" visible="true"/>
						<s:Label x="51" y="108" text="Bank Name                           :" id="lbl_ServicePayNEFTBank" visible="true"/>
						<s:TextInput x="216" y="65" width="34" id="Txt_SerNEFTDateMonth" prompt="MM" restrict="0-9" textAlign="center" maxChars="2" visible="false"/>
						<s:TextInput x="254" y="65" width="47" id="Txt_SerNEFTDateYear" prompt="YYYY" restrict="0-9" textAlign="center" maxChars="4" visible="false"/>
					</s:BorderContainer>
					<mx:Label x="329" y="138" text="OutStanding" />
					<s:TextInput x="410" y="138" id="Txt_ServiceOutStanding" editable="false" prompt="0.00" textAlign="right"/>
					
					
					<!--	<s:DropDownList x="191" y="206" width="188" id="ddl_ServicePayment" selectedItem="Cash">
					<mx:ArrayCollection>
					<fx:String>Cash</fx:String>
					<fx:String>CreditCard</fx:String>
					<fx:String>Cheque</fx:String>
					<fx:String>CompanyInvoice</fx:String>
					<fx:String>NEFT</fx:String>
					</mx:ArrayCollection>
					</s:DropDownList> -->
				</s:BorderContainer>
				<s:BorderContainer  x="275" y="49" width="605" height="459" depth="900" id="bdr_ConPay1" backgroundColor="#fbf9f9" visible="false">
					<s:BorderContainer x="0" y="10" width="603" height="40" borderVisible="false">
						<s:Label x="15" y="13" text="Consolidate Payment" color="Red"/>
						<s:Image x="560" y="11" source="@Embed(source='../Assets/CrossSmall.png')" 
								 buttonMode="true" toolTip="Close" click="FNClose1(event)"/>
					</s:BorderContainer>
					<mx:Label x="29" y="68" text="Advance Amount Available :"/>
					<mx:Label x="29" y="100" text="Amount to be Paid               :"/>
					<s:TextInput x="191" y="68" id="Txt_ConAdvance" editable="false" prompt="0.00" textAlign="right"/>
					<s:TextInput x="191" y="100" id="Txt_ConsolidateLoad" editable="false" prompt="0.00" textAlign="right"  />
					<mx:HRule x="27" y="126" width="500" height="1"/>
					<!--<s:Label x="29" y="143" text="Settlement Status                :"/>
					<s:DropDownList x="191" y="138" width="188" selectedItem="UnSettled" id="ddl_ConsolidateStatus">
					<mx:ArrayCollection>
					<fx:String>Settled</fx:String>
					<fx:String>UnSettled</fx:String>
					</mx:ArrayCollection>
					</s:DropDownList> -->
					<mx:Label x="29" y="146" text="Amount Paid                         :"/>
					<s:TextInput x="191" y="146" id="Txt_ConsolidatePayment" restrict="0-9." textAlign="right" prompt="0.00" focusOut="Txt_ConsolidatePayment_changeHandler()"/>
					<mx:Label x="29" y="175" height="21" text="Payment  Mode                    :"/>
					<s:HGroup x="191" y="175" width="403" height="21" gap="10">
						<s:RadioButton id="Cash2" height="21" label="Cash" buttonMode="true"
									   click="ConPayCash2_clickHandler(event)"
									   groupName="radiogroup1" value="Cash"/>
						<s:RadioButton id="CreditCard2" height="21" label="Credit Card"
									   buttonMode="true" click="ConCreditCard2_clickHandler(event)"
									   groupName="radiogroup1" value="Card"/>
						<s:RadioButton id="Cheque2" height="21" label="Cheque" buttonMode="true"
									   click="ConCheque2_clickHandler(event)"
									   groupName="radiogroup1" value="Cheque"/>
						<s:RadioButton id="CompanyInvoice2" height="21" label="Company Invoice"
									   buttonMode="true"
									   click="ConCompanyInvoice2_clickHandler(event)"
									   groupName="radiogroup1" value="CompanyInvoice"/>
						<s:RadioButton id="NEFT2" height="21" label="NEFT" buttonMode="true"
									   click="ConNEFT2_clickHandler(event)" groupName="radiogroup1"
									   value="NEFT"/>
					</s:HGroup>
					<WrbComp:Button_HB x="160" y="414" width="154" Lable_val="Add Payment" click="AddConsolidatePayment()">
					</WrbComp:Button_HB>
					<WrbComp:Button_HB x="348" y="414" width="110" Lable_val="Clear" click="ConsolidatePayClr()">
					</WrbComp:Button_HB>
					<s:BorderContainer x="121" y="19" width="467" height="415" id="bdr_ConPaymentCredit" visible="false" 
									   depth="1000">
						<s:Image x="414" y="22" source="@Embed(source='../Assets/CrossSmall.png')" 
								 buttonMode="true" toolTip="Close" click="FNClose3(event)"/>
						<s:Label x="33" y="29" text="Card Details                       " color="red"/>
						<s:TextInput x="263" y="63" width="200" id="Txt_ConPaymentCardDtl" visible="false"/>
						<s:Label x="60" y="83" text="CC Brand                            :"/>
						<s:DropDownList x="239" y="77" width="170" id="ddl_ConPaymentCCBrand">
							<mx:ArrayCollection>
								<fx:String>MasterCard</fx:String>
								<fx:String>VISACard</fx:String>
								<fx:String>AmericanExpress</fx:String>
								<fx:String>Discover</fx:String>
								<fx:String>MaestroCard</fx:String>
							</mx:ArrayCollection>
						</s:DropDownList>
						<s:Label x="62" y="124" text="Name of the Credit Card  :"/>
						<s:TextInput x="241" y="121" width="168" id="Txt_ConPaymentCardName"/>
						<s:Label x="62" y="163" text="Credit Card Number         :"/>
						<s:TextInput x="242" y="157" id="Txt_ConPaymentCardNo" maxChars="4" restrict="0-9"/>
						<s:Label x="62" y="184" text="(Last 3/4 Digits)"/>
						<s:Label x="62" y="212" text="Expiry Date                         :"/>
						<mx:DateField x="241" y="200" width="115" id="dte_ConPaymentExpirydate" visible="false"/>
						<s:Label x="62" y="245" text="ROC                                     :"/>
						<s:TextInput x="241" y="240" width="168" id="Txt_ConPaymentRoc"/>
						<s:Label x="62" y="281" text="SOC/Batch Close No        :"/>
						<s:TextInput x="241" y="272" width="168" id="Txt_ConPaymentSoc" />
						<s:Label x="62" y="312" width="167" text="Amount swiped For           :"/>
						<s:TextInput x="241" y="306" width="168" id="Txt_ConPaymentAmountSwip" restrict="0-9" prompt="0.00" textAlign="right"/>
						<WrbComp:Button_HB x="198" y="368" Lable_val="Add" click="AddCredit_clickHandler(event)">
						</WrbComp:Button_HB>
						<s:Label x="224" y="77" text="*" styleName="ReqLable" color="red"/>
						<s:Label x="225" y="121" text="*" styleName="ReqLable" color="red"/>
						<s:Label x="225" y="160" text="*" styleName="ReqLable" color="red"/>
						<s:Label x="224" y="203" text="*" styleName="ReqLable" color="red"/>
						<s:Label x="224" y="308" text="*" styleName="ReqLable" color="red"/>
						<s:TextInput x="242" y="198" width="40" id="Txt_ConExpiryMonth" restrict="0-9" maxChars="2" prompt="MM" textAlign="center"/>
						<s:TextInput x="287" y="198" width="46" id="Txt_ConExpiryYear" restrict="0-9" maxChars="4" prompt="YYYY" textAlign="center"/>
						
					</s:BorderContainer>
					<s:BorderContainer x="69" y="217" width="464" height="130" id="ConsolidateCash1" visible="false">
						<s:TextInput id="Txt_ConsoPayCash" visible="false" x="217" y="30" width="73"/>
						<s:DropDownList x="217" y="65" width="166" id="ddl_ConsoPayCashRecBy" visible="true" 
										change="ddl_ConsoPayCashRecBy_changeHandler(event)" prompt="Please Select Manager">
							
						</s:DropDownList>
						<s:Label x="58" y="33" text="Cash Received On              :" id="lbl_ConsoCashrecive" visible="true"/>
						<s:Label x="58" y="70" text="Cash Received By               :" id="lbl_ConsoPayCashreby" visible="true"/>
						<mx:DateField id="DT_ConPayCashDate" x="217" y="28" width="121"
									  formatString="DD/MM/YYYY"
									  selectableRange="{{rangeEnd: new Date()}}"/>
					</s:BorderContainer>
					<s:BorderContainer x="53" y="217" width="474" height="136" id="bdr_ConsolidateCheq1" visible="false" >
						<s:TextInput id="Txt_ConPaymentChecqNO" x="214" y="23" width="183" visible="true" />
						<s:TextInput x="214" y="52" width="183" id="Txt_ConPayCheqBankname" visible="true"/>
						<mx:DateField x="214" y="83" width="126" id="dte_ConCheqDate" visible="true" formatString="DD/MM/YYYY"
									  selectableRange="{{rangeEnd: new Date()}}"/>
						<s:Label id="lbl_ConPayChqTariff" x="52" y="28" width="149"
								 text="Cheque Number                 :" visible="true"/>
						<s:Label id="lbl_ConPaymentBankname"  x="52" y="58" width="149"
								 text="Bank Name                          :" visible="true"/>
						<s:Label x="52" y="90" width="149" text="Date Issued                          :" id="lbl_ConCheqDate" visible="true"/>
						<s:TextInput x="214" y="86" width="36" id="Txt_ConCheqdateMonth" prompt="MM" restrict="0-9" textAlign="center" maxChars="2" visible="false"/>
						<s:TextInput x="253" y="85" width="44" id="Txt_ConCheqdateYear" prompt="YYYY" restrict="0-9" textAlign="center" maxChars="4" visible="false"/>
						<s:Label x="205" y="25" text="*" styleName="ReqLable" color="red"/>
						<s:Label x="205" y="54" text="*" styleName="ReqLable" color="red"/>
					</s:BorderContainer>
					<s:BorderContainer x="80" y="198" width="460" height="210" id="bdr_ConsolidateCmpnyInvoice1" visible="false" depth="2000">
						<mx:Panel x="59" y="10" height="70" title="File Uploader">
							<mx:ControlBar>
								<mx:Spacer width="80%"/>
								<mx:HBox>
									<mx:TextInput id="FilePath2" width="150"  visible="true"/>
									<mx:Button id="Filedata2" label="Browse File" name="Filedata" />
									<mx:Button label="UpLoad File" name="uploadbutton" id="uploadbutton2" visible="false" width="0" />
								</mx:HBox>
								<mx:TextArea id="resultsTxtField2"  width="0"  name="resultsTxtField" visible="false"/>
							</mx:ControlBar>
						</mx:Panel>
						<s:TextInput x="220" y="89" width="178" id="Txt_ConCmpnyAppru"  visible="true"/>
						<s:TextInput x="220" y="120" width="178" id="Txt_ConPayCmpReq" visible="true"/>
						<s:TextInput x="220" y="149" width="178" id="Txt_ConPayCmpEmail" visible="true"/>
						<s:TextInput x="220" y="179" width="178" id="Txt_ConPayCmpPhone" visible="true"/>
						<mx:Label x="56" y="89" text="Approver                                :" id="lbl_ConPayCIapp" visible="true"/>
						<mx:Label x="56" y="120" text="Requester                             :" id="lbl_ConPayCmpReq" visible="true"/>
						<mx:Label x="56" y="149" text="Email ID                                 :" id="lbl_ConPayCmpEmail" visible="true"/>
						<mx:Label x="56" y="179" text="Phone No                               :" id="lbl_ConPayCmpPhone" visible="true"/>
					</s:BorderContainer>
					<s:BorderContainer x="57" y="218" width="471" height="138" id="bdr_ConsolidateNEFT1" visible="false">
						<s:TextInput x="219" y="22" width="189" id="Txt_ConNEFTRef" visible="true"/>
						<mx:DateField x="219" y="51" width="126" id="dte_ConNEFTDdate" visible="true" formatString="DD/MM/YYYY"
									  selectableRange="{{rangeEnd: new Date()}}"/>
						<s:TextInput x="219" y="87" width="189" id="Txt_ConNEFTBankName" visible="true"/>
						<s:Label x="56" y="27" text="Referance Number             :" id="lbl_ConNEFTRef" visible="true"/>
						<s:Label x="56" y="58" text="Date Of NEFT                       :" id="lbl_ConNEFTDate" visible="true"/>
						<s:Label x="56" y="92" text="Bank Name                           :" id="lbl_ConNEFTBank" visible="true"/>
						<s:TextInput x="219" y="53" width="35" id="Txt_ConNEFTDateMonth" prompt="MM" restrict="0-9" textAlign="center" maxChars="2" visible="false"/>
						<s:TextInput x="257" y="53" width="46" id="Txt_ConNEFTDateYear" prompt="YYYY" restrict="0-9" textAlign="center" maxChars="4" visible="false"/>
					</s:BorderContainer>
					<mx:Label x="326" y="146" text="OutStanding :"/>
					<s:TextInput x="414" y="146" id="Txt_ConsolidateOutStanding" prompt="0.00" textAlign="right" editable="false"/>
					<!--<s:DropDownList x="191" y="210" width="188" id="ddl_ConsolidatePayment" selectedItem="Cash">
					<mx:ArrayCollection>
					<fx:String>Cash</fx:String>
					<fx:String>CreditCard</fx:String>
					<fx:String>Cheque</fx:String>
					<fx:String>CompanyInvoice</fx:String>
					<fx:String>NEFT</fx:String>
					</mx:ArrayCollection>
					</s:DropDownList> -->
				</s:BorderContainer>
				<s:Label x="5" y="202" text="Type" visible="false"/>
				<s:TextInput x="96" y="197" width="160" id="Txt_CheckInType" visible="false"/>
				<mx:Label x="5" y="193" text="Bed No"/>
				<s:TextInput id="Txt_Bed" x="96" y="193" width="160" editable="false"/>
				<mx:Label x="5" y="223" text="Apartment No"/>
				<s:TextInput id="Txt_Apartment" x="96" y="224" width="160" editable="false"/>
				<WrbHelpComp:HelpText  x="96" y="106" width="160" id="hlp_GuestName" 
									   pxSetHeight="183" depth="1000"
									   pxSetColumnsWidth="170,170,170,170,170,170,170,170,200,0,200"
									   onselection="{OnSelectionGuestname()}">
				</WrbHelpComp:HelpText>
				<mx:Label x="5" y="285" text="Check Out"/>
				<mx:DateField x="96" y="189" width="116" id="DT_CheckOutDate" formatString="DD/MM/YYYY" tabIndex="31" 
							  selectableRange="{{rangeEnd: new Date()}}" visible="false"/>
				<mx:Label x="5" y="254" text="Payment"/>
				<s:HGroup x="96" y="255" width="149" horizontalAlign="center" verticalAlign="middle" 
						  gap="50" enabled="false">
					<s:RadioButton label="Direct" groupName="Mode" value="0"
								   id="Direct" />
					<s:RadioButton label="BTC" groupName="Mode"  value="1"
								   id="BTC" />
				</s:HGroup>
				<mx:Label x="5" y="470" text="PropertyType" visible="false"/>
				<s:TextInput x="96" y="471" id="Txt_PropertyType" editable="false" visible="false"/>
				<mx:Label x="18" y="482" text="ChkinDate" visible="false"/>
				<s:TextInput x="96" y="482" id="Txt_CheckInDate" visible="false"/>
				<s:TextInput x="204" y="471" id="Txt_ChkoutInvoice" editable="false" visible="false"/>
				<WrbHelpComp:HelpText x="96" y="74" width="160" id="hlp_property" pxSetColumnsWidth="200,0"
									  onselection="{OnSelectionProperty()}" depth="1500" tabIndex="1">
				</WrbHelpComp:HelpText>
				<s:HGroup x="6" y="410" width="240" horizontalAlign="center" verticalAlign="middle" 
						  gap="50" enabled="true">
					<s:RadioButton label="CheckOut" groupName="Option" value="1" id="Checkout" click="Checkout_clickHandler(event)"/>
					<s:RadioButton label="Intermediate" groupName="Option" value="0" id="Intermediate" click="Intermediate_clickHandler(event)"/>
				</s:HGroup>
				<mx:Label x="5" y="346" text="Bill From" id="lbl_Billfrom"/>
				<mx:DateField id="DT_BillFromDate" x="96" y="346" width="122" height="23"
							  formatString="DD/MM/YYYY" selectableRange="{{rangeEnd: new Date()}}"/>
				<mx:Label x="5" y="379" text="Bill To" id="lbl_Billto"/>
				<mx:DateField x="96" y="379" width="122" height="23" id="DT_BillTo" 
							  formatString="DD/MM/YYYY" selectableRange="{{rangeEnd: new Date()}}"/>
				<WrbComp:Button_HB x="20" y="464" id="Process" Lable_val="Process" click="Process_clickHandler(event)">
				</WrbComp:Button_HB>
				<WrbComp:Button_HB x="153" y="464" id="ProcessClear" Lable_val="Clear" click="ProcessClear_clickHandler(event)">
				</WrbComp:Button_HB>
				
				
			</s:Group>
		</s:BorderContainer>	
	</s:VGroup>
	<s:Label x="465" y="149" text="*" styleName="ReqLable" color="red" visible="false"/>
</s:Application>
