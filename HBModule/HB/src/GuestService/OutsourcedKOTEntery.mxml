<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbComp="WrbComp.*"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   width="100%" height="100%" creationComplete="PageLoad()">
	<fx:Declarations>
		<mx:NumberFormatter id="NF_Two" precision="2" rounding="nearest"/>
	</fx:Declarations>
	<fx:Style source = "..\\Common\\ApplicationCSS.css"/>
	<fx:Script source="..\\Common\\CommonScript.as"/>
	<fx:Script source="..\\Common\\Functions.as"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import com.as3xls.xls.Type;
			
			import mx.containers.Accordion;
			import mx.controls.Text;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.ColorPickerEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			
			import spark.components.gridClasses.DefaultGridItemEditor;
			import spark.components.supportClasses.InteractionState;
			import spark.events.IndexChangeEvent;
			public var ErrStr:String=""; 
			public var _HdrArrCol:ArrayCollection;
			public var HdrAC:ArrayCollection=new ArrayCollection();
			public var DtlsAC:ArrayCollection=new ArrayCollection();
			public static var GlobalXml:String="";
			public static var Global_AC:ArrayCollection=new ArrayCollection();
			public  var Temp_ACGrid:ArrayCollection=new ArrayCollection();
			public  var TempProduct_AC:ArrayCollection=new ArrayCollection();
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public static var Id:int=0,PropertyId:int=0,ItemId:int=0;
			public var Price:int=0,Quantity:int=0;
			public var RoomNo:String="";
			protected function PageLoad():void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				Help();
				dt_Date.selectedDate = new Date();
				SCtrl.setButtonRights("Delete",true);
				//SCtrl.setButtonRights("Search",true);
				hlp_Property.setFocus();
				
			}
			public function Help():void
			{				
				useWeb("OutsourceKOTEntry","PageLoad_CUSTOM",[GlobalXml,"PageLoad","",0]);
			}
			//			public var TempProduct_AC:ArrayCollection = new ArrayCollection();
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{
				if (Ds_Objects.currentTarget.description.toString() == "PageLoad_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						hlp_Property.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "ToService_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Items.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				
				var TempGrid:ArrayCollection = new ArrayCollection();
				var TempGriddata:ArrayCollection = new ArrayCollection();
				if (Ds_Objects.currentTarget.description.toString() == "ToSelected_CUSTOM")
				{
					
					if ( Grd_Details.dataProvider != null)
					{
						TempGrid = Grd_Details.dataProvider as ArrayCollection;
						//TempProduct_AC=TempGrid;
					}
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)						
					{
						TempGriddata=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;						
					}				 				
					for( var i:int=0; i<TempGriddata.length;i++)						
					{
						if(TempGrid.length != 0)
						{
							var Flag:Boolean=true;
							var index:int;
							var n:int=0;
							n=TempGrid.length;
							for(var j:int=0; j<n;j++ )
							{  
								if(Flag==true)
								{
									if(TempGrid[j].ServiceItem == TempGriddata[i].ServiceItem)
									{ 
										Flag=false;
									}										
								}																		 
							} 
							if(Flag==true)
							{
								TempProduct_AC=Grd_Details.dataProvider as ArrayCollection;
								TempProduct_AC.addItemAt(TempGriddata[i],TempProduct_AC.length)
							}
							else
							{
								alignAlert(Alert.show(TempGriddata[0].ServiceItem+" is Already Exists.","",Alert.OK,this,null,iconErrLarge),10,"");
							}
						}
						else
						{
							var Flag:Boolean=true;
							var index:int;
							var n:int=0;
							n=TempGrid.length;
							for(var j:int=0; j<n-1;j++ )
							{  
								if(Flag==true)
								{
									if(TempGrid[j].ServiceItem == TempGriddata[i].ServiceItem)
									{ 
										Flag=false;
									}										
								}																		 
							} 
							if(Flag==true)
							{
								TempProduct_AC.addItemAt(TempGriddata[0],TempProduct_AC.length)
							}
							else
							{
								alignAlert(Alert.show(TempGriddata[0].ServiceItem+" is Already Exists.","",Alert.OK,this,null,iconErrLarge),10,"");
							}
							
						}						
					}  
					
					Grd_Details.dataProvider = TempProduct_AC
					var TotAmt:Number=0,Len:Number=0;
					var TempGrids:ArrayCollection = Grd_Details.dataProvider as ArrayCollection;
					if(TempGrid.length ==1)
					{
						if(Ds_Objects.result.Tables.Table1.Rows.length > 0)
						{
							Txt_TotalAmount.text=Ds_Objects.result.Tables.Table1.Rows[0].Amount;
						}
					}
					for(var i:int=0;i<TempGrids.length;i++)
					{
						TotAmt+=Number(TempGrids[i].Amount);
						Txt_TotalAmount.text="";
					}
					var TA:String=NF_Two.format(TotAmt+Txt_TotalAmount.text);
					Txt_TotalAmount.text=TA.replace(",","");
					
					//alignAlert(Alert.show(TempGriddata[i].ServiceItem+" is Already Exists.",Alert.OK,this,null,iconErrLarge),10,"");
				}
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					
					if (Id == 0)
					{
						alignAlert(Alert.show("Service Added Successfully.","Message !",Alert.OK| Alert.NO,
							null, null,	iconTickLarge, Alert.OK),10,"");
					}
					else
					{
						alignAlert(Alert.show("Service Updated Successfully.","Message !",Alert.OK,
							null, null,	iconTickLarge, Alert.OK),10,"");
					}
					FnClr();					
				} 
				if (Ds_Objects.currentTarget.description.toString() == "Search_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						hlp_Property.text=Ds_Objects.result.Tables.Table.Rows[0].PropertyName;
						dt_Date.text=Ds_Objects.result.Tables.Table.Rows[0].Date;
						PropertyId=Ds_Objects.result.Tables.Table.Rows[0].PropertyId;
						Id=Ds_Objects.result.Tables.Table.Rows[0].Id;
						Txt_TotalAmount.text=NF_Two.format(Ds_Objects.result.Tables.Table.Rows[0].TotalAmount);
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Grd_Details.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
						
						if ( Grd_Details.dataProvider!= null)
						{
							TempGrid = Grd_Details.dataProvider as ArrayCollection;
							//TempProduct_AC=TempGrid;
						}
						else
						{
							if(Ds_Objects.result.Tables.Table.Rows.length > 0)						
							{
								TempGriddata=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;						
							}				 				
							for( var i:int=0; i<TempGriddata.length;i++)						
							{
								if(TempGrid.length == 0)
								{	
									TempProduct_AC.addItemAt(TempGriddata[i],TempProduct_AC.length) 
								} 
								else
								{
									var Flag:Boolean=true;
									var index:int;
									var n:int=0;
									n=TempGrid.length;
									for(var j:int=0; j<n;j++ )
									{  
										if(Flag==true)
										{
											if(TempGrid[j].ServiceItem == TempGriddata[i].ServiceItem)
											{ 
												Flag=false;
											}										
										}																		 
									} 
									if(Flag==true)
									{
										TempProduct_AC.addItemAt(TempGriddata[0],TempProduct_AC.length)
									}
									else
									{
										alignAlert(Alert.show(TempGriddata[0].ServiceItem+" is Already Exists.","",Alert.OK,this,null,iconErrLarge),10,"");
									}
									
								}						
							}  
							
							Grd_Details.dataProvider = TempProduct_AC
							var TotAmt:Number=0,Len:Number=0;
							var TempGrids:ArrayCollection = Grd_Details.dataProvider as ArrayCollection;
							if(TempGrid.length ==1)
							{
								if(Ds_Objects.result.Tables.Table1.Rows.length > 0)
								{
									Txt_TotalAmount.text=Ds_Objects.result.Tables.Table1.Rows[0].Amount;
								}
							}
							for(var i:int=0;i<TempGrids.length;i++)
							{
								TotAmt+=Number(TempGrids[i].Amount);
								Txt_TotalAmount.text="";
							}
							var TA:String=NF_Two.format(TotAmt+Txt_TotalAmount.text);
							Txt_TotalAmount.text=TA.replace(",","");
						}
						
						if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
						{
							Grd_Items.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
						}
					}
				}
				
			}
			public var NewPropertyId:Number=0;
			public function OnSelectionPropertyname():void
			{
				if(hlp_Property.selected())
				{
					NewPropertyId=hlp_Property.Select_Row.PropertyId;
					hlp_Property.text=hlp_Property.Select_Row.Property;
					useWeb("OutsourceKOTEntry","ToService_CUSTOM",[GlobalXml,'Property',"",0]);
					dt_Date.enabled=true;
				}
				else
				{
					hlp_Property.text="";
					dt_Date.enabled=false;
					PropertyId=0;
				}
				dt_Date.setFocus();
			}
			
			public function Validation():String
			{
				ErrStr="";
				var TxtFlag:Boolean=true;
				if(hlp_Property.text=="")
				{
					if(TxtFlag==true)
					{
						hlp_Property.setFocus();TxtFlag=false;
					}
					ErrStr=ErrStr+"* Property is Required.\n";					
				}
				if(dt_Date.text=="")
				{
					if(TxtFlag==true)
					{
						dt_Date.setFocus();TxtFlag=false;
					}
					ErrStr=ErrStr+"* Date is Required.\n";					
				}
				
				var Temp_AC:ArrayCollection=new ArrayCollection();
				Temp_AC=Grd_Details.dataProvider as ArrayCollection;
				if((Temp_AC==null)||(Temp_AC.length==0))
				{
					ErrStr=ErrStr+"*  Items are Required.\n";
				}
				
				return ErrStr;
			}
			protected function FnSave():void
			{
				ErrStr="";
				ErrStr=Validation()
				
				if(ErrStr!="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
					return;					
				}
				var Flag:Boolean=true;
				var arrHdr:ArrayCollection=new ArrayCollection
					([{
						PropertyName:hlp_Property.text,Date:dt_Date.text,PropertyId:NewPropertyId,
						TotalAmount:Txt_TotalAmount.text,Id:Id
						
					}]);
				var HdrXml:String = ObjToXmlStr_Comm(arrHdr,"HdrXml");
				var KOT:ArrayCollection= new  ArrayCollection();
				var ServiceXml:String="";
				ServiceXml += "<ROOT>";
				ServiceXml += ObjToXmlStr_Comm(Grd_Details.dataProvider as ArrayCollection,"ServiceXml")
				ServiceXml += "</ROOT>";
				useWeb("OutsourceKOTEntry","Save_CUSTOM",[GlobalXml,HdrXml,ServiceXml]);
				
				
			}
			protected function FnClr():void
			{
				
				hlp_Property.text="";
				PropertyId=0;
				Grd_Items.dataProvider=null;
				Grd_Details.dataProvider=null;
				TempProduct_AC=new ArrayCollection();
				Temp_ACGrid==new ArrayCollection();
				Txt_TotalAmount.text="0.00";
				
			}
			protected function FnSearch():void
			{
				PopUpManager.addPopUp( SearchPopUp , this, true);
				SearchPopUp.Prc_name="OutsourceKOTEntry";
				var SearchParam:Array =new Array();
				SearchPopUp.HlpIndex="SEARCH";
				SearchParam[0]=GlobalXml;
				SearchParam[1]=0;	
				SearchParam[2]=0;	
				SearchParam[3]="";	
				SearchPopUp.Prc_Param=SearchParam;
				SearchPopUp.HlpSrchGlobal="";
				SearchPopUp.dataPanel.focusEnabled=true;
				SearchPopUp.Pageint();
				SearchPopUp.addEventListener("PopupEnter",funpopupEnter);
				SearchPopUp.addEventListener("PopupClose",funpopupClose);
				PopUpManager.centerPopUp(SearchPopUp);
				
			}
			private function funpopupClose(event:Event):void
			{
			}
			private function funpopupEnter(event:Event):void
			{
				SearchDtls(SearchPopUp.SelectRow.Id,0);
			}			
			private function SearchDtls(Id:int,_PrdFk:int):void
			{
				var Load:Array = new Array();
				Load[0] = GlobalXml; Load[1] = Id; 				
				useWeb("OutsourceKOTEntry","Search_CUSTOM",Load);
				
			}
			protected function Delete():void
			{
				if(Id == 0)
				{
					alignAlert(Alert.show("This is Invalid Process.","Alert Message !",Alert.OK, 
						null, null,iconWarning, Alert.OK),10,'');					
					return;
				}	
				else
				{
					alignAlert(Alert.show("Do you want to Delete this item?", "Warning !",Alert.YES | Alert.NO, 
						null,removeDgridItem, iconWarning, Alert.NO),10,"");
				}
			}
			private function removeDgridItem(event:CloseEvent):void 
			{
				if (event.detail==Alert.YES) 
				{
					var Load:Array = new Array();
					Load[0]= GlobalXml; Load[1]= Id;   
					useWeb("OutsourceKOTEntry","Delete_CUSTOM",Load);
				}
			}
			
			protected function Grd_Items_doubleClickHandler(event:MouseEvent):void
			{
				var Temp_ACGrid:ArrayCollection=new ArrayCollection();
				var TempProduct_AC:ArrayCollection=new ArrayCollection();
				Temp_ACGrid=Grd_Items.dataProvider as ArrayCollection;
				if((Temp_ACGrid == null)||(Temp_ACGrid.length==0))
				{
					alignAlert(Alert.show("This is an Invalid Process"));	
				}
				else
				{
					var ServiceItem:String="";
					var Load:Array =new Array();
					Load[0]=GlobalXml; 
					ServiceItem=event.currentTarget.selectedItem.ServiceItem;
					//ItemId=event.currentTarget.selectedItem.ItemId;
					Temp_ACGrid=Grd_Items.dataProvider as ArrayCollection;
					
					if(TempProduct_AC.length==0)
					{
						var Temp_ACGrid:ArrayCollection=new ArrayCollection
							([{
								Id:0,ItemId:ItemId,	Quantity:Quantity,				
								ServiceItem:ServiceItem,Price:Price								
							}]);
						TempProduct_AC.addItem(Temp_ACGrid[0])
						
					}
					Load[2]=0;
					//ItemId=Grd_Items.selectedItem.ItemId;				
					useWeb("OutsourceKOTEntry","ToSelected_CUSTOM",[GlobalXml,'Service',ServiceItem,0]);
					
				}
			}
			
			protected function Grd_Ingredients_focusOutHandler(event:FocusEvent):void
			{
				var temp_Val2:String=event.currentTarget.editable;
				if(event.currentTarget.editedItemPosition != null)
				{ 
					
					var Val2:Number =event.currentTarget.selectedItem.Quantity
					var Val3:Number =event.currentTarget.selectedItem.Price						
					event.currentTarget.selectedItem.Amount = Val2*Val3;
					var TotAmt:Number=0,Len:Number=0;
					var TempGrids:ArrayCollection = Grd_Details.dataProvider as ArrayCollection;
					for(var i:int=0;i<TempGrids.length;i++)
					{
						TotAmt+=Number(TempGrids[i].Amount);
						Txt_TotalAmount.text="";
					}
					var TA:String=NF_Two.format(TotAmt+Txt_TotalAmount.text);
					Txt_TotalAmount.text=TA.replace(",","");
					
				}
				else
				{
					
				}
			}
			
			private function FnDelete():void
			{
				if(Id != 0 )
				{
					alignAlert(Alert.show("Do you want to Delete this item ?", "Warning !",Alert.YES | Alert.NO, 
						null,removeItem, iconWarning, Alert.NO),10,"");
				}
				else
				{
					alignAlert(Alert.show("This is an Invalid Process.","Alert Message !",Alert.OK, 
						null, null,iconWarning, Alert.OK),10,'');
				}
				return;
			}
			private function removeItem(event:CloseEvent):void 
			{	
				if (event.detail==Alert.YES) 
				{
					var Load:Array = new Array();
					Load[0]=GlobalXml; Load[1]= Id;
					//	useWeb("TransSubsPriceModel","Delete_CUSTOM",Load);
				} 
			}
			public function DeleteGrid(event:Event):void
			{
				var TotAmt:int=0;var total:Number=Math.round(Number(Txt_TotalAmount.text));
				var Ac_Food:ArrayCollection=new ArrayCollection();
				Ac_Food=Grd_Details.dataProvider as ArrayCollection;
				var Foodindex:int=Grd_Details.selectedIndex;
				var Tmp:ArrayCollection=new ArrayCollection([{ServiceItem:Ac_Food[Foodindex].ServiceItem,
					Quantity:Ac_Food[Foodindex].Quantity,Price:Ac_Food[Foodindex].Price,
					Amount:Ac_Food[Foodindex].Amount,ItemId:Ac_Food[Foodindex].ItemId,Id:Ac_Food[Foodindex].Id}]);				
				Ac_Food.removeItemAt(Foodindex);
				for(var i:int=0;i<Tmp.length;i++)
				{
					TotAmt+=Number(Tmp[i].Amount);
				}
				var TB:String=NF_Two.format(total-TotAmt);
				Txt_TotalAmount.text=TB.replace(",","");
				
				Grd_Details.dataProvider=Ac_Food.source;
			}
		]]>
	</fx:Script>
	<s:VGroup x="0" y="0" width="100%" height="100%" gap="5" horizontalAlign="center" verticalAlign="middle">
		<s:Group y="21" width="904" height="528" id="Grp_Guest" visible="true">
			<s:BorderContainer x="29" y="16" width="855" height="122" backgroundColor="#fbf9f9" depth="10">
				<s:Label x="20" y="20" text="Select Property"/>
				<s:Label x="20" y="70" text="Date"/>
				<mx:DateField id="dt_Date" x="121" y="61" width="100" height="23" enabled="false"
							  formatString="DD/MM/YYYY" selectableRange="{{rangeEnd:new Date()}}"
							  styleName="DisabledDateField" tabIndex="1"
							  yearNavigationEnabled="false"/>
				<WrbHelpComp:HelpText id="hlp_Property" x="121" y="16" width="200" height="23"
									  depth="100" onselection="{OnSelectionPropertyname()}"
									  pxSetColumnsWidth="200,0" pxSetHeight="183" tabIndex="1">
				</WrbHelpComp:HelpText>
				
			</s:BorderContainer>
			<s:BorderContainer x="29" y="138" width="252" height="325" depth="5">
				<mx:DataGrid id="Grd_Items" x="0" y="-1"  verticalAlign="middle" 
							 doubleClickEnabled="true" doubleClick="Grd_Items_doubleClickHandler(event)"
							 width="250" height="325" tabIndex="3" >
					<mx:columns>
						<mx:DataGridColumn dataField="ServiceItem" headerText="ServiceItems To be Selected" width="50"  editorDataField="value" >
						</mx:DataGridColumn> 
						<mx:DataGridColumn dataField="PropertyId" headerText="PropertyId" width="50" visible="false"  >
						</mx:DataGridColumn> 
					</mx:columns>
				</mx:DataGrid>
			</s:BorderContainer>
			<s:BorderContainer x="282" y="138" width="602" height="325" depth="5">
				<mx:DataGrid id="Grd_Details" x="0" y="0" width="600" height="278" tabIndex="3"
							 dragEnabled="true" draggableColumns="false" dragMoveEnabled="true"
							 dropEnabled="true" editable="true" focusEnabled="false" doubleClickEnabled="true" 
							 textAlign="center" borderVisible="true" 
							 focusOut="Grd_Ingredients_focusOutHandler(event)" >
					<mx:columns>
						<mx:DataGridColumn dataField="Action" width="50"  editable="false">
							<mx:itemRenderer>
								<fx:Component>
									<mx:HBox horizontalAlign="center" verticalAlign="middle">										
										<mx:Image source="assets/CrossSmall.png" buttonMode="true"
												  click="outerDocument.DeleteGrid(event)"/>
										
									</mx:HBox>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn dataField="ServiceItem" width="160" 
										   headerText="Item" editable="false" textAlign="left"/>							
						<mx:DataGridColumn dataField="Quantity" width="90" headerText="Quantity"
										   editable="true" textAlign="right" />	
						<mx:DataGridColumn dataField="Price" width="90" headerText="Price"
										   editable="false" textAlign="right" />
						<mx:DataGridColumn dataField="Amount" width="90" headerText="Amount"
										   editable="false" textAlign="right"/>
						<mx:DataGridColumn dataField="ItemId" width="100" visible="false"/>
						<mx:DataGridColumn dataField="Id" width="100" visible="false"/>
					</mx:columns>
				</mx:DataGrid>				
				<s:Label x="401" y="301" text="Total Amount"/>
				<s:TextInput x="486" y="295" width="113" id="Txt_TotalAmount" textAlign="right"/>
			</s:BorderContainer>
			<WrbComp:SaveControl x="305" y="478" id="SCtrl" docSave="FnSave()" docClear="FnClr()"
								 doSearch="FnSearch()" docDelete="Delete()">
			</WrbComp:SaveControl>
			
		</s:Group>
	</s:VGroup>
</s:Application>
