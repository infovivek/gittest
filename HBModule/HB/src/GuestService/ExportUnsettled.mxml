<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:Controls="fx.com.adobe.Controls.*"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   xmlns:WrbComp="WrbComp.*"
			   xmlns:flexlib="http://code.google.com/p/flexlib/"
			   width="100%" height="548" creationComplete="PageLoad()" pageTitle="Export UnSettled ">
	<fx:Declarations>
		<mx:NumberFormatter id="NF_Two" precision="2" rounding="nearest"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script source = "..\\Common\\CommonScript.as"/>
	<fx:Script source = "..\\Common\\Functions.as"/>
	<fx:Style source="..\\Common\\ApplicationCSS.css"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import WrbHelpComp.HlpGridHdr;
			
			import com.as3xls.xls.Cell;
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			import com.as3xls.xls.Type;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.graphics.codec.PNGEncoder;
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			public var Screen:String = "";
			public var ScreenName:String = "";
			public var ADate:String = "";
			public var Identity:String="";private var xlsFile:ExcelFile;
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public static var Global_AC:ArrayCollection = new ArrayCollection();
			public static var GlobalXml:String = "";
			public var Id:int=0,ErrMsg:String="",PropertyId:int=0,PropertyName:String="",UserId:int=0;
			public var AddMode:Boolean=true,Flag:Boolean=true,PropretyType:String="";
			
			protected function PageLoad():void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				useWeb("ExportUnsettled","PAGELOAD_CUSTOM",[GlobalXml,"PAGELOAD",0,0]);
			}
			private function Custom_WebSer_Result (Ds_Objects:Object):void				
			{
				if (Ds_Objects.currentTarget.description.toString() == "PAGELOAD_CUSTOM")
				{
					Grd_Details.dataProvider=null;
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						hlp_Property.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;	
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Grd_Details.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;		
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Search_CUSTOM")
				{
					Grd_Details.dataProvider=null;
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Details.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
			}
			
			protected function Search():void
			{
				SearchPopUp.Prc_name="ExportUnsettled"
				var SearchParam:Array =new Array();
				SearchPopUp.HlpIndex="SEARCH"
				SearchParam[0]=GlobalXml;
				SearchParam[1]=0;
				SearchParam[2]=PropertyId; 
				SearchParam[3]=dt_From.text;
				SearchParam[4]=dt_To.text;
				
				SearchPopUp.addEventListener("PopupEnter",funpopupEnter);
				SearchPopUp.addEventListener("PopupClose",funpopupClose);
				var Load:Array = new Array(); 
				Load[0] = GlobalXml; Load[1] = Id; Load[2]=PropertyId;Load[3]=dt_From.text;
				Load[4]=dt_To.text;
				useWeb("ExportUnsettled","Search_CUSTOM",Load);
			}
			private function funpopupClose(event:Event):void
			{ 
				
			} 
			private function funpopupEnter(event:Event):void
			{	
				Searchhb(SearchPopUp.SelectRow.Id,0);	
			}
			private function Searchhb(Id:int,_PrdFk:int):void
			{
				var Load:Array = new Array(); 
				Load[0] = GlobalXml; Load[1] = Id; Load[2]=PropertyId;Load[3]=dt_From.text;
				Load[4]=dt_To.text;
				useWeb("ExportUnsettled","Search_CUSTOM",Load);
			}
			
			public function Ddl_Property_changeHandler():void
			{
				if(hlp_Property.selected())
					{
						PropertyName=hlp_Property.Select_Row.Property;
						PropertyId=hlp_Property.Select_Row.ZId;
						hlp_Property.text=PropertyName;
					}
					else
					{
						hlp_Property.text="";
					}
			}	
			
			protected function dt_From_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				if(dt_From.selectedDate)
				{
					dt_To.selectableRange={rangeEnd: new Date()};
					var Dt:String = dt_From.text;										
					var Y:String = Dt.substr(6,10);
					var M:String = String(Dt.substr(3,2));
					var D:String =String(Number(Dt.substr(0,2))+1);
					var RangeStart:String = Y+'/'+M+'/'+D;
					dt_To.selectableRange = {rangeStart:new Date(RangeStart)};
					dt_To.selectedDate = new Date(RangeStart);
				}
			}	
			
			protected function ExportExcel(event:MouseEvent):void
			{
				
				if(Grd_Details.dataProvider !=null)
				{
					var arrExportResult:ArrayCollection = Grd_Details.dataProvider as ArrayCollection;
					xlsFile = new ExcelFile();
					var sheet:Sheet = new Sheet();
					
					sheet.resize(arrExportResult.length+1,14);
					
					sheet.setCell(0,0,'Property');
					sheet.setCell(0,1,'Client');
					sheet.setCell(0,2,'Total');
					sheet.setCell(0,3,'Booking Code');
					sheet.setCell(0,4,'CheckOut Date');
					
					for(var i:int=0;i<arrExportResult.length;i++)
					{
						sheet.setCell(i+1, 0, arrExportResult[i].Property);
						sheet.setCell(i+1, 1, arrExportResult[i].Client);
						sheet.setCell(i+1, 2, arrExportResult[i].Total);
						sheet.setCell(i+1, 3, arrExportResult[i].BC);
						sheet.setCell(i+1, 4, arrExportResult[i].CheckOutDate);
					}
					Grd_Details.dataProvider = arrExportResult;
					xlsFile.sheets.addItem(sheet);      
					var bytes: ByteArray = xlsFile.saveToByteArray();
					var fr:FileReference = new FileReference();
					fr.save(bytes,"Export.xls");
				}
				else
				{
					alignAlert(Alert.show("ServiceItem Details Required.","Message !",
						Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
				}
			}
			protected function FnClear():void
			{
				hlp_Property.text="";
				PropertyId=0;
				PropertyName="";
				dt_From.text="";
				dt_To.text="";
				hlp_Property.setFocus();
				PageLoad();
			}
		]]>
	</fx:Script>
	<s:HGroup id="Grp_Contract" x="0" y="0" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle"
			  visible="true">
		<s:BorderContainer id="Brd_ContractBill" visible="true" x="0" y="0" width="100%" height="100%"
						   backgroundColor="#fbf9f9">
			<s:Label x="46" y="99" text="Property"/>
			<WrbHelpComp:HelpText id="hlp_Property" x="102" y="89" width="275" height="22" pxSetColumnsWidth="275,0" 
								  onselection="{Ddl_Property_changeHandler()}"  pxTabIndex="1" depth="10"
								  pxSetPrompt="Select Property">
			</WrbHelpComp:HelpText>
			<s:Label x="398" y="99" text="From"/>
			<mx:DateField x="436" y="90" width="93" height="21" id="dt_From" tabIndex="16"
						  selectableRange="{{rangeEnd: new Date()}}" formatString="DD/MM/YYYY" styleName="DisabledDateField" 
						  yearNavigationEnabled="true" change="dt_From_changeHandler(event)"/>
			<s:Label x="550" y="99" text="To"/>
			<mx:DateField id="dt_To" x="572" y="88" selectableRange="{{rangeEnd: new Date()}}" formatString="DD/MM/YYYY"
						  />
			<mx:Button x="698" y="77" height="34" label="Search" click="Search()"/>
			<WrbComp:Button_BB id="btn_Excel" x="767" y="10" width="138" click="ExportExcel(event)"
							   Lable_val="Export To Excel">
			</WrbComp:Button_BB>	
			<mx:DataGrid x="0" y="145"  verticalAlign="middle" editable="true" visible="true"
						 width="100%" height="100%" tabIndex="4" id="Grd_Details" >
				<mx:columns>
					<mx:DataGridColumn dataField="Property" headerText="Property" width="150" editable="false"/>
					<mx:DataGridColumn dataField="Client" headerText="ClientName" width="150" editable="false"/>
					<mx:DataGridColumn dataField="Total" headerText="ChkOutTariffNetAmt" width="100" editable="false"/>
					<mx:DataGridColumn dataField="BC" headerText="Booking Code" width="100" editable="false"/>
					<mx:DataGridColumn dataField="CheckOutDate" headerText="CheckOut Date" width="120" editable="false"/>
					
					<mx:DataGridColumn dataField="InVoiceNo" headerText="InvoiceNo" width="80" editable="false" visible="false"/>
					<mx:DataGridColumn dataField="Guest" headerText="Guest" width="150" editable="false" visible="false"/>
					<mx:DataGridColumn dataField="Stay" headerText="Stay" width="110" editable="false" visible="false"/>
					
					
				</mx:columns>
			</mx:DataGrid>
			<s:Label x="21" y="27" text="Export Unsettled" color="red"/>
			<mx:Button x="795" y="77" height="34" label="Clear" click="FnClear()"/>
			</s:BorderContainer>
	</s:HGroup>
</s:Application>
