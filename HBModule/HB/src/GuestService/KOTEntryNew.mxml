<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   xmlns:WrbComp="WrbComp.*" creationComplete="PageLoad()"
			   width="100%" height="100%">
	<fx:Style source = "..\\Common\\ApplicationCSS.css"/>
	<fx:Script source="..\\Common\\CommonScript.as"/>
	<fx:Script source="..\\Common\\Functions.as"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import com.as3xls.xls.Type;
			
			import mx.containers.Accordion;
			import mx.controls.Text;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.ColorPickerEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			import mx.graphics.codec.PNGEncoder;
			import mx.managers.PopUpManager;
			import mx.rpc.http.mxml.HTTPService;
			
			import spark.components.gridClasses.DefaultGridItemEditor;
			import spark.components.supportClasses.InteractionState;
			import spark.events.IndexChangeEvent;
			public var ErrStr:String=""; 
			public var _HdrArrCol:ArrayCollection;
			public static var GlobalXml:String="";
			public static var Global_AC:ArrayCollection=new ArrayCollection();
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public var Id:int=0,PropertyId:int=0,Tariff:int=0,StateId:int=0,BookingId:int=0,RoomId:int=0,CheckInId:int=0;
			
			protected function PageLoad():void
			{
				// TODO Auto-generated method stub
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				//dt_Date.selectedDate = new Date();
				Sctrl.setButtonRights("Search",true);
				Help();
			}
			
			public function Help():void
			{				
				useWeb("KOTEntry","PageLoad_CUSTOM",[GlobalXml,"PageLoad","","",0,Global_AC[0].UsrId]);
			}
			
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{
				if (Ds_Objects.currentTarget.description.toString() == "PageLoad_CUSTOM")
				{
					if(Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						hlp_Property.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
					if(Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
//						dt_Date.text=Ds_Objects.result.Tables.Table1.Rows[0].Date;
//						//			Date Restrict
//						var sdfs:String=dt_Date.text;						
//						var D:String=sdfs.substr(0,2);
//						var M:String=sdfs.substr(3,2);
//						var Y:String=sdfs.substr(6,10);
//						var RangeMiddle:String=Y+'/'+M+'/'+D;
//						var RangeEnd:String=Y+'/'+M+'/'+String(Number(D));
//						var RangeStart:String=Y+'/'+M+'/'+String(Number(D)-1);
//						dt_Date.selectableRange = 
//							{rangeStart:new Date(RangeStart),rangeEnd:new Date(RangeEnd)};
//						dt_Date.selectedDate=new Date(RangeMiddle);
					}
					
				}
				if (Ds_Objects.currentTarget.description.toString() == "PropertyLoad_CUSTOM")
				{
					Grd_Details.dataProvider=null;
					Grd_UserDetails.dataProvider=null;
					lbl_bveg.text="";lbl_lveg.text="";lbl_dveg.text="";
					lbl_bnonveg.text="";lbl_lnonveg.text="";lbl_dnonveg.text="";
					lblbveg.text="";lbllveg.text="";lbldveg.text="";
					lblbnonveg.text="";lbllnonveg.text="";lbldnonveg.text="";
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{	
						Grd_Details.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						var Len:Number=0,TotAmt:Number=0;
						var Ac_Tmp:ArrayCollection=new ArrayCollection();
						Ac_Tmp=Grd_Details.dataProvider as ArrayCollection;				
						lbl_bveg.text=="";
						lbl_bnonveg.text=="";
						lbl_lveg.text=="";
						lbl_lnonveg.text=="";
						lbl_dveg.text=="";
						lbl_dnonveg.text=="";
						var Totalbveg:int=0;
						var Totalbnonveg:int=0;
						var Totallveg:int=0;
						var Totallnonveg:int=0;
						var Totaldveg:int=0;
						var Totaldnonveg:int=0;
						for(var i:int=0;i<Ac_Tmp.length;i++)
						{
							Totalbveg+=Number(Ac_Tmp[i].BreakfastVeg);
							Totalbnonveg+=Number(Ac_Tmp[i].BreakfastNonVeg);
							Totallveg+=Number(Ac_Tmp[i].LunchVeg);
							Totallnonveg+=Number(Ac_Tmp[i].LunchNonVeg);
							Totaldveg+=Number(Ac_Tmp[i].DinnerVeg);
							Totaldnonveg+=Number(Ac_Tmp[i].DinnerNonVeg);
						}
						var VG:Number=Totalbveg;
						lbl_bveg.text=VG.toString();
						var VNG:Number=Totalbnonveg;
						lbl_bnonveg.text=VNG.toString();
						var LG:Number=Totallveg;
						lbl_lveg.text=LG.toString();
						var LNG:Number=Totallnonveg;
						lbl_lnonveg.text=LNG.toString();
						var DG:Number=Totaldveg;
						lbl_dveg.text=DG.toString();
						var DNG:Number=Totaldnonveg;
						lbl_dnonveg.text=DNG.toString();
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Grd_UserDetails.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
						var Len:Number=0,TotAmt:Number=0;
						var Ac_Tmp:ArrayCollection=new ArrayCollection();
						Ac_Tmp=Grd_UserDetails.dataProvider as ArrayCollection;				
						lblbveg.text=="";
						lbl_bnonveg.text=="";
						lbllveg.text=="";
						lbllnonveg.text=="";
						lbldveg.text=="";
						lbldnonveg.text=="";
						var TotalBveg:int=0;
						var TotalBnonveg:int=0;
						var TotalLveg:int=0;
						var TotalLnonveg:int=0;
						var TotalDveg:int=0;
						var TotalDnonveg:int=0;
						for(var i:int=0;i<Ac_Tmp.length;i++)
						{
							TotalBveg+=Number(Ac_Tmp[i].BreakfastVeg);
							TotalBnonveg+=Number(Ac_Tmp[i].BreakfastNonVeg);
							TotalLveg+=Number(Ac_Tmp[i].LunchVeg);
							TotalLnonveg+=Number(Ac_Tmp[i].LunchNonVeg);
							TotalDveg+=Number(Ac_Tmp[i].DinnerVeg);
							TotalDnonveg+=Number(Ac_Tmp[i].DinnerNonVeg);
						}
						var VG:Number=TotalBveg;
						lblbveg.text=VG.toString();
						var VNG:Number=TotalBnonveg;
						lblbnonveg.text=VNG.toString();
						var LG:Number=TotalLveg;
						lbllveg.text=LG.toString();
						var LNG:Number=TotalLnonveg;
						lbllnonveg.text=LNG.toString();
						var DG:Number=TotalDveg;
						lbldveg.text=DG.toString();
						var DNG:Number=TotalDnonveg;
						lbldnonveg.text=DNG.toString();
					}
					
				}
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					
					if (Id == 0)
					{
						alignAlert(Alert.show("KOT Details Added Successfully.","Message !",Alert.OK,
							null, null,	iconTickLarge, Alert.OK),10,"");
					}
					else
					{
						alignAlert(Alert.show("KOT Details Updated Successfully.","Message !",Alert.OK,
							null, null,	iconTickLarge, Alert.OK),10,"");
					}
					Fnclr();					
				} 
				if (Ds_Objects.currentTarget.description.toString() == "Search_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						hlp_Property.text = Ds_Objects.result.Tables.Table.Rows[0].PropertyName;
						dt_Date.text = Ds_Objects.result.Tables.Table.Rows[0].Date;
						PropertyId=Ds_Objects.result.Tables.Table.Rows[0].PropertyId;
						BookingId=Ds_Objects.result.Tables.Table.Rows[0].BookingId;
						Id=Ds_Objects.result.Tables.Table.Rows[0].Id;
					}
					
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Grd_Details.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
						var Len:Number=0,TotAmt:Number=0;
						var Ac_Tmp:ArrayCollection=new ArrayCollection();
						Ac_Tmp=Grd_Details.dataProvider as ArrayCollection;				
						lbl_bveg.text=="";
						lbl_bnonveg.text=="";
						lbl_lveg.text=="";
						lbl_lnonveg.text=="";
						lbl_dveg.text=="";
						lbl_dnonveg.text=="";
						var Totalbveg:int=0;
						var Totalbnonveg:int=0;
						var Totallveg:int=0;
						var Totallnonveg:int=0;
						var Totaldveg:int=0;
						var Totaldnonveg:int=0;
						for(var i:int=0;i<Ac_Tmp.length;i++)
						{
							Totalbveg+=Number(Ac_Tmp[i].BreakfastVeg);
							Totalbnonveg+=Number(Ac_Tmp[i].BreakfastNonVeg);
							Totallveg+=Number(Ac_Tmp[i].LunchVeg);
							Totallnonveg+=Number(Ac_Tmp[i].LunchNonVeg);
							Totaldveg+=Number(Ac_Tmp[i].DinnerVeg);
							Totaldnonveg+=Number(Ac_Tmp[i].DinnerNonVeg);
						}
						var VG:Number=Totalbveg;
						lbl_bveg.text=VG.toString();
						var VNG:Number=Totalbnonveg;
						lbl_bnonveg.text=VNG.toString();
						var LG:Number=Totallveg;
						lbl_lveg.text=LG.toString();
						var LNG:Number=Totallnonveg;
						lbl_lnonveg.text=LNG.toString();
						var DG:Number=Totaldveg;
						lbl_dveg.text=DG.toString();
						var DNG:Number=Totaldnonveg;
						lbl_dnonveg.text=DNG.toString();
					}
					if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
					{
						Grd_UserDetails.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
						var Len:Number=0,TotAmt:Number=0;
						var Ac_Tmp:ArrayCollection=new ArrayCollection();
						Ac_Tmp=Grd_UserDetails.dataProvider as ArrayCollection;				
						lblbveg.text=="";
						lblbnonveg.text=="";
						lbllveg.text=="";
						lbllnonveg.text=="";
						lbldveg.text=="";
						lbldnonveg.text=="";
						var TotalBveg:int=0;
						var TotalBnonveg:int=0;
						var TotalLveg:int=0;
						var TotalLnonveg:int=0;
						var TotalDveg:int=0;
						var TotalDnonveg:int=0;
						for(var i:int=0;i<Ac_Tmp.length;i++)
						{
							TotalBveg+=Number(Ac_Tmp[i].BreakfastVeg);
							TotalBnonveg+=Number(Ac_Tmp[i].BreakfastNonVeg);
							TotalLveg+=Number(Ac_Tmp[i].LunchVeg);
							TotalLnonveg+=Number(Ac_Tmp[i].LunchNonVeg);
							TotalDveg+=Number(Ac_Tmp[i].DinnerVeg);
							TotalDnonveg+=Number(Ac_Tmp[i].DinnerNonVeg);
						}
						var VG:Number=TotalBveg;
						lblbveg.text=VG.toString();
						var VNG:Number=TotalBnonveg;
						lblbnonveg.text=VNG.toString();
						var LG:Number=TotalLveg;
						lbllveg.text=LG.toString();
						var LNG:Number=TotalLnonveg;
						lbllnonveg.text=LNG.toString();
						var DG:Number=TotalDveg;
						lbldveg.text=DG.toString();
						var DNG:Number=TotalDnonveg;
						lbldnonveg.text=DNG.toString();
					}
					
				}
				if (Ds_Objects.currentTarget.description.toString() == "Delete_CUSTOM")
				{	
					alignAlert(Alert.show("KOT Details Deleted Successfully.","Message !",Alert.OK, null, null,iconTickLarge, Alert.OK),10,"");
					Fnclr();	
				}
			}
			public function Validation():String
			{
				// TODO Auto-generated method stub
				var ErrStr:String="";
				var Flag:Boolean=true;
				if(hlp_Property.text=="")
				{
					if(Flag==true)
					{
						hlp_Property.setFocus();Flag=false;
					}
					ErrStr=ErrStr+"*  Property is Required.\n";					
				}
				if((Grd_Details.dataProvider==null)||(Grd_Details.dataProvider.length==0))
				{
					if(Flag==true)
					{ 
						//Grd_Details.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+ "*  Details is Required \n";
				}
				return ErrStr;
			}
			
			protected function FnSave():void
			{
				ErrStr="";
				ErrStr=Validation()
				
				if(ErrStr!="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10);
					return;					
				}
				
				var Ac_Hdr:ArrayCollection=new ArrayCollection
					([{
						PropertyName:hlp_Property.text,Date:dt_Date.text,PropertyId:PropertyId,
						BookingId:BookingId,CheckInId:CheckInId,Id:Id
						
					}]);
				var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
				var KOT:ArrayCollection= new  ArrayCollection();
				KOT.removeAll();
				KOT=Grd_Details.dataProvider as ArrayCollection;
				var GridXml:String="";
				GridXml += "<ROOT>";
				GridXml += ObjToXmlStr_Comm(KOT,"GridXml")
				GridXml += "</ROOT>";
				var USERKOT:ArrayCollection= new  ArrayCollection();
				USERKOT.removeAll();
				USERKOT=Grd_UserDetails.dataProvider as ArrayCollection;
				var ServiceXml:String="";
				ServiceXml += "<ROOT>";
				ServiceXml += ObjToXmlStr_Comm(USERKOT,"ServiceXml")
				ServiceXml += "</ROOT>";
				useWeb("KOTEntry","Save_CUSTOM",[GlobalXml,HdrXml,GridXml,ServiceXml]);
			}
			
			
			protected function FnSearch():void
			{
				// TODO Auto-generated method stub
				PopUpManager.addPopUp( SearchPopUp , this, true);
				SearchPopUp.Prc_name="KOTEntry";
				var SearchParam:Array =new Array();
				SearchPopUp.HlpIndex="SEARCH";
				SearchParam[0]=GlobalXml;
				SearchParam[1]=0;				
				SearchPopUp.Prc_Param=SearchParam;
				SearchPopUp.HlpSrchGlobal="";
				SearchPopUp.dataPanel.focusEnabled=true;
				SearchPopUp.Pageint();
				SearchPopUp.addEventListener("PopupEnter",funpopupEnter);
				SearchPopUp.addEventListener("PopupClose",funpopupClose);
				PopUpManager.centerPopUp(SearchPopUp);
			}
			
			
			
			private function funpopupClose(event:Event):void{}
			private function funpopupEnter(event:Event):void{SearchDtls(SearchPopUp.SelectRow.Id,0);}			
			private function SearchDtls(Id:int,_PrdFk:int):void
			{
				var Load:Array = new Array();
				Load[0] = GlobalXml; Load[1] = Id;  				
				useWeb("KOTEntry","Search_CUSTOM",Load);
			}
			
			protected function Delete():void
			{
				// TODO Auto-generated method stub
				if(Id == 0)
				{
					alignAlert(Alert.show("This is Invalid Process.","Alert Message !",Alert.OK, 
						null, null,iconWarning, Alert.OK),10,'');					
					return;
				}	
				else
				{
					alignAlert(Alert.show("Do you want to Delete this item?", "Warning !",Alert.YES | Alert.NO, 
						null,removeDgridItem, iconWarning, Alert.NO),10,"");
				}
			}
			
			private function removeDgridItem(event:CloseEvent):void 
			{
				if (event.detail==Alert.YES) 
				{
					var Load:Array = new Array();
					Load[0]= GlobalXml; Load[1]= Id;   
					useWeb("KOTEntry","Delete_CUSTOM",Load);
				}
			}
			
			
			protected function Fnclr():void
			{
				// TODO Auto-generated method stub
				hlp_Property.text="";
				//dt_Date.text="";
				Id=0;
				PropertyId=0;dt_Date.text="";
				Grd_Details.dataProvider=null;
				Grd_UserDetails.dataProvider=null;
				lbl_bveg.text="";lbl_lveg.text="";lbl_dveg.text="";
				lbl_bnonveg.text="";lbl_lnonveg.text="";lbl_dnonveg.text="";
				lblbveg.text="";lbllveg.text="";lbldveg.text="";
				lblbnonveg.text="";lbllnonveg.text="";lbldnonveg.text="";
			}
			
			public function OnSelectionPropertyname():void
			{
				if(hlp_Property.selected())
				{
					hlp_Property.text=hlp_Property.Select_Row.Property;
					PropertyId=hlp_Property.Select_Row.PropertyId;
					Id=hlp_Property.Select_Row.Id;
					CheckInId=hlp_Property.Select_Row.CheckInId;
					BookingId=hlp_Property.Select_Row.BookingId
					//useWeb("KOTEntry","PropertyLoad_CUSTOM",[GlobalXml,'Property',"","",0,PropertyId]);
				}
				else
				{
					hlp_Property.text="";
					PropertyId=0;
				}
			}
			public function Grd_DetailsClick():void
			{
					var date:String="";
					date=dt_Date.text;
					useWeb("KOTEntry","PropertyLoad_CUSTOM",[GlobalXml,'Date',"",date,0,PropertyId]);
				
			}
			
			protected function dt_Date_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				var date1:String="";
				date1=dt_Date.text;
				useWeb("KOTEntry","PropertyLoad_CUSTOM",[GlobalXml,'Date',"",date1,0,PropertyId]);				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:VGroup x="0" y="0" width="100%" height="700" gap="5" horizontalAlign="center" verticalAlign="middle">
		<s:Group x="1" y="-5" width="914" height="700">
			
			<s:BorderContainer x="29" y="18" width="855" height="74" backgroundColor="#fbf9f9" depth="10">
				<s:Label x="39" y="13" text="Property"/>
				
				<WrbHelpComp:HelpText x="131" y="8" width="201" id="hlp_Property"
									  pxSetColumnsWidth="201,0"	pxSetHeight="183" depth="46"
									  onselection="{OnSelectionPropertyname()}">
				</WrbHelpComp:HelpText>
				<s:Label x="39" y="44" text="Date"/>
				<mx:DateField id="dt_Date" x="131" y="38" width="131" height="23" enabled="true"
							  formatString="DD/MM/YYYY" selectableRange="{{rangeEnd:new Date()}}"
							  
							  styleName="DisabledDateField" tabIndex="1" 
							  change="dt_Date_changeHandler(event)"
							  yearNavigationEnabled="false"/>
				
				
				<s:Button x="377" y="8" width="65" height="23" label="Search" click="Grd_DetailsClick()"/>
				
			</s:BorderContainer>
			<s:HGroup x="271" y="526" width="614" height="39" horizontalAlign="right" verticalAlign="middle">
				<WrbComp:SaveControl id="Sctrl" docSave="FnSave()" doSearch="FnSearch()" docDelete="Delete()"
									 docClear="Fnclr()">
				</WrbComp:SaveControl>
			</s:HGroup>	
			<s:BorderContainer x="29" y="92" width="855" height="380" depth="5">
				<mx:DataGrid id="Grd_Details" x="0" y="31"  verticalAlign="middle" editable="true" 
							 width="853" height="190" tabIndex="4" >
					<mx:columns>
						
						<mx:DataGridColumn dataField="Id" headerText="Id" width="250" editable="false" visible="false"/>
						<mx:DataGridColumn dataField="PropertyId" headerText="PropertyId" width="250" editable="false" visible="false"/>
						<mx:DataGridColumn dataField="BookingId" headerText="BookingId" width="250" editable="false" visible="false"/>
						<mx:DataGridColumn dataField="RoomId" headerText="RoomId" width="250" editable="false" visible="false"/>
						<mx:DataGridColumn dataField="BookingCode" headerText="BookingCode" width="75" editable="false"/>
						<mx:DataGridColumn dataField="GuestName" headerText="Guest" width="125" editable="false" visible="true"/>
						<mx:DataGridColumn dataField="RoomNo" headerText="Apt/Room/Bed" width="100" editable="false" visible="true"/>
						<mx:DataGridColumn dataField="BreakfastVeg" headerText="Veg" width="50"  editorDataField="value" >
							<mx:itemEditor>
								<fx:Component>
									<mx:NumericStepper stepSize="1" maximum="99" />
								</fx:Component>
							</mx:itemEditor>
						</mx:DataGridColumn> 
						<mx:DataGridColumn dataField="BreakfastNonVeg" headerText="Non-Veg" width="50"  editorDataField="value">
							<mx:itemEditor>
								<fx:Component>
									<mx:NumericStepper stepSize="1" maximum="99"  />
								</fx:Component>
							</mx:itemEditor>
						</mx:DataGridColumn> 
						<mx:DataGridColumn dataField="LunchVeg" headerText="Veg" width="50"  editorDataField="value">
							<mx:itemEditor>
								<fx:Component>
									<mx:NumericStepper stepSize="1" maximum="99" />
								</fx:Component>
							</mx:itemEditor>
						</mx:DataGridColumn> 
						<mx:DataGridColumn dataField="LunchNonVeg" headerText="Non-Veg" width="50"  editorDataField="value">
							<mx:itemEditor>
								<fx:Component>
									<mx:NumericStepper stepSize="1" maximum="99" />
								</fx:Component>
							</mx:itemEditor>
						</mx:DataGridColumn> 
						<mx:DataGridColumn dataField="DinnerVeg" headerText="Veg" width="50"  editorDataField="value">
							<mx:itemEditor>
								<fx:Component>
									<mx:NumericStepper stepSize="1" maximum="99"  />
								</fx:Component>
							</mx:itemEditor>
						</mx:DataGridColumn> 
						<mx:DataGridColumn dataField="DinnerNonVeg" headerText="Non-Veg" width="50"  editorDataField="value">
							<mx:itemEditor>
								<fx:Component>
									<mx:NumericStepper stepSize="1" maximum="99" />
								</fx:Component>
							</mx:itemEditor>
						</mx:DataGridColumn> 
						<mx:DataGridColumn dataField="CheckInId" headerText="CheckInId" width="10" visible="false"  editorDataField="value"/>
					</mx:columns>
				</mx:DataGrid>
				<s:Label x="425" y="8" width="141" height="22" text="BreakFast" verticalAlign="middle" textAlign="center"/>
				<s:Label x="564" y="8" width="141" height="22" text="Lunch" verticalAlign="middle" textAlign="center"/>
				<s:Label x="705" y="8" width="141" height="22" text="Dinner" verticalAlign="middle" textAlign="center"/>
				
			</s:BorderContainer>
			<s:BorderContainer x="29" y="340" width="855" height="187" depth="5">
				<s:Label x="15" y="7" text="Staff"/>
				<mx:DataGrid id="Grd_UserDetails" x="0" y="30"  verticalAlign="middle" editable="true" 
							 width="853" height="126" tabIndex="4" >
					<mx:columns>
						<mx:DataGridColumn dataField="UserName" headerText="User" width="105" editable="false" visible="true"/>
						<mx:DataGridColumn dataField="UserId" headerText="UserId" width="10" editable="false" visible="false"/>
						<mx:DataGridColumn dataField="BreakfastVeg" headerText="Veg" width="50"  editorDataField="value" >
							<mx:itemEditor>
								<fx:Component>
									<mx:NumericStepper stepSize="1" maximum="99" />
								</fx:Component>
							</mx:itemEditor>
						</mx:DataGridColumn> 
						<mx:DataGridColumn dataField="BreakfastNonVeg" headerText="Non-Veg" width="50"  editorDataField="value">
							<mx:itemEditor>
								<fx:Component>
									<mx:NumericStepper stepSize="1" maximum="99"  />
								</fx:Component>
							</mx:itemEditor>
						</mx:DataGridColumn> 
						<mx:DataGridColumn dataField="LunchVeg" headerText="Veg" width="50"  editorDataField="value">
							<mx:itemEditor>
								<fx:Component>
									<mx:NumericStepper stepSize="1" maximum="99" />
								</fx:Component>
							</mx:itemEditor>
						</mx:DataGridColumn> 
						<mx:DataGridColumn dataField="LunchNonVeg" headerText="Non-Veg" width="50"  editorDataField="value">
							<mx:itemEditor>
								<fx:Component>
									<mx:NumericStepper stepSize="1" maximum="99" />
								</fx:Component>
							</mx:itemEditor>
						</mx:DataGridColumn> 
						<mx:DataGridColumn dataField="DinnerVeg" headerText="Veg" width="50"  editorDataField="value">
							<mx:itemEditor>
								<fx:Component>
									<mx:NumericStepper stepSize="1" maximum="99"  />
								</fx:Component>
							</mx:itemEditor>
						</mx:DataGridColumn> 
						<mx:DataGridColumn dataField="DinnerNonVeg" headerText="Non-Veg" width="50"  editorDataField="value">
							<mx:itemEditor>
								<fx:Component>
									<mx:NumericStepper stepSize="1" maximum="99" />
								</fx:Component>
							</mx:itemEditor>
						</mx:DataGridColumn> 
						<mx:DataGridColumn dataField="Id" headerText="Id" width="10" editable="false" visible="false"/>
					</mx:columns>
				</mx:DataGrid>
				<s:Label x="256" y="8" width="141" height="22" text="BreakFast" verticalAlign="middle" textAlign="center"/>
				<s:Label x="465" y="10" width="141" height="22" text="Lunch" verticalAlign="middle" textAlign="center"/>
				<s:Label x="284" y="-22" width="141" height="22" text="Total" verticalAlign="middle" textAlign="center"/>
				<s:Label x="414" y="-22" width="75" height="22" id="lbl_bveg" text="" verticalAlign="middle" textAlign="center"/>
				<s:Label x="480" y="-22" width="75" height="22" id="lbl_bnonveg" text="" verticalAlign="middle" textAlign="center"/>
				<s:Label x="550" y="-22" width="75" height="22" id="lbl_lveg" text="" verticalAlign="middle" textAlign="center"/>
				<s:Label x="620" y="-22" width="75" height="22" id="lbl_lnonveg" text="" verticalAlign="middle" textAlign="center"/>
				<s:Label x="684" y="-22" width="75" height="22" id="lbl_dveg" text="" verticalAlign="middle" textAlign="center"/>
				<s:Label x="762" y="-22" width="75" height="22" id="lbl_dnonveg" text="" verticalAlign="middle" textAlign="center"/>
				<s:Label x="676" y="8" width="141" height="22" text="Dinner" verticalAlign="middle" textAlign="center"/>
				<s:Label x="84" y="158" width="141" height="22" text="Total" verticalAlign="middle" textAlign="center"/>
				<s:Label x="234" y="158" width="75" height="22" id="lblbveg" text="" verticalAlign="middle" textAlign="center"/>
				<s:Label x="337" y="158" width="75" height="22" id="lblbnonveg" text="" verticalAlign="middle" textAlign="center"/>
				<s:Label x="445" y="158" width="75" height="22" id="lbllveg" text="" verticalAlign="middle" textAlign="center"/>
				<s:Label x="546" y="158" width="75" height="22" id="lbllnonveg" text="" verticalAlign="middle" textAlign="center"/>
				<s:Label x="648" y="158" width="75" height="22" id="lbldveg" text="" verticalAlign="middle" textAlign="center"/>
				<s:Label x="757" y="158" width="75" height="22" id="lbldnonveg" text="" verticalAlign="middle" textAlign="center"/>		
						

				</s:BorderContainer>
		</s:Group>
	</s:VGroup>
</s:Application>
