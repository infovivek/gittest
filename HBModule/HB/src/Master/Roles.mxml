<?xml version="1.0"?>
<!-- dpcontrols/TreeAddRemoveNode.mxml -->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbComp="WrbComp.*"
			   width="100%" height="100%" creationComplete="pageLoad(event)">
	<fx:Declarations>
		
		
	</fx:Declarations>
	
	<fx:Style source="..\\Common\\ApplicationCSS.css" />
	<fx:Script source="..\\Common\\CommonScript.as" />
	<fx:Script source="..\\Common\\Functions.as"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Grouping;
			import mx.collections.GroupingCollection2;
			import mx.collections.GroupingField;
			import mx.collections.XMLListCollection;
			import mx.core.mx_internal;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.TreeEvent;
			import mx.messaging.events.ChannelEvent;
			
			import spark.components.CheckBox;
			import spark.events.IndexChangeEvent;
			public var ErrStr:String="";
			import flash.debugger.enterDebugger;
			import flashx.textLayout.events.SelectionEvent;
			import mx.events.CloseEvent;
			public static var GlobalXml:String="";				
			public static var Global_AC:ArrayCollection=new ArrayCollection();
			public var AC:ArrayCollection=new ArrayCollection(); 
			public var Id:int=0;
			public static var ArrayLen:int=0;
			public var DtlsArray:ArrayCollection=new ArrayCollection();
			public var HdrArray:ArrayCollection=new ArrayCollection();
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			import spark.events.GridEvent;
			public var CorrectTemp:ArrayCollection= new ArrayCollection();
			public var CorrectTemp1:ArrayCollection= new ArrayCollection();
			public var XmlParentMenu:XML;
			
			[Bindable]
			private var permissionsXML:XML =<permission>
					 <permission pId="4" pName="Master" pParentID="0" checked="0" Id="4">
					 <permission pId="5" pName="Role Master" pParentID="4" checked="0" Id="0"/>
					 </permission>
					 <permission pId="7" pName="Property" pParentID="0" checked="0" Id="7">
					 <permission pId="6" pName="Property other" pParentID="7" checked="0" Id="0"/>
					 <permission pId="12" pName="New Password" pParentID="7" checked="0" Id="0"/>
					 </permission>
					 </permission>;
			
			
			public function pageLoad(event:FlexEvent):void
			{
				Global_AC = funLoginInfo("<gScrId>1</gScrId><gUsrFk>1</gUsrFk>");				
				GlobalXml = "";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";	
				Help();
				SCtrl.setButtonRights("Search",true);
			}
			public function Help():void
			{  
				useWeb("Roles","PageLoad_CUSTOM",[GlobalXml,"PageLoad","",0]); 
				useWeb("Roles","DataLoad_CUSTOM",[GlobalXml,"Dataload","",0]);
			} 
			
			
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{
				
				if (Ds_Objects.currentTarget.description.toString() == "PageLoad_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_User.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "DataLoad_CUSTOM")
				{		
					if(Ds_Objects.result.Tables.Table.Rows.length > 0 )
					{				   
						HdrArray=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						DtlsArray=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
						MenuMenuItem();
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					if(Id==0)
					{
						alignAlert(Alert.show("Saved Successfully.","Message !",Alert.OK, null, null,iconTickLarge, Alert.OK),10,'');
						Clear();
					}
					else
					{
						alignAlert(Alert.show("Updated Successfully.","Message !",Alert.OK, null,null,iconTickLarge, Alert.OK),10,"");
						Clear();
					} 
					
				}
				if (Ds_Objects.currentTarget.description.toString() == "Search_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						txt_rolename.text=Ds_Objects.result.Tables.Table.Rows[0].RoleName;
						drp_status.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].Statuss;
						Id=Ds_Objects.result.Tables.Table.Rows[0].Id;
						
						if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
						{
							HdrArray=new ArrayCollection();
							HdrArray=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
						}
						if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
						{
							DtlsArray=new ArrayCollection();
							DtlsArray=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
						}						
						MenuMenuItem();
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Delete_CUSTOM")
				{	
					alignAlert(Alert.show("Deleted Successfully.","Message !",Alert.OK,null,null,iconTickLarge, Alert.OK),10,"");
					Clear();	
				}
			}
			
			protected function Save():void
			{ 
				ErrStr="";
				ErrStr=ValidationFun();
				if(ErrStr !=="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				}
				
				var Ac:ArrayCollection= new ArrayCollection
					([{RoleName:txt_rolename.text, 
						Statuss:drp_status.selectedItem,
						Id:Id}]);
				var HdrXml:String = ObjToXmlStr_Comm(Ac,"HdrXml")
				var xList:XMLList = permissionsXML.descendants()//.(@checked == "1");
				var str:String = new String();
				var Ac1:ArrayCollection= new ArrayCollection();
				for (var x:uint=0; x < xList.length(); x++)
				{
					var Rights:String = xList[x].@checked;
					var screenId:Number = xList[x].@pId;
					var Id:String=xList[x].@Id;
					var ScreenName:String=xList[x].@pName;
					var ModuleId:String=xList[x].@pParentID;					
					Ac1.addItem({ModuleId:ModuleId,
						ScreenName:ScreenName,screenId:screenId,Rights:Rights,
						Id:Id});
					str+=xList[x].@pName + "\n";   
				}
				var GridXml:String = "<ROOT>";
				GridXml+= ObjToXmlStr_Comm(Ac1,"GridXml")
				GridXml += "</ROOT>"
				useWeb("Roles","Save_CUSTOM",[GlobalXml,HdrXml,GridXml]);
			}
			
			private function ValidationFun():String
			{
				ErrStr="";
				var TxtFlag:Boolean=true;
				if(txt_rolename.text=="")
				{
					if(TxtFlag==true)
					{
						txt_rolename.setFocus();
						TxtFlag=false;
					}
					ErrStr=ErrStr+"*  RoleName is Required. \n";
				}
//				if(drp_status.selectedItem=="Active")
//				{
//					if(TxtFlag==true)
//					{
//						drp_status.setFocus();
//						TxtFlag=false;
//					}
//					ErrStr=ErrStr+"*   Status is Required. \n";
//				}
				return ErrStr;
			}
			
			private function MenuMenuItem():void
			{	
				var MenuStr:String="";
				var ParMenu:ArrayCollection= new ArrayCollection();
				var XmlParentMenu:XML = new XML();
				var XmlList:XMLList=new XMLList();
				var n:int=0;
				var s:int=0;
				for(var i:int=0;i<HdrArray.length;i++)
				{					
					if(n != 0)
					{						
						ParMenu.addItem(XmlParentMenu);
					}
					n=1
					XmlParentMenu =<permission pId={HdrArray[i].scrId} 
					pName={HdrArray[i].ModuleName} pParentID={HdrArray[i].ModuleId} 
					checked="0" Id={HdrArray[i].scrId}></permission>;
					for(var j:int=0;j<DtlsArray.length;j++)
					{						
						var ModuleName:String = DtlsArray.source[j].ModuleName.toString();
						var Rights:String = DtlsArray.source[j].Rights;
						var screenId:Number = Number(DtlsArray.source[j].scrId);
						var Id:String=DtlsArray.source[j].Id;
						var ScreenName:String=DtlsArray.source[j].ScreenName.toString();
						var ModuleId:String=DtlsArray.source[j].ModuleId.toString();					
						if(DtlsArray.source[j].ModuleId==HdrArray.source[i].scrId)
						{
							XmlParentMenu = XmlParentMenu.appendChild(
								<permission pId={screenId} pName={ScreenName} 
								pParentID={ModuleId} checked={Rights} Id={Id}></permission>)
							
						}
					}
				}
				MenuStr="<permission>";
				ParMenu.addItem(XmlParentMenu);
				for(var i:int=0;i<ParMenu.length;i++)
				{
					MenuStr=MenuStr+ParMenu[i].toString();
				}
				MenuStr+="</permission>";
				permissionsXML=new XML(MenuStr);
				//trPermissions.dataProvider=permissionsXML;
			}
			
			private function  Search():void
			{
				//visible=false;
				//				PopUpManager.addPopUp( SearchPopUp , this, true);
				//				SearchPopUp.Prc_name="Roles"
				//				var SearchParam:Array =new Array();
				//				SearchPopUp.HlpIndex="SEARCH"
				//				SearchParam[0]=GlobalXml;
				//				SearchParam[1]=0;				
				//				SearchPopUp.Prc_Param=SearchParam
				//				SearchPopUp.HlpSrchGlobal=""
				//				SearchPopUp.dataPanel.focusEnabled=true
				//				SearchPopUp.Pageint()					
				//				SearchPopUp.addEventListener("PopupEnter",funpopupEnter);
				//				SearchPopUp.addEventListener("PopupClose",funpopupClose);
				//				PopUpManager.centerPopUp(SearchPopUp); 
			}
			//			private function funpopupClose(event:Event):void
			//			{
			//				
			//			}
			//			
			//			private function funpopupEnter(event:Event):void
			//			{				
			//				SearchDtls(SearchPopUp.SelectRow.Id,0);			
			//			}
			//		
			//			private function SearchDtls(Id:int,_PrdFk:int):void
			//			{
			//				var Load:Array =new Array();	
			//				Load[0]=GlobalXml; Load[1]=Id;  			
			//				useWeb("Roles","Search_CUSTOM",Load);
			//			}
			
			private function Clear():void
			{			
				txt_rolename.text="";
				drp_status.selectedItem="Active";
				Id=0;
				chk_SelectAll.selected="";
				Help();
				Grd_User.dataProvider=null;
			}
			private function FnDelete():void
			{
				if(Id ==0)
				{
					alignAlert(Alert.show("This is an Invalid Process.","Alert Message !",Alert.OK, 
						null, null,iconWarning, Alert.OK),10,'');					
					return;
				}
				else
				{
				if(Id !=0)
				{
					alignAlert(Alert.show("Do you want to Delete this item ?", "Warning !",Alert.YES | Alert.NO, 
						null,removeItem, iconWarning, Alert.NO),10,"");
				}
				}
			}
			private function removeItem(event:CloseEvent):void 
			{	
				if (event.detail==Alert.YES) 
				{
					var Load:Array = new Array();
					Load[0]=GlobalXml; Load[1]= Id;
					useWeb("Roles","Delete_CUSTOM",Load);
				} 
			}
			protected function checkbox1_changeHandler(event:Event):void
			{
				if(chk_SelectAll.selected==true)
				{
					useWeb("Roles","DataLoad_CUSTOM",[GlobalXml,"Selectall","",0]);
				}
				else
				{
					useWeb("Roles","DataLoad_CUSTOM",[GlobalXml,"Dataload","",0]);
				}
			}
			protected function Grd_User_doubleClickHandler(event):void
			{
				var Temp_ACGrid:ArrayCollection=new ArrayCollection();
				Temp_ACGrid=Grd_User.dataProvider as ArrayCollection;
				if((Temp_ACGrid == null)||(Temp_ACGrid.length==0))
				{
					alignAlert(Alert.show("This is an Invalid Process"));	
				}
				else
				{
					var Load:Array =new Array();
					Load[0]=GlobalXml; Load[1]=event.currentTarget.selectedItem.Id;  				
					useWeb("Roles","Search_CUSTOM",Load);
				}
			}
		]]>
	</fx:Script>
	<s:BorderContainer x="0" y="0" width="100%" height="100%" backgroundColor="#fbf9f9" borderVisible="false">
		
		<mx:Tree id="trPermissions" x="503" y="49" width="315" height="389" borderStyle="none"
				 dataProvider="{permissionsXML}" defaultLeafIcon="{null}" folderClosedIcon="{null}"
				 folderOpenIcon="{null}" itemRenderer="WrbHelpComp.PermissionsTreeItemRendererV2"
				 labelField="@pName" mouseEnabled="false" paddingTop="6" showRoot="false"
				 verticalScrollPolicy="auto"/>
		
		<s:BorderContainer x="120" y="29" width="354" height="94" >
			<mx:Label x="14" y="15" text="RoleName"  />
			<s:Label x="77" y="13" width="10" height="12" text="*" color="Red"/>
			<mx:Label x="14" y="50" text="Status"  />
			<s:TextInput x="93" y="10" width="245" height="22" id="txt_rolename" 
						 tabIndex="1"  prompt="Role Name"/>
			<s:DropDownList x="93" y="55" width="247" height="22" id="drp_status"
							selectedItem="Active" tabIndex="2">
				<s:ArrayList>
					<fx:String>Active</fx:String>
					<fx:String>InActive</fx:String>
				</s:ArrayList>
			</s:DropDownList>
		</s:BorderContainer>
		<s:CheckBox x="509" y="26" id="chk_SelectAll" label="SelectAll"  fontWeight="bold"
					change="checkbox1_changeHandler(event)"/>
		
		<mx:DataGrid x="120" y="140" width="354" height="299" id="Grd_User" 
					 doubleClickEnabled="true" doubleClick="Grd_User_doubleClickHandler(event)" >
			<mx:columns>						
				<mx:DataGridColumn dataField="RoleName" headerText="RoleName" width="110"/>
				<mx:DataGridColumn dataField="Statuss" headerText="Status" width="100"/>
				<mx:DataGridColumn dataField="Id"  visible="false"/>
			</mx:columns>
		</mx:DataGrid>
		<s:HGroup x="0" y="464" width="100%" height="40" horizontalAlign="center" verticalAlign="top" >
			
		<WrbComp:SaveControl id="SCtrl" x="224" y="460" width="497" docClear="Clear()"
							 docDelete="FnDelete()" docSave="Save()" docRefresh="Help()" doSearch="Search()">
		</WrbComp:SaveControl>			
		</s:HGroup>
		<mx:HRule x="0" y="450" width="100%" strokeColor="#eb1c24"/>
	</s:BorderContainer>
	
</s:Application>