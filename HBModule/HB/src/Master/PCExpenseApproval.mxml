<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbComp="WrbComp.*"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   xmlns:ns1="*"
			   width="100%" height="100%" creationComplete="PageLoad(event)" pageTitle="PCExpenseApproval">
	<fx:Declarations>
		<mx:NumberFormatter id="NF_Two" precision="2" rounding="nearest"/>
	</fx:Declarations>
	<fx:Style source = "..\\Common\\ApplicationCSS.css"/>
	<fx:Script source="..\\Common\\CommonScript.as"/>
	<fx:Script source="..\\Common\\Functions.as"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import com.as3xls.xls.Type;
			
			import mx.collections.ArrayCollection;
			import mx.containers.Accordion;
			import mx.controls.Alert;
			import mx.controls.Text;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.ColorPickerEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			import mx.graphics.codec.PNGEncoder;
			import mx.managers.PopUpManager;
			import mx.rpc.http.mxml.HTTPService;
			import mx.states.AddItems;
			import com.as3xls.xls.Cell;
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			import com.as3xls.xls.Type;
			import org.hamcrest.mxml.collection.Array;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public static var Global_AC:ArrayCollection = new ArrayCollection();
			public static var GlobalXml:String = "",TypeServiceId:int=0,ApprovalId:int=0,ErrStr:String="";
			public var Id:int=0,ErrMsg:String="",Roles:String="",PropertyId:int=0,PropertyName:String="",UserId:int=0;
			public var AddMode:Boolean=true,Flag:Boolean=true;
			public var PId:int=0,UId:int=0;
			private var xlsFile:ExcelFile;
			
			
			protected function PageLoad(event:FlexEvent):void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				Help();
				
			}
			public function Help():void
			{  
				useWeb("PCExpenseApproval","PAGELOAD_CUSTOM",[GlobalXml,'PAGELOAD',0,Global_AC[0].UsrId,0,'']);
			}
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{
				if (Ds_Objects.currentTarget.description.toString() == "PAGELOAD_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Details.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Actionload_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_User1.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "HistoryLoad_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Txt_Requestedby.text=Ds_Objects.result.Tables.Table.Rows[0].Requestedby;
						Txt_RequestedOn.text=Ds_Objects.result.Tables.Table.Rows[0].RequestedOn;
						Txt_RequestedProperty.text=Ds_Objects.result.Tables.Table.Rows[0].PCAccount;
						Txt_Requestedamount.text=Ds_Objects.result.Tables.Table.Rows[0].Amount;
						Txt_Closingbalance.text=Ds_Objects.result.Tables.Table.Rows[0].Closingbalance;
						Txt_Openingbalance.text=Ds_Objects.result.Tables.Table.Rows[0].OpeningBalance;
						PId=Ds_Objects.result.Tables.Table.Rows[0].PropertyId;
						UId=Ds_Objects.result.Tables.Table.Rows[0].UserId;
					}
					if (Ds_Objects.currentTarget.description.toString() == "Rejected_CUSTOM")
					{
						
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						
						Grd_History.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					}
					var OB:Number=Number(Txt_Openingbalance.text);
					var Ac_Tmp1:ArrayCollection=new ArrayCollection();
					Ac_Tmp1=Grd_History.dataProvider as ArrayCollection;
					var Total:Number=0,TotPaid:Number=0;
					for(var i:int=0;i<Ac_Tmp1.length;i++)
					{
						Total+=Number(Ac_Tmp1[i].ApprovedAmount);
						TotPaid+=Number(Ac_Tmp1[i].ExpenseAmount);
					}
					var TA:String=NF_Two.format(Total+OB);
					Txt_AOAmount.text=TA.replace(",","");
					var VNG:Number=TotPaid;
					Txt_ExpAmount.text=VNG.toString();
				}
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					if (AddMode == true)
					{
						alignAlert(Alert.show("Expense Report Approved Successfully.","Message !",Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
					}
					else
					{
						alignAlert(Alert.show("Expense Report Approved Successfully.","Message !",Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
					}
					FnClear();
					
				}
			}
			protected function FnValidation_BeforeSave():String
			{
				ErrStr="";
				
				var TxtFlag:Boolean=true;
				err();
				if(Grd_Details.dataProvider ==null)
				{
					ErrStr=ErrStr+"* User Details should not be Empty.\n";
				}
				return ErrStr; 
				
			}	
			public function err():void
			{
				var Grid_AC1:ArrayCollection=new ArrayCollection();
				var SaveFlag:Boolean=true;				;
				if(Grd_Details.dataProvider !=null)
				{ 
					Grid_AC1=Grd_Details.dataProvider as ArrayCollection;
					var i:int=Grid_AC1.length-1;
					for( i ;i>=0;i--)
					{
						if(Grid_AC1[i].Process ==true)
						{  
							SaveFlag=false;
						} 						
					}	
					Grd_Details.dataProvider=Grid_AC1.source;
					if(SaveFlag==true)
					{
						ErrStr=ErrStr+"* Select Any One User to Approve.\n";
					}
				}
			}
			protected function FnSave():void
			{
				ErrStr="";
				ErrMsg = ""; Flag = true; 
				var Str:String=FnValidation_BeforeSave();
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				else
				{
					alignAlert(Alert.show("Do you want Submit the Vendor Payment Request?", "Warning",Alert.YES | Alert.NO, null,
						FnSave1, iconWarning, Alert.NO),10,"");
				}
			}
			protected function FnSave1(event:CloseEvent):void
			{
				if ((event.detail==Alert.YES)) 
				{
					var PCR:ArrayCollection= new  ArrayCollection();
					PCR.removeAll();
					PCR=Grd_Details.dataProvider as ArrayCollection;
					var ServiceXml:String="";
					ServiceXml += "<ROOT>";
					ServiceXml += ObjToXmlStr_Comm(PCR,"ServiceXml")
					ServiceXml += "</ROOT>";
					useWeb("PCExpenseApproval","Save_CUSTOM",[GlobalXml,ServiceXml]);
				}
			}
			
			protected function FnClear():void
			{				
				Help();
				Grd_Details.dataProvider=null;
				bdr_Action.visible=false;
				bdr_History.visible=false;
			}
			public function FnHistory(Event):void
			{ 
				//var Grid_AC:ArrayCollection=new ArrayCollection();
				UserId=Grd_Details.selectedItem.RequestedUserId;
				PropertyId=Grd_Details.selectedItem.PropertyId;
				Roles=Grd_Details.selectedItem.RequestedOn;
				//Id1=Grd_Details.selectedItem.Id;
				Grd_History.dataProvider=null;
				useWeb("PCExpenseApproval","HistoryLoad_CUSTOM",[GlobalXml,"History",PropertyId,UserId,0,Roles]);
				bdr_History.visible=true;
				Grd_Details.visible=false;
				bdr_Scroll.visible=false;
				Scr_Grid.visible=false;
			}
			protected function FnReject():void
			{
				var ReqOn=Txt_RequestedOn.text
				useWeb("PCExpenseApproval","Rejected_CUSTOM",[GlobalXml,"Reject",PId,UId,0,ReqOn]);
				bdr_History.visible=false;
				Grd_History.dataProvider=null;
				Grd_Details.visible=true;
				bdr_Scroll.visible=true;
				Scr_Grid.visible=true;
				Help();
			}
			protected function Export(event:MouseEvent):void
			{
				
				if(Grd_History.dataProvider !=null)
				{
					var arrExportResult:ArrayCollection = Grd_History.dataProvider as ArrayCollection;
					xlsFile = new ExcelFile();
					var sheet:Sheet = new Sheet();
					
					sheet.resize(arrExportResult.length+1,14);
					
					sheet.setCell(0,0,'RequestedOn');
					sheet.setCell(0,1,'ApprovedAmount');
					sheet.setCell(0,2,'ExpenseAmount');
					sheet.setCell(0,3,'ExpenseHead');
					sheet.setCell(0,4,'Description');
					
					
					for(var i:int=0;i<arrExportResult.length;i++)
					{
						sheet.setCell(i+1, 0, arrExportResult[i].RequestedOn);
						sheet.setCell(i+1, 1, arrExportResult[i].ApprovedAmount);
						sheet.setCell(i+1, 2, arrExportResult[i].ExpenseAmount);
						sheet.setCell(i+1, 3, arrExportResult[i].ExpenseHead);
						sheet.setCell(i+1, 4, arrExportResult[i].Description);
						
						
					}
					Grd_History.dataProvider = arrExportResult;
					xlsFile.sheets.addItem(sheet);      
					var bytes: ByteArray = xlsFile.saveToByteArray();
					var fr:FileReference = new FileReference();
					fr.save(bytes,"PC Expense Approval.xls");
				}
				else
				{
					alignAlert(Alert.show("ServiceItem Details Required.","Message !",
						Alert.OK, null, null, iconErrLarge, Alert.OK),10,"");
				}
								
			}
			public var Id1:int=0;
			public function FnAction(Event):void
			{ 
				
				UserId=Grd_Details.selectedItem.RequestedUserId;
				PropertyId=Grd_Details.selectedItem.PropertyId;
				Id1=Grd_Details.selectedItem.Id;
				Roles=Grd_Details.selectedItem.RequestedOn;
				Grd_User1.dataProvider=null;
				useWeb("PCExpenseApproval","Actionload_CUSTOM",[GlobalXml,"Action",PropertyId,UserId,0,Roles]);
				bdr_Action.visible=true;
				bdr_History.visible=false;
				Grd_Details.visible=false;
				bdr_Scroll.visible=false;
				Scr_Grid.visible=false;
			}
			public function FnClosetariff_clickHandler(event):void
			{
				bdr_History.visible=false;
				Grd_History.dataProvider=null;
				Grd_Details.visible=true;
				bdr_Scroll.visible=true;
				Scr_Grid.visible=true;
				Help();
			}
			public function FnClose_clickHandler(event):void
			{
				bdr_Action.visible=false;
				Grd_Details.visible=true;
				bdr_Scroll.visible=true;
				Scr_Grid.visible=true;
				Grd_User1.dataProvider=null;
			}
			public function FnChkChange(event:Event):void
			{
				var Ac:ArrayCollection=new ArrayCollection();				
				Ac=Grd_Details.dataProvider as ArrayCollection;				
				var Index:int=Grd_Details.selectedIndex;
				var Flag:Boolean=true;
				
				if(Ac[Index].Process==0)
				{
					Ac[Index].Process=true;
				}
				else
				{
					Ac[Index].Process=false;
				} 
			}
			public var ImagePath:String=""
			public function Billview(Event):void
			{ 
				ImagePath=Grd_History.selectedItem.Bill;
				ExternalInterface.call("changeDocumentTitle",ImagePath);
				ImagePath="";	
			}
			protected function Chk_Selectall_changeHandler(event:Event):void
			{
				var TempArr:ArrayCollection=new ArrayCollection();
				TempArr=Grd_Details.dataProvider as ArrayCollection;
				if(TempArr!=null)
				{
					for(var i:int=0;i<TempArr.length;i++)
					{
						TempArr[i].Process=Chk_Selectall1.selected;
						
					}
					Grd_Details.dataProvider=TempArr;
				}				
				
			}
		]]>
	</fx:Script>
	
	<mx:HRule x="0" y="465" width="100%" strokeColor="#eb1c24"/>
	
	<WrbComp:Button_BB id="Sctrl_Approve" x="375" y="476" width="94" height="30" click="FnSave()"
					   Lable_val="Approve">
	</WrbComp:Button_BB>
	<WrbComp:Button_BB id="Sctrl_Clear" x="505" y="476" width="94" height="30"
					   click="FnClear()" Lable_val="Clear">
	</WrbComp:Button_BB>
	
	
	<s:BorderContainer x="46" y="33" width="851" height="473" id="bdr_History"
					   borderVisible="true" visible="false" depth="1500">
		<mx:Label x="82" y="58" text="Expensed by"/>
		<mx:Label x="454" y="58" text="Submitted on"/>
		<mx:Label x="82" y="100" text="Expensed Property"/>
		<mx:Label x="454" y="103" text="Approved Amount"/>
		<mx:Label x="82" y="141" text="Opening Balance"/>
		<s:TextInput x="215" y="50" width="199" height="29"  id="Txt_Requestedby" editable="false"/>
		<s:TextInput x="576" y="50" width="199" height="29" id="Txt_RequestedOn" editable="false"/>
		<s:TextInput x="215" y="135" width="199" height="29" id="Txt_Openingbalance" editable="false"/>
		<s:TextInput x="256" y="433" width="98" height="29" id="Txt_PropertyId" visible="false" editable="false"/>
		<s:TextInput x="395" y="435" width="95" height="29" id="Txt_UserID" visible="false" editable="false"/>
		<mx:Label x="3" y="401" text="Approved and OpeningBalance"/>
		<s:TextInput x="178" y="396" width="81" height="29" id="Txt_AOAmount" editable="false"/>
		<s:TextInput x="273" y="396" width="81" height="29" id="Txt_ExpAmount" editable="false"/>
		<s:TextInput x="576" y="93" width="199" height="29" id="Txt_Requestedamount" editable="false"/>
		<mx:Label x="454" y="143" text="Closing Balance"/>
		<s:TextInput x="576" y="133" width="199" height="29" id="Txt_Closingbalance" editable="false"/>
		<s:TextInput x="215" y="93" width="199" height="29" id="Txt_RequestedProperty" editable="false"/>
		<mx:DataGrid x="61" y="174"  verticalAlign="middle" editable="true" visible="true"
					 width="750" height="220" tabIndex="4" id="Grd_History" >
			<mx:columns>
				<mx:DataGridColumn dataField="RequestedOn" headerText="Requested Date" width="100" editable="false"/>
				<mx:DataGridColumn dataField="ApprovedAmount" headerText="ApprovedAmount" width="100" editable="false"/>
				<mx:DataGridColumn dataField="ExpenseAmount" headerText="ExpenseAmount" width="100" editable="false"/>
				<mx:DataGridColumn dataField="ExpenseHead" headerText="Expense-Head" width="190" editable="false"/>
				<mx:DataGridColumn dataField="Description" headerText="Description" width="200" editable="false"/>
				<mx:DataGridColumn dataField="PropertyId" headerText="PropertyId" width="10" visible="false" editable="false"/>
				<mx:DataGridColumn dataField="UserId" headerText="UserId" width="10" visible="false" editable="false"/>
				<mx:DataGridColumn dataField="Bill" headerText="Bill" width="50" editable="false">
					<mx:itemRenderer >
						<fx:Component>
							<mx:HBox horizontalAlign="center" verticalAlign="middle">										
								<mx:Image source="@Embed(source='../Assets/Comment.png')" buttonMode="true"
										  click="outerDocument.Billview(event)"/>
							</mx:HBox>	
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="Id" headerText="Id" width="10" editable="false" visible="false"/>
			</mx:columns>
		</mx:DataGrid> 
		<s:BorderContainer x="0" y="0" width="849" height="42" borderVisible="true"  backgroundColor="#c2c2c2">
			<s:Image x="826" y="14" source="@Embed(source='../Assets/CrossSmall.png')" 
					 buttonMode="true" toolTip="Close" click="FnClosetariff_clickHandler(event)"/>
			<mx:Label x="23" y="13" text="Petty Cash Request Details" color="red"/>
		</s:BorderContainer>
		<WrbComp:Button_BB id="Sctrl_Reject" x="415" y="398" width="94" height="30"
						   click="FnReject()" Lable_val="Reject">
		</WrbComp:Button_BB>
		<WrbComp:Button_BB id="Sctrl_Export" x="565" y="398" width="94" height="30"
						   click="Export(event)" Lable_val="Export">
		</WrbComp:Button_BB>
	</s:BorderContainer>
	<s:BorderContainer x="232" y="43" width="538" height="409" id="bdr_Action" visible="false" depth="500">
		<s:BorderContainer x="0" y="0" width="536" height="42" borderVisible="true"  backgroundColor="#c2c2c2">
			<mx:Label x="15" y="12" text="Comment History" color="red"/>
		</s:BorderContainer>
		<mx:Label x="15" y="46" text="Approval Status" color="red"/>
		<s:Image x="513" y="14" source="@Embed(source='../Assets/CrossSmall.png')" 
				 buttonMode="true" toolTip="Close" click="FnClose_clickHandler(event)"/>
		<mx:DataGrid x="16" y="66"  verticalAlign="middle" editable="true" visible="true"
					 width="510" height="331" tabIndex="4" id="Grd_User1" >
			<mx:columns>
				<mx:DataGridColumn dataField="UserName" headerText="UserName" width="100" editable="false"
								   visible="true">
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="Status" headerText="Status" width="150" 
								   editable="false" visible="true">
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="Comments" headerText="Comments" width="150" editable="false">
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="Processedon" headerText="Processedon" width="100" editable="false">
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
		
	</s:BorderContainer>
	<s:CheckBox x="225" y="49" label="Select All" id="Chk_Selectall1" change="Chk_Selectall_changeHandler(event)" />
	<s:BorderContainer x="0" y="70" width="100%" height="352" id="bdr_Scroll" visible="true">
		<s:Scroller x="0" y="0" width="100%" height="364" id="Scr_Grid" visible="true">
			<s:VGroup width="100%" height="100%">
				<mx:DataGrid x="0" y="0"  verticalAlign="middle" editable="true" visible="true"
							 width="1250" height="350" tabIndex="4" id="Grd_Details">
					<mx:columns>
						<mx:DataGridColumn dataField="Approval History" headerText="Approval History" width="100" editable="false"
										   visible="true">
							<mx:itemRenderer >
								<fx:Component>
									<mx:HBox horizontalAlign="center" verticalAlign="middle">										
										<mx:Image source="@Embed(source='../Assets/Comment.png')" buttonMode="true"
												  click="outerDocument.FnAction(event)"/>
									</mx:HBox>	
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn dataField="View Report" headerText="View Report" width="100" 
										   editable="false" visible="true">
							<mx:itemRenderer >
								<fx:Component>
									<mx:HBox horizontalAlign="center" verticalAlign="middle">										
										<mx:Image source="@Embed(source='../Assets/view.gif')" buttonMode="true"
												  click="outerDocument.FnHistory(event)"/>
									</mx:HBox>	
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn dataField="Process" headerText="Select" width="100" editable="false">
							<mx:itemRenderer >
								<fx:Component>
									<mx:HBox horizontalAlign="center" verticalAlign="middle">
										<mx:CheckBox selected="{data.Process}"  
													 change="outerDocument.FnChkChange(event);" 
													 />
									</mx:HBox>	
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn dataField="RequestedOn" headerText="Submitted On" width="100" editable="false" visible="true"/>
						<mx:DataGridColumn dataField="Requestedby" headerText="Submitted By" width="100" editable="false"/>
						<mx:DataGridColumn dataField="PCAccount" headerText="PCAccount" width="100" editable="false"/>
						<mx:DataGridColumn dataField="ApprovedAmount" headerText="Approved Amount" width="100" editable="false"/>
						<mx:DataGridColumn dataField="ExpenseAmount" headerText="Expense Amount" width="100" editable="false"/>
						<mx:DataGridColumn dataField="ProcessedStatus" headerText="Processed Status" width="170" editable="false"/>
						<mx:DataGridColumn dataField="Processedon" headerText="LastProcessed on" width="115" editable="false"/>
						<mx:DataGridColumn dataField="Processedby" headerText="LastProcessed By" width="110" editable="false"/>
						<mx:DataGridColumn dataField="Comments" headerText="Comments" width="100" editable="true"/>
						<mx:DataGridColumn dataField="RequestedUserId" headerText="RequestedUserId" width="10" editable="false" visible="false"/>
						<mx:DataGridColumn dataField="PropertyId" headerText="PropertyId" width="10" editable="false" visible="false"/>
						<mx:DataGridColumn dataField="Id" headerText="Id" width="10" editable="false" visible="false"/>
						
					</mx:columns>
				</mx:DataGrid>
				
			</s:VGroup>
		</s:Scroller>
	</s:BorderContainer>
	
</s:Application>
