<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:Controls="fx.com.adobe.Controls.*"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   xmlns:WrbComp="WrbComp.*"
			   xmlns:flexlib="http://code.google.com/p/flexlib/"
			   xmlns:ns1="*"
			   width="100%" height="100%" creationComplete="PageLoad()"
			   pageTitle="Deposit">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script source = "..\\Common\\CommonScript.as"/>
	<fx:Script source = "..\\Common\\Functions.as"/>
	<fx:Style source="..\\Common\\ApplicationCSS.css"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import WrbHelpComp.HlpGridHdr;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.graphics.codec.PNGEncoder;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			public static var Global_AC:ArrayCollection = new ArrayCollection();
			public static var GlobalXml:String = "",TypeServiceId:int=0,ErrStr:String="";
			public var Id:int=0,ErrMsg:String="";
			private var fileRef:FileReference = new FileReference();
			private var fileTypes:Array = new Array();
			public var uploadURL:URLRequest = new URLRequest();
			private var arrColl:ArrayCollection;
			private var imageTypes:FileFilter = new FileFilter("Images (*.jpg; *.jpeg; *.gif; *.png)" ,"*.jpg; *.jpeg; *.gif; *.png");
			private var documentTypes:FileFilter = new FileFilter("Documents (*.pdf), (*.doc), (*.rtf), (*.txt)",("*.pdf; *.doc; *.rtf, *.txt"));
			private var FILE_URL:String = "";
			public var ImageCount:Number=0,UserId:int=0;
			public var AddMode:Boolean = true,Flag:Boolean=true;
			private var urlReq:URLRequest;
			public var Amount:String="",CashAccountId:int=0,CashAccount:String="",CashChalan:String="",Comments:String="",ChkAccountId:int=0,ChkAccount:String="",Mode:int=0;
			protected function PageLoad():void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				Brd_Cash.visible=true;
				Brd_Cheque.visible=false;
				btn_Cash.Button_B_mouseOverHandler();
				btn_Cheque.Button_OutHandler();
				useWeb("Deposit","PAGELOAD_CUSTOM",[GlobalXml,'PAGELOAD',"",0]);
				dt_CashDate.selectedDate = new Date();
				dt_Chkdate.selectedDate = new Date();
				init1();
				init();
				Chkinit();
				Chkinit1();
			}
			public function Help():void
			{
				useWeb("Deposit","PAGELOAD_CUSTOM",[GlobalXml,'PAGELOAD',"",0]);
			}
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{
				if (Ds_Objects.currentTarget.description.toString() == "PAGELOAD_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Cash.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Grd_Cheque.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
					{
						Drp_CashAccount.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table3.Rows.length > 0)
					{
						Drp_ChkAccount.dataProvider=Ds_Objects.result.Tables.Table3.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
//					if (Id == 0)
//					{
						alignAlert(Alert.show("Deposit Saved Successfully.","Message !",Alert.OK, 
							null, null, iconTickLarge, Alert.OK),10,"");
						CashCancel();
						ChequeCancel();
						
//					}
//					else
//					{
//						alignAlert(Alert.show("Deposit Updated Successfully.","Message !",Alert.OK, 
//							null, null, iconTickLarge, Alert.OK),10,"");
//					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "CashDetails_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						dt_CashDate.text=Ds_Objects.result.Tables.Table.Rows[0].Date;
						txt_CashDepositAmount.text=Ds_Objects.result.Tables.Table.Rows[0].Amount;
						txt_CashComments.text=Ds_Objects.result.Tables.Table.Rows[0].Comments;
						Drp_CashAccount.prompt=Ds_Objects.result.Tables.Table.Rows[0].AC;
						CashAccountId=Ds_Objects.result.Tables.Table.Rows[0].DepositeToId;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "ChkDetails_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						dt_Chkdate.text=Ds_Objects.result.Tables.Table.Rows[0].Date;
						txt_ChkDepositedAmount.text=Ds_Objects.result.Tables.Table.Rows[0].Amount;
						txt_ChkComment.text=Ds_Objects.result.Tables.Table.Rows[0].Comments;
						Drp_ChkAccount.prompt=Ds_Objects.result.Tables.Table.Rows[0].AC;
						ChkAccountId=Ds_Objects.result.Tables.Table.Rows[0].DepositeToId;
					}
				}
			}
			private function CashSave():void
			{
				var Flag:Boolean=true;var ErrStr:String="";	
				if(txt_CashDepositAmount.text=="")
				{
					if(Flag==true)
					{
						txt_CashDepositAmount.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* Amount is Required.\n";
				}
				if(CashAccountId==0)
				{
					if(Flag==true)
					{
						Drp_CashAccount.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* Cash Account is Required.\n";
				}
				//return ErrStr;
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				//ErrStr=Cashvalidation();
				if(	AddMode==true)
				{
					alignAlert(Alert.show("Do you want to Save this item?", "Warning",Alert.YES | Alert.NO, null,
						FnCashSave, iconWarning, Alert.NO),10,"");
				}
				Help();
			}
			
			protected function FnCashSave(event:CloseEvent):void
			{ 
				
				if (event.detail==Alert.YES) 
				{
				if(ImgFlag == true)
				{
					var bit:BitmapData = new BitmapData(100,100); 
					bit.draw(Img_CashChalan); 
					var png:PNGEncoder = new PNGEncoder(); 
					var by:ByteArray = png.encode(bit); 
					Img_CashChalan.source = by;				
					var s:int = by.length;				 
					var sd:String = "";	 
					CashChalan = "";				
					for(var i:int = 0; i < s; i++)
					{
						sd = by[i]; 
						CashChalan += sd+",";					
					}
				}
				if(ImgFlag == false)
				{
					CashChalan="";
				}
				CashChalan="";
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				else
				{
					var Ac:ArrayCollection=new ArrayCollection
						([{
							Id:Id,
							Date:dt_CashDate.text,
							Amount:txt_CashDepositAmount.text,
							AccountId:CashAccountId,
							Comments:txt_CashComments.text,
							Mode:1,
							Chalan:1
						}]);
					var HdrXml:String="";
					HdrXml += "<ROOT>";
					HdrXml += ObjToXmlStr_Comm(Ac,"HdrXml")
					HdrXml += "</ROOT>";
					useWeb("Deposit","Save_CUSTOM",[GlobalXml,HdrXml,CashChalan]);
				}
				}
			}
			private function ChkSave():void
			{
				//ErrStr=Chkvalidation();
				var Flag:Boolean=true;var ErrStr:String="";	
				if(txt_ChkDepositedAmount.text=="")
				{
					if(Flag==true)
					{
						txt_ChkDepositedAmount.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* Amount is Required.\n";
				}
				if(ChkAccountId==0)
				{
					if(Flag==true)
					{
						Drp_ChkAccount.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* Account is Required.\n";
				}
				//return ErrStr;
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				if(	AddMode==true)
				{
					alignAlert(Alert.show("Do you want to Save this item?", "Warning",Alert.YES | Alert.NO, null,
						FnChkSave, iconWarning, Alert.NO),10,"");
				}
				Help();
			}
			protected function FnChkSave(event:CloseEvent):void
			{ 
				//ErrStr=Chkvalidation();
				if (event.detail==Alert.YES) 
				{
				if(ImgFlag == true)
				{
					var bit:BitmapData = new BitmapData(100,100); 
					bit.draw(Img_CashChalan); 
					var png:PNGEncoder = new PNGEncoder(); 
					var by:ByteArray = png.encode(bit); 
					Img_CashChalan.source = by;				
					var s:int = by.length;				 
					var sd:String = "";	 
					CashChalan = "";				
					for(var i:int = 0; i < s; i++)
					{
						sd = by[i]; 
						CashChalan += sd+",";					
					}
				}
				if(ImgFlag == false)
				{
					CashChalan="";
				}
				CashChalan="";
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				else
				{
					var Ac:ArrayCollection=new ArrayCollection
						([{
							Id:Id,
							Date:dt_Chkdate.text,
							Amount:txt_ChkDepositedAmount.text,
							AccountId:ChkAccountId,
							Comments:txt_ChkComment.text,
							Mode:0,
							Chalan:1
						}]);
					var HdrXml:String="";
					HdrXml += "<ROOT>";
					HdrXml += ObjToXmlStr_Comm(Ac,"HdrXml")
					HdrXml += "</ROOT>";
					useWeb("Deposit","Save_CUSTOM",[GlobalXml,HdrXml]);
				}
				}
			}
			public function CashDetails(Event):void
			{ 
				Id=Grd_Cash.selectedItem.Id;
				useWeb("Deposit","CashDetails_CUSTOM",[GlobalXml,"Search","",Id]);
				Brd_Cash_Panel.visible=true;
				Brd_Cash.visible=false;
				btn_SaveCash.visible=false;
				btn_CancelCash.label="Close";
				dt_CashDate.enabled=false;
				txt_CashDepositAmount.enabled=false;
				Drp_CashAccount.enabled=false;
				txt_CashComments.editable=false;
				lblNewCash.text="View Cash Deposit";
			}
			public function ChkDetails(Event):void
			{ 
				Id=Grd_Cheque.selectedItem.Id;
				useWeb("Deposit","ChkDetails_CUSTOM",[GlobalXml,"Search","",Id]);
				Brd_Cheque_Panel.visible=true;
				Brd_Cheque.visible=false;
				btn_SaveChk.visible=false;
				btn_CancelChk.label="Close";
				dt_Chkdate.enabled=false;
				txt_ChkDepositedAmount.enabled=false;
				Drp_ChkAccount.enabled=false;
				txt_ChkComment.editable=false;
				lblNewChk.text="View Cheque Deposit";
			}
			
//Start of Image Upload for Cash Deposit			
			public var ImageFormat:String="";
			public function init():void
			{
				// This URL should be replaced with your server side URL
				//				var browserUrl:String = ExternalInterface.call("eval", "window.location.href");
				//				var arr:Array =browserUrl.split("/");
				ImageFormat=FilePath.text;				
				uploadURL.url = "http://sstage.in/Company.php?id="+txt_CashComments.text+"&pid="+0+"&imgcount="+ImageCount+"&imgformat="+ImageFormat;
				uploadURL.method = "POST"; // OR "POST" as you need it
				uploadURL.contentType = "multipart/form-data";				
				// Event Listeners for UI Buttons (Upload/Browse)
				
				Filedata.addEventListener(MouseEvent.CLICK, browseFiles);
				uploadbutton.addEventListener(MouseEvent.CLICK,uploadFiles);
				fileRef.addEventListener(Event.SELECT, selectHandler);	
			}
			//Browse for files
			
			private function browseFiles(event:Event):void
			{
				fileTypes.push(imageTypes);
				fileTypes.push(documentTypes);
				fileRef.browse(fileTypes);	
			}
			// called after user selects a file form the browse window.
			
			private function selectHandler(event:Event):void
			{	
				FilePath.text = event.currentTarget.name.toString();
				ImageFormat=FilePath.text;			
			}
			// called when user clicks on the Upload button to upload the file
			
			private function uploadFiles():void
			{	
				fileRef.addEventListener(Event.COMPLETE, completeHandler);
				fileRef.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA,dataHandler);
				fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR,securityErrorHandler);
				fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS,httpStatusHandler);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
				fileRef.upload(uploadURL);
			}
			// called after a file is uploaded
			
			private function completeHandler(event:Event):void
			{
				//Alert.show("File Uploaded successfully");	
			}
			//called after file upload is done and Data has been returned from Server
			
			private function dataHandler(event:DataEvent):void
			{
				//Alert.show("File Uploaded successfully");
				var browserUrl:String = ExternalInterface.call("eval", "window.location.href");
				var arr:Array =browserUrl.split("/");
				resultsTxtField.text = event.data.toString();
				Img_CashChalan.visible=true;
				Img_CashChalan.source="http://sstage.in/Company_Images/"+resultsTxtField.text;
				useWeb("CompanyMaster","ImageUpload_CUSTOM",[GlobalXml,'IMAGEUPLOAD',"http://sstage.in/Company_Images/"+resultsTxtField.text,0,0,0]);
			}
			// called if there is an error detected by flash player browsing or uploading a file
			
			private function ioErrorHandler(event:IOErrorEvent):void
			{
				mx.controls.Alert.show(String(event),"ioError",0);
			}
			// called if a security error
			
			private function securityErrorHandler(event:SecurityErrorEvent):void
			{
				mx.controls.Alert.show(String(event),"Security Error",0);
			}
			// server will return an http status code, code 200 means all is good
			
			private function httpStatusHandler(event:HTTPStatusEvent):void
			{
				if (event.status != 200)
				{
					mx.controls.Alert.show(String(event),"Error",0);
				}
			}
			
			//Image Download
			public var PropertyImageId:int=0;			
			private function init1():void {
				// Initialize the array collection to an empty collection. 
				arrColl = new ArrayCollection();
				
				// Set up the URL request to download the file specified by the FILE_URL variable. 
				urlReq = new URLRequest(FILE_URL);
				
				// Define file reference object and add a bunch of event listeners. 
				fileRef = new FileReference();
				fileRef.addEventListener(Event.CANCEL, doEvent);
				fileRef.addEventListener(Event.COMPLETE, doEvent);
				fileRef.addEventListener(Event.OPEN, doEvent);
				fileRef.addEventListener(Event.SELECT, doEvent);
				fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS, doEvent);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR, doEvent);
				fileRef.addEventListener(ProgressEvent.PROGRESS, doEvent);
				fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR, doEvent);
			}
			
			private function doEvent(evt:Event):void 
			{	
				FilePath.text="";
			}
			
			private function downloadSourceCodeZip():void {
				// Clear existing array collection. 
				//arrColl = new ArrayCollection();
				//Alert.show(FILE_URL);
				// Hide the Text control. //
				//txt.visible = false;
				// Begin download. 
				fileRef.download(urlReq);
			}
			
			private function showAlert(item:Object):void {
				Alert.show(item.eventString, item.type);
			}
			
			public var ImgFlag:Boolean=false;
			protected function FnClick_Btn_Browse():void
			{
				try
				{
					var imageTypes:FileFilter = new FileFilter("Images (*.jpg, *.jpeg, *.gif, *.png)", "*.jpg; *.jpeg; *.gif; *.png");
					//var textTypes:FileFilter = new FileFilter("Text Files (*.txt, *.rtf)", "*.txt; *.rtf");
					var allTypes:Array = new Array(imageTypes);
					var fileRef:FileReference = new FileReference();
					fileRef.browse(allTypes);				
					//fileRef = new FileReference();
					fileRef.addEventListener(Event.SELECT, selectHandler);
					fileRef.addEventListener(Event.COMPLETE, completeHandler);				
					function selectHandler(event:Event):void
					{
						FilePath.text = event.currentTarget.name.toString();
						fileRef.load();
					}
					function completeHandler(event:Event):void
					{
						Img_CashChalan.source = fileRef.data;
						ImgFlag=true;					
					}
					Brd_imageUpload.visible=true;
					init1();
					init();
				}
				catch(Exception)
				{
					
				}
			}
//End of Image Upload for Cash Deposit	

			
//Start of Image Upload for Cheque Deposit			
			public var ChkImageFormat:String="";
			public function Chkinit():void
			{
				// This URL should be replaced with your server side URL
				//				var browserUrl:String = ExternalInterface.call("eval", "window.location.href");
				//				var arr:Array =browserUrl.split("/");
				ChkImageFormat=FilePath.text;				
				uploadURL.url = "http://sstage.in/Company.php?id="+txt_CashComments.text+"&pid="+0+"&imgcount="+ImageCount+"&imgformat="+ChkImageFormat;
				uploadURL.method = "POST"; // OR "POST" as you need it
				uploadURL.contentType = "multipart/form-data";				
				// Event Listeners for UI Buttons (Upload/Browse)
				
				Filedata.addEventListener(MouseEvent.CLICK, ChkbrowseFiles);
				uploadbutton.addEventListener(MouseEvent.CLICK,ChkuploadFiles);
				fileRef.addEventListener(Event.SELECT, ChkselectHandler);	
			}
			//Browse for files
			
			private function ChkbrowseFiles(event:Event):void
			{
				fileTypes.push(imageTypes);
				fileTypes.push(documentTypes);
				fileRef.browse(fileTypes);	
			}
			// called after user selects a file form the browse window.
			
			private function ChkselectHandler(event:Event):void
			{	
				FilePath.text = event.currentTarget.name.toString();
				ChkImageFormat=FilePath.text;			
			}
			// called when user clicks on the Upload button to upload the file
			
			private function ChkuploadFiles():void
			{	
				fileRef.addEventListener(Event.COMPLETE, ChkcompleteHandler);
				fileRef.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA,ChkdataHandler);
				fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR,ChksecurityErrorHandler);
				fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS,ChkhttpStatusHandler);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR,ChkioErrorHandler);
				fileRef.upload(uploadURL);
			}
			// called after a file is uploaded
			
			private function ChkcompleteHandler(event:Event):void
			{
				//Alert.show("File Uploaded successfully");	
			}
			//called after file upload is done and Data has been returned from Server
			
			private function ChkdataHandler(event:DataEvent):void
			{
				//Alert.show("File Uploaded successfully");
				var browserUrl:String = ExternalInterface.call("eval", "window.location.href");
				var arr:Array =browserUrl.split("/");
				resultsTxtField.text = event.data.toString();
				Img_CashChalan.visible=true;
				Img_CashChalan.source="http://sstage.in/Company_Images/"+resultsTxtField.text;
				useWeb("CompanyMaster","ImageUpload_CUSTOM",[GlobalXml,'IMAGEUPLOAD',"http://sstage.in/Company_Images/"+resultsTxtField.text,0,0,0]);
			}
			// called if there is an error detected by flash player browsing or uploading a file
			
			private function ChkioErrorHandler(event:IOErrorEvent):void
			{
				mx.controls.Alert.show(String(event),"ioError",0);
			}
			// called if a security error
			
			private function ChksecurityErrorHandler(event:SecurityErrorEvent):void
			{
				mx.controls.Alert.show(String(event),"Security Error",0);
			}
			// server will return an http status code, code 200 means all is good
			
			private function ChkhttpStatusHandler(event:HTTPStatusEvent):void
			{
				if (event.status != 200)
				{
					mx.controls.Alert.show(String(event),"Error",0);
				}
			}
			
			//Image Download
			public var ChkPropertyImageId:int=0;			
			private function Chkinit1():void {
				// Initialize the array collection to an empty collection. 
				arrColl = new ArrayCollection();
				
				// Set up the URL request to download the file specified by the FILE_URL variable. 
				urlReq = new URLRequest(FILE_URL);
				
				// Define file reference object and add a bunch of event listeners. 
				fileRef = new FileReference();
				fileRef.addEventListener(Event.CANCEL, ChkdoEvent);
				fileRef.addEventListener(Event.COMPLETE, ChkdoEvent);
				fileRef.addEventListener(Event.OPEN, ChkdoEvent);
				fileRef.addEventListener(Event.SELECT, ChkdoEvent);
				fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS, ChkdoEvent);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR, ChkdoEvent);
				fileRef.addEventListener(ProgressEvent.PROGRESS, ChkdoEvent);
				fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR, ChkdoEvent);
			}
			
			private function ChkdoEvent(evt:Event):void 
			{	
				FilePath.text="";
			}
			
			private function ChkdownloadSourceCodeZip():void {
				// Clear existing array collection. 
				//arrColl = new ArrayCollection();
				//Alert.show(FILE_URL);
				// Hide the Text control. //
				//txt.visible = false;
				// Begin download. 
				fileRef.download(urlReq);
			}
			
			private function ChkshowAlert(item:Object):void {
				Alert.show(item.eventString, item.type);
			}
			
			public var ChkImgFlag:Boolean=false;
			protected function ChkFnClick_Btn_Browse():void
			{
				try
				{
					var imageTypes:FileFilter = new FileFilter("Images (*.jpg, *.jpeg, *.gif, *.png)", "*.jpg; *.jpeg; *.gif; *.png");
					//var textTypes:FileFilter = new FileFilter("Text Files (*.txt, *.rtf)", "*.txt; *.rtf");
					var allTypes:Array = new Array(imageTypes);
					var fileRef:FileReference = new FileReference();
					fileRef.browse(allTypes);				
					//fileRef = new FileReference();
					fileRef.addEventListener(Event.SELECT, ChkselectHandler);
					fileRef.addEventListener(Event.COMPLETE, ChkcompleteHandler);				
					function ChkselectHandler(event:Event):void
					{
						FilePath.text = event.currentTarget.name.toString();
						fileRef.load();
					}
					function ChkcompleteHandler(event:Event):void
					{
						Img_CashChalan.source = fileRef.data;
						ChkImgFlag=true;					
					}
					Brd_imageUpload.visible=true;
					Chkinit1();
					Chkinit();
				}
				catch(Exception)
				{
					
				}
			}
//End of Image Upload for Cheque Deposit	

			protected function btn_Cash_clickHandler():void
			{
				Brd_Cash.visible=true;
				Brd_Cheque.visible=false;
				btn_Cash.Button_B_mouseOverHandler();
				btn_Cheque.Button_OutHandler();
				Brd_Cash_Panel.visible=false;
				Brd_Cheque_Panel.visible=false;
			}
			protected function btn_Cheque_clickHandler():void
			{
				Brd_Cash.visible=false;
				Brd_Cheque.visible=true;
				btn_Cash.Button_OutHandler();
				btn_Cheque.Button_B_mouseOverHandler();
				Brd_Cash_Panel.visible=false;
				Brd_Cheque_Panel.visible=false
			}
			protected function btn_Cash_Click(event:MouseEvent):void
			{
				Mode=1;
				Brd_Cash_Panel.visible=true;
				Brd_Cheque_Panel.visible=false;
				Brd_Cash.visible=false;
				Brd_Cheque.visible=false;
				btn_SaveCash.visible=true;
				txt_CashDepositAmount.tabIndex=1;
				Drp_CashAccount.tabIndex=2;
				txt_CashComments.tabIndex=3;
				lblNewCash.text="New Cash Deposit";
				dt_CashDate.enabled=true;
				txt_CashDepositAmount.editable=true;
				txt_CashComments.editable=true;
				Drp_CashAccount.enabled=true;
				//CashCancel();
			}
			
			protected function btn_Cheque_Click(event:MouseEvent):void
			{
				Mode=0;
				Brd_Cheque_Panel.visible=true;
				Brd_Cash_Panel.visible=false;
				Brd_Cash.visible=false;
				Brd_Cheque.visible=false;
				btn_SaveChk.visible=true;
				txt_ChkDepositedAmount.tabIndex=1;
				Drp_ChkAccount.tabIndex=2;
				txt_ChkComment.tabIndex=3;
				lblNewChk.text="New Cheque Deposit";
				dt_Chkdate.enabled=true;
				txt_ChkDepositedAmount.enabled=true;
				txt_ChkComment.editable=true;
				Drp_ChkAccount.enabled=true;
				//ChequeCancel();
			}
			protected function CashCancel():void
			{
				Brd_Cash.visible=true;
				Brd_Cash_Panel.visible=false;
				Brd_Cheque.visible=false;
				Brd_Cheque_Panel.visible=false;
				txt_CashDepositAmount.text="";
				txt_CashComments.text="";
				txt_ImageName.text="";
				Drp_CashAccount.prompt="Select Deposit Account";
				FilePath.text="";
				CashAccount="";
				CashAccountId=0;
				Help();
				//PageLoad();
			}
			protected function ChequeCancel():void
			{
				Brd_Cash.visible=false;
				Brd_Cash_Panel.visible=false;
				Brd_Cheque.visible=true;
				Brd_Cheque_Panel.visible=false;
				txt_ChkDepositedAmount.text="";
				txt_ChkComment.text="";
				txt_chkImageName.text="";
				Drp_ChkAccount.prompt="Select Deposit Account";
				ChkFilePath.text="";
				ChkAccount="";
				ChkAccountId=0;
				ChkresultsTxtField.text="";
				Help();
			}
			
			protected function Drp_CashAccount_changeHandler():void
			{
				CashAccountId=Drp_CashAccount.selectedItem.data;
				CashAccount=Drp_CashAccount.selectedItem.label;
			}
			protected function Drp_ChkAccount_changeHandler():void
			{
				ChkAccountId=Drp_ChkAccount.selectedItem.data;
				ChkAccount=Drp_ChkAccount.selectedItem.label;
			}
			
		]]>
	</fx:Script>
	<s:HGroup x="0" y="0" width="100%" height="45" horizontalAlign="center" verticalAlign="middle">
		<WrbComp:TabButton_HB width="120" height="40" _Label="Cash Deposit" click="btn_Cash_clickHandler()" id="btn_Cash"/>
		<WrbComp:TabButton_HB width="120" height="40" _Label="Cheque Deposite" click="btn_Cheque_clickHandler()" id="btn_Cheque"/>
	</s:HGroup>
	<s:BorderContainer x="0" y="44" width="100%" height="100%" id="Brd_Cash" backgroundColor="#fbf9f9"
					   visible="true">
		<mx:DataGrid x="39" y="76"  verticalAlign="middle" editable="true" visible="true"
					 width="875" height="365" tabIndex="4" id="Grd_Cash" >
			<mx:columns>
				<mx:DataGridColumn dataField="Id" headerText="Id" width="75" editable="false" visible="false"/>
				<mx:DataGridColumn dataField="Date" headerText="Date" width="75" editable="false"/>
				<mx:DataGridColumn dataField="Amount" headerText="Amount" width="100" editable="false"/>
				<mx:DataGridColumn dataField="DepositeTo" headerText="Deposite To" width="300" editable="false"/>
				<mx:DataGridColumn dataField="DepositedBy" headerText="Deposited By" width="100" editable="false"/>
				<mx:DataGridColumn dataField="Comments" headerText="Comments" width="100" editable="true"/>
				<mx:DataGridColumn dataField="ViewDetails" headerText="View Details" width="100" editable="false">
					<mx:itemRenderer >
						<fx:Component>
							<mx:HBox horizontalAlign="center" verticalAlign="middle">										
								<mx:Image source="@Embed(source='../Assets/application_get.png')" buttonMode="true"
										  click="outerDocument.CashDetails(event)"/>
							</mx:HBox>	
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="ViewChallan" headerText="ViewChallan" width="100" editable="false">
					<mx:itemRenderer >
						<fx:Component>
							<mx:HBox horizontalAlign="center" verticalAlign="middle">										
								<mx:Image source="@Embed(source='../Assets/ButtonBar-lastButton_overSkin.png')" buttonMode="true"
										  />
							</mx:HBox>	
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
		<s:Label x="27" y="26" text="Cash Deposit" color="red"/>
		<s:Button x="792" y="35" label="New Cash Deposit" click="btn_Cash_Click(event)"/>
	</s:BorderContainer>
	<s:BorderContainer x="0" y="44" width="100%" height="100%" id="Brd_Cheque" backgroundColor="#fbf9f9"
					   visible="false">
		<mx:DataGrid x="39" y="76"  verticalAlign="middle" editable="true" visible="true"
					 width="875" height="365" tabIndex="4" id="Grd_Cheque" >
			<mx:columns>
				<mx:DataGridColumn dataField="Date" headerText="Date" width="75" editable="false"/>
				<mx:DataGridColumn dataField="Amount" headerText="Amount" width="100" editable="false"/>
				<mx:DataGridColumn dataField="DepositeTo" headerText="Deposite To" width="300" editable="false"/>
				<mx:DataGridColumn dataField="DepositedBy" headerText="Deposited By" width="100" editable="false"/>
				<mx:DataGridColumn dataField="Comments" headerText="Comments" width="100" editable="true"/>
				<mx:DataGridColumn dataField="ViewDetails" headerText="View Details" width="100" editable="false">
					<mx:itemRenderer >
						<fx:Component>
							<mx:HBox horizontalAlign="center" verticalAlign="middle">										
								<mx:Image source="@Embed(source='../Assets/application_get.png')" buttonMode="true"
										  click="outerDocument.ChkDetails(event)"/>
							</mx:HBox>	
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="ViewChallan" headerText="ViewChallan" width="100" editable="false">
					<mx:itemRenderer >
						<fx:Component>
							<mx:HBox horizontalAlign="center" verticalAlign="middle">										
								<mx:Image source="@Embed(source='../Assets/ButtonBar-lastButton_overSkin.png')" buttonMode="true"
										  />
							</mx:HBox>	
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
		<s:Label x="27" y="26" text="Cheque Deposit" color="red"/>
		<s:Button x="792" y="35" label="New Cheque Deposite" click="btn_Cheque_Click(event)"/>
	</s:BorderContainer>
	<s:BorderContainer x="84" y="67" width="753" height="461" id="Brd_Cash_Panel" backgroundColor="#fbf9f9"
					   visible="false">
		<s:Label id="lblNewCash" x="25" y="23" text="New Cash Deposit" color="red"/>
		<s:Label x="179" y="50" text="Date Deposited"/>
		<s:Label x="179" y="89" text="Amount Deposited"/>
		<s:Label x="179" y="125" text="Deposited Account"/>
		<s:Label x="179" y="155" text="Deposited Chalan"/>
		<s:Label x="179" y="281" text="Comments"/>
		<s:TextInput x="314" y="81" width="171" maxChars="10" id="txt_CashDepositAmount" restrict="0-9"/>
		<s:Image x="462" y="311" width="100" height="100" id="Img_CashChalan"
				 source="@Embed(source='../Assets/user.jpg')" visible="false"/>
		<s:TextArea id="txt_CashComments" x="314" y="281" width="171" height="89" maxChars="2000"/>
		<s:Button id="btn_SaveCash" x="210" y="407" label="Save" click="CashSave()"/>
		<s:Button id="btn_CancelCash" x="346" y="407" label="Close" click="CashCancel()"/>
		<s:DropDownList id="Drp_CashAccount" x="314" y="119" width="260" prompt="Select Deposited Account" 
						change="Drp_CashAccount_changeHandler()"></s:DropDownList>
		<mx:DateField id="dt_CashDate" x="314" y="39" selectableRange="{{rangeEnd:new Date()}}"/>
		<s:BorderContainer x="313" y="147" width="422" height="125" id="Brd_imageUpload" visible="false" borderVisible="true"
						   backgroundColor="#fbf9f9" cornerRadius="5">
			<mx:Panel x="12" y="7" title="Image Uploader">
				<mx:ControlBar>
					<mx:Spacer width="80%"/>
					<mx:HBox>
						<mx:TextInput id="FilePath" width="150"  visible="true"/>
						<mx:Button id="Filedata" label="Browse File" name="Filedata" />
						<mx:Button label="UpLoad File" name="uploadbutton" id="uploadbutton" visible="false" width="0" />
					</mx:HBox>
					<mx:TextArea id="resultsTxtField"  width="0"  name="resultsTxtField" visible="false"/>
				</mx:ControlBar>
			</mx:Panel>
			<s:TextInput x="27" y="152" width="189" height="40" id="txt_ImageName" enabled="false" visible="false"/>		
			
			<WrbComp:Button_HB x="329" y="152" height="40" _Label="Close" click="{Brd_imageUpload.visible=false;}" visible="false"/>
			<WrbComp:Button_HB id="downloadBtn" x="237" y="152" height="40" _Label="Download"
							   click="downloadSourceCodeZip();"  toolTip="{FILE_URL}" visible="false"/>
		</s:BorderContainer>
		<s:Label x="285" y="83" text="*" color="red"/>
		
		<s:Label x="285" y="121" text="*" color="red"/>
	</s:BorderContainer>
	<s:BorderContainer x="84" y="67" width="753" height="461" id="Brd_Cheque_Panel" backgroundColor="#fbf9f9"
					   visible="false">
		<s:Label id="lblNewChk" x="25" y="23" text="New Cheque Deposit" color="red"/>
		<s:Label x="179" y="50" text="Date Deposited"/>
		<s:Label x="179" y="89" text="Amount Deposited"/>
		<s:Label x="179" y="125" text="Deposited Account"/>
		<s:Label x="179" y="155" text="Deposited Chalan"/>
		<s:Label x="179" y="281" text="Comments"/>
		<s:TextInput x="314" y="81" width="171" maxChars="10" id="txt_ChkDepositedAmount" restrict="0-9"/>
		<s:TextArea id="txt_ChkComment" x="314" y="281" width="171" height="89" maxChars="2000"/>
		<s:Button id="btn_SaveChk" x="210" y="407" label="Save" click="ChkSave()"/>
		<s:Button id="btn_CancelChk" x="346" y="407" label="Close" click="ChequeCancel()"/>
		<s:DropDownList id="Drp_ChkAccount" x="314" y="119" width="255" prompt="Select Deposited Account"
						change="Drp_ChkAccount_changeHandler()"></s:DropDownList>
		<s:BorderContainer x="316" y="144" width="315" height="129" id="Brd_ChkimageUpload" visible="false" borderVisible="true"
						   backgroundColor="#fbf9f9" cornerRadius="5">
			<mx:Panel x="27" y="19" title="Image Uploader">
				<mx:ControlBar>
					<mx:Spacer width="80%"/>
					<mx:HBox>
						<mx:TextInput id="ChkFilePath" width="150"  visible="true"/>
						<mx:Button id="ChkFiledata" label="Browse File" name="Filedata" />
						<mx:Button label="UpLoad File" name="uploadbutton" id="Chkuploadbutton" visible="false" width="0" />
					</mx:HBox>
					<mx:TextArea id="ChkresultsTxtField"  width="0"  name="resultsTxtField" visible="false"/>
				</mx:ControlBar>
			</mx:Panel>
			<s:TextInput x="27" y="152" width="189" height="40" id="txt_chkImageName" enabled="false" visible="false"/>		
			
			<WrbComp:Button_HB x="329" y="152" height="40" _Label="Close" click="{Brd_imageUpload.visible=false;}" visible="false"/>
			<WrbComp:Button_HB id="chkdownloadBtn" x="237" y="152" height="40" _Label="Download"
							   click="ChkdownloadSourceCodeZip();"  toolTip="{FILE_URL}" visible="false"/>
		</s:BorderContainer>
		<mx:DateField id="dt_Chkdate" x="314" y="39" selectableRange="{{rangeEnd:new Date()}}"/>
		<s:Label x="283" y="84" text="*" color="red"/>
		<s:Label x="285" y="120" text="*" color="red"/>
	</s:BorderContainer>
</s:Application>
