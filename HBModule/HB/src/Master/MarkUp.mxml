<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:Controls="fx.com.adobe.Controls.*"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   xmlns:WrbComp="WrbComp.*"
			   xmlns:flexlib="http://code.google.com/p/flexlib/"
			   xmlns:ns1="*"
			   width="100%" height="100%" creationComplete="PageLoad()"
			   pageTitle="MarkUp">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script source = "..\\Common\\CommonScript.as"/>
	<fx:Script source = "..\\Common\\Functions.as"/>
	<fx:Style source="..\\Common\\ApplicationCSS.css"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import WrbHelpComp.HlpGridHdr;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.graphics.codec.PNGEncoder;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			public var Screen:String = "";
			public var ScreenName:String = "";
			public var ADate:String = "";
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public static var Global_AC:ArrayCollection = new ArrayCollection();
			public static var GlobalXml:String = "",ErrStr:String="";
			public var Id:int=0,ErrMsg:String="",UserId:int=0;
			public var AddMode:Boolean=true,Flag:Boolean=true,Flag1:int=0;
			public var OwnerId:int=0,OwnerName:String="",FinancialYear:String="",FinancialYearId:int=0;
			
			protected function PageLoad():void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				//save_pass.setButtonRights("Delete",true);
				//save_pass.setButtonRights("Search",true);
				//save_pass.setButtonRights("Refresh",true);
				useWeb("MarkUp","Pageload_CUSTOM",[GlobalXml,"Pageload","","",0,0]);
				txt_MarkUp.setFocus();
			}
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{
				if (Ds_Objects.currentTarget.description.toString() == "Pageload_CUSTOM")
				{
					try
					{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						txt_MarkUp.text=Ds_Objects.result.Tables.Table.Rows[0].Value;
						
						Id=Ds_Objects.result.Tables.Table.Rows[0].Id;
						RB_Rs.selected=Ds_Objects.result.Tables.Table.Rows[0].Flag;
						if(RB_Rs.selected==false)
						{
							RB_Per.selected=false;
							RB_Rs.selected=true;
						}
						else
						{
							RB_Per.selected=true;
							RB_Rs.selected=false;
						}
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Grd_MarkupHistory.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
					{
						Grd_MMTHistory.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table3.Rows.length > 0)
					{
						txt_MMTMarkUp.text=Ds_Objects.result.Tables.Table3.Rows[0].MMTMarkup;
					}
					}
					catch(Exception)
					{
						//txt_MarkUp.text=Exception;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					if (Id == 0)
					{
						alignAlert(Alert.show("MarkUp Saved Successfully.","Message !",Alert.OK, 
							null, null, iconTickLarge, Alert.OK),10,"");
					}
					else
					{
						alignAlert(Alert.show("MarkUp Updated Successfully.","Message !",Alert.OK, 
							null, null, iconTickLarge, Alert.OK),10,"");
					}
					FnClear();
				}
				if (Ds_Objects.currentTarget.description.toString() == "Search_CUSTOM")
				{
					txt_MarkUp.text=Ds_Objects.result.Tables.Table.Rows[0].Value;
					RB_Rs.selected=Ds_Objects.result.Tables.Table.Rows[0].Flag;
					Id=Ds_Objects.result.Tables.Table.Rows[0].Id;
					if(RB_Rs.selected==false)
					{
						RB_Per.selected=true;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Delete_CUSTOM")
				{
					alignAlert(Alert.show("Deleted Successfully.","Message !",Alert.OK,null,null,iconTickLarge, Alert.OK),10,"");
					FnClear();	
				}
			}
//			protected function flagcheck()
//			{
//				if(ArrayCollection.)
//			}
			protected function FnValidation_BeforeSave():String
			{
				var Flag:Boolean=true;var ErrStr:String="";
//				if((RB_Rs.selected=true)||(RB_Per.selected=true))
//				{
//					txt_MarkUp.editable=true;
//				}
				if(txt_MarkUp.text=="")
				{
					if(Flag==true)
					{
						txt_MarkUp.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* MarkUp is Required. \n";
				}
				return ErrStr;
			}
			protected function RadioB():int
			{
				if(RB_Rs.selected==false)
				{
					if(RB_Per.selected==false)
					{
						RB_Rs.setFocus();
						
					}
					ErrStr=ErrStr+"* Rs or % is Required. \n";
				}
				if(RB_Per.selected==true)
				{
//					txt_MarkUp.maxChars=2;
//					RB_Rs.selected=false;
//					Flag1=1;
				}
				else
				{
//					txt_MarkUp.maxChars=8;
//					RB_Per.selected=false;
//					Flag1=0;
				}
				return Flag1;
			}
			protected function Save():void
			{ 
				ErrMsg = ""; Flag = true;
				var Flag1:int=RadioB();
				var Mode:String="MarkUp";
				var ErrStr:String=FnValidation_BeforeSave();
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				else
				{
					var Ac:ArrayCollection=new ArrayCollection
						([{
							Id:Id,
							Flag:Flag1,
							Value:txt_MarkUp.text,
							Mode:Mode
							//MMT:txt_MMTMarkUp.text
						}])
						var HdrXml:String="";
					HdrXml += "<ROOT>";
					HdrXml += ObjToXmlStr_Comm(Ac,"HdrXml")
					HdrXml += "</ROOT>";
					useWeb("MarkUp","Save_CUSTOM",[GlobalXml,HdrXml]);
				}
			}
			protected function FnValidation_MMT():String
			{
				if(txt_MMTMarkUp.text=="")
				{
					if(Flag==true)
					{
						txt_MMTMarkUp.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* MMT MarkUp is Required. \n";
				}
				return ErrStr;
			}
			protected function SaveMMT():void
			{
				ErrMsg = ""; Flag = true;
				var Mode:String="MMT";
				var ErrStr:String=FnValidation_MMT();
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				else
				{
					var Ac:ArrayCollection=new ArrayCollection
						([{
							MMT:txt_MMTMarkUp.text,
							Mode:Mode
						}])
					var HdrXml:String="";
					HdrXml += "<ROOT>";
					HdrXml += ObjToXmlStr_Comm(Ac,"HdrXml")
					HdrXml += "</ROOT>";
					useWeb("MarkUp","Save_CUSTOM",[GlobalXml,HdrXml]);
				}
			}
			protected function Search():void
			{
				PopUpManager.addPopUp( SearchPopUp , this, true);
				SearchPopUp.Prc_name="MarkUp";
				var SearchParam:Array =new Array();
				SearchPopUp.HlpIndex="SEARCH";
				SearchParam[0]=GlobalXml;
				SearchParam[1]=0;
				SearchParam[2]="";
				SearchPopUp.Prc_Param=SearchParam;
				SearchPopUp.HlpSrchGlobal="";
				SearchPopUp.dataPanel.focusEnabled=true;
				SearchPopUp.Pageint();					
				SearchPopUp.addEventListener("PopupEnter",funpopupEnter);
				SearchPopUp.addEventListener("PopupClose",funpopupClose);
				PopUpManager.centerPopUp(SearchPopUp);				
			}
			
			private function funpopupClose(event:Event):void
			{
				
			}
			
			private function funpopupEnter(event:Event):void
			{				
				Searchhb(SearchPopUp.SelectRow.Id,0);		
			}
			private function Searchhb(Id:int,_PrdFk:int):void
			{
				var Load:Array = new Array(); 
				Load[0] = GlobalXml; Load[1] = Id; Load[2]=0;
				useWeb("MarkUp","Search_CUSTOM",Load);
			}
			protected function FnDelete():void
			{
				if(Id == 0)
				{
					alignAlert(Alert.show("This is an Invalid Process.","Alert Message !",Alert.OK, 
						null, null,iconWarning, Alert.OK),10,'');					
					return;
				}	
				alignAlert(Alert.show("Do you want to Delete this item ?", "Warning !",
					Alert.YES | Alert.NO, null,
					DeleteItem, iconWarning, Alert.NO),10,'');	
			}
			private function DeleteItem(event:CloseEvent):void 
			{
				
				if(event.detail == Alert.YES)
				{
					var Load:Array = new Array();
					
					Load[0] = GlobalXml; Load[1] = Id;
					
					useWeb("MarkUp", "Delete_CUSTOM", Load);
				}
			}
			protected function FnClear():void
			{
				RB_Rs.selected=true;
				txt_MarkUp.text="";
				PageLoad();
				Id=0;
			}
			
			protected function RB_Rs_changeHandler(event:Event):void
			{
				txt_MarkUp.text="";
				txt_MarkUp.maxChars=8;
				RB_Per.selected=false;
				Flag1=0;
			}
			
			protected function RB_Per_changeHandler(event:Event):void
			{
				txt_MarkUp.text="";
				txt_MarkUp.maxChars=2;
				RB_Rs.selected=false;
				Flag1=1;
			}
			
		]]>
	</fx:Script>
	<s:BorderContainer x="0" y="0" width="100%" height="547" depth="50" backgroundColor="#fbf9f9" 
					   borderVisible="false" verticalCenter="true" horizontalCenter="true">
		<s:Panel x="130" y="37" width="245" height="161">
			<s:Label x="74" y="-21" width="95" height="16" text="Todays MarkUp"/>
			<s:RadioButton id="RB_Rs" x="37" y="10" label="Rs" selected="true" change="RB_Rs_changeHandler(event)"/>
			<s:RadioButton id="RB_Per" x="178" y="10" label="%" change="RB_Per_changeHandler(event)"/>
			<s:TextInput id="txt_MarkUp" x="59" y="52" restrict="0-9" prompt="MarkUp" maxChars="8" />
			<s:Button x="59" y="90" width="139" height="28" label="Save Today's Markup" click="Save()"/>
		</s:Panel>
		<s:Panel x="131" y="250" width="245" height="195">
			<s:Label x="74" y="-21" width="95" height="16" text="MMT MarkUp"/>
			<s:TextInput id="txt_MMTMarkUp" x="107" y="49" restrict="0-9" prompt="MarkUp" maxChars="2" />
			<s:Label x="10" y="57" text="MMT Markup %"/>
			<s:Label x="93" y="51" text="*" color="red"/>
			<s:Button x="52" y="100" width="141" height="32" label="Save MMTMarkUp" click="SaveMMT()"/>
		</s:Panel>
		<mx:DataGrid x="456" y="37" width="422" height="181" id="Grd_MarkupHistory" doubleClickEnabled="false">
			<mx:columns>
				<mx:DataGridColumn dataField="Flag" headerText="Mode" width="60"/>
				<mx:DataGridColumn dataField="Value" headerText="Value" width="100"/>
				<mx:DataGridColumn dataField="CreatedDate" headerText="CreatedDate" width="80"/>
				<mx:DataGridColumn dataField="CreatedBy" headerText="CreatedBy" width="70"/>
				<mx:DataGridColumn dataField="Id" headerText="Id" visible="false"/>
			</mx:columns>
		</mx:DataGrid> 
		<mx:HRule x="0" y="475" width="100%" strokeColor="#eb1c24"/>
		<s:HGroup x="10" y="499" width="936" horizontalAlign="center" verticalAlign="top" visible="true" depth="9">
			<s:Button width="84" height="28" label="Refresh" click="PageLoad()"/>
			<!--WrbComp:SaveControl x="187" y="516" id="save_pass" docSave="Save()" docClear="FnClear()" doSearch="Search()"
								 docDelete="FnDelete()" docRefresh="PageLoad()" visible="false">
			</WrbComp:SaveControl-->
		</s:HGroup>
		<s:Label x="456" y="20" text="Markup History" color="Red"/>
		<mx:DataGrid x="456" y="250" width="422" height="181" id="Grd_MMTHistory" doubleClickEnabled="false">
			<mx:columns>
				<mx:DataGridColumn dataField="MMTMarkup" headerText="MMTMarkUp" width="90"/>
				<mx:DataGridColumn dataField="CreatedDate" headerText="CreatedDate" width="80"/>
				<mx:DataGridColumn dataField="CreatedBy" headerText="CreatedBy" width="70"/>
				<mx:DataGridColumn dataField="Id" headerText="Id" visible="false"/>
			</mx:columns>
		</mx:DataGrid>
		<s:Label x="456" y="231" text="MMTMarkup History" color="Red"/>
		<s:Label x="24" y="21" text="MarkUp" color="red"/>
		
		
		</s:BorderContainer>
	
</s:Application>
