<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbComp="WrbComp.*"
			   xmlns:Controls="fx.com.adobe.Controls.*"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   width="100%" height="100%" creationComplete="PageLoad()"
			   keyDown="application1_keyDownHandler(event)" pageTitle="Import Guest">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:EmailValidator id="EmailValidator" invalid="EmailValidator_invalidHandler(event)"
						   valid="EmailValidator_validHandler(event)"/>
		
	</fx:Declarations>
	<fx:Style source="..\\Common\\ApplicationCSS.css" />
	<fx:Script source="..\\Common\\CommonScript.as" />
	<fx:Script source="..\\Common\\Functions.as"/>
	<fx:Script>
		
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import com.as3xls.xls.Cell;
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			
			import flash.events.Event;
			import flash.net.FileFilter;
			import flash.net.FileReference;
			import flash.utils.ByteArray;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Label;
			import mx.controls.Text;
			import mx.core.Repeater;
			import mx.graphics.shaderClasses.SaturationShader;
			import mx.utils.OrderedObject;
			import mx.utils.object_proxy;
			
			import spark.events.GridEvent;
			private var ef:ExcelFile;        
			private var ba:ByteArray;        
			private var fr:FileReference;    
			
			public var FltNm:String="";
			private var FilterAC:ArrayCollection;
			private var firstTime:Boolean = true;
			private var myArrayCollection:ArrayCollection;
			
			import spark.events.IndexChangeEvent;
			import mx.events.CloseEvent;
			public var ErrStr:String="";
			public static var GlobalXml:String="";					
			public static var Global_AC:ArrayCollection=new ArrayCollection();
			private var SubGroupId:int=0,ClientId:int=0,ClientName:String=""; 
			private var Id:int=0,Code:int=0; 
			public var AddMode:Boolean = true,Flag:Boolean=true;
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public var myFileReference:FileReference = new FileReference(); 
			private var HdrpkId:Number=0; 
			private var fileRef:FileReference = new FileReference();
			private var urlReq:URLRequest;
			private var arrColl:ArrayCollection;
			//private var FILE_URL:String = "";
			/* URL of the file to download. */
			private const FILE_URL:String = "http://sstage.in/SampleGuest.xls";
			public var uploadURL:URLRequest = new URLRequest();
			
			public function PageLoad():void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				ef = new ExcelFile();                                    
				ba = new ByteArray();                                    
				fr = new FileReference(); 
				FnHelp_PageLoad();
				statsCollection = new ArrayCollection(); 
				SCtrl.setButtonRights("Delete",true);
				init1();
			}
			protected function FnRefresh():void
			{
				//FnHelp();
				PageLoad();
			}
			protected function FnHelp():void
			{
				useWeb("ImportGuest","Delete_NEWCUSTOM",[GlobalXml,"GUESTDELETE",0,0,ClientId]);
			}
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{
				if (Ds_Objects.currentTarget.description.toString() == "PAGELOAD_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Hlp_ClientName.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;		
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					if(AddMode==true)
					{
						alignAlert(Alert.show("Save Successfully",null,Alert.OK, null, null,iconTickLarge, Alert.OK),10,"");	
					}
					else
					{
						alignAlert(Alert.show("Update Successfully",null,Alert.OK, null, null,iconTickLarge, Alert.OK),10,"");
					}	
					Clear();
				}
				if (Ds_Objects.currentTarget.description.toString() == "Search_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						
						ClientName=Ds_Objects.result.Tables.Table.Rows[0].ClientName;
						//Ddl_Client.prompt=ClientName;
						ClientId=Ds_Objects.result.Tables.Table.Rows[0].Id;
						Hlp_ClientName.text=ClientName;
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{	
						FilterAC =Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
						//FilterAC=Import_Grd._getGridSrc as ArrayCollection 
						//Import_Grd._SetValue(Ds_Objects.result.Tables.Table.Rows as ArrayCollection)
						//myArrayCollection=Import_Grd._getGridSrc as ArrayCollection
//						for(var i:int =0; i<FilterAC.length; i++)
//						{
//							FilterAC.addItem(ClientId);
//						}
//					
						Import_Grd._SetValue(FilterAC)
						AddMode=false; 
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Delete_CUSTOM")
				{	
					alignAlert(Alert.show("Deleted Successfully",null,Alert.OK, null, null,iconTickLarge, Alert.OK),10,"");
					Clear();	
				}
				if (Ds_Objects.currentTarget.description.toString() == "Delete_NEWCUSTOM")
				{	
					alignAlert(Alert.show("Deleted Successfully",null,Alert.OK, null, null,iconTickLarge, Alert.OK),10,"");
					Clear();	
				}	
			}
			protected function FnHelp_PageLoad():void
			{
				useWeb("ImportGuest","PAGELOAD_CUSTOM",[GlobalXml,'PAGELOAD',0,0]);
				
			}
			public var ErrMsg:String="";
			public function Custom_Grid_Enter(arrObj:Object, GridMode:Boolean, Index:int):String
			{
				var Str:String="";
				if(arrObj.GridId=="Import")
				{
//					if(arrObj.ClientId=="");
//						{
//							ClientId=ClientId;
//						}
//					if(arrObj.EmailId!="")
//					{
//						EmailValidator.validate(arrObj.EmailId);
//						Str=Str+ErrMsg;					
//					}
				}
				return Str;
			}
//			public function Custom_Grid_Tab(arrObj:Object,arrObj1:Object,GridMode:Boolean,Index:int):void
//			{
////				if(arrObj.currentTarget.id=="txtDesignation")
////				{
////					 	Import_Grd._setValuetoCtrl("txtClientId",ClientId);
////				}
//			}
			protected function EmailValidator_invalidHandler(event:ValidationResultEvent):void
			{
				ErrMsg="*  Email  "+event.message+".\n";
			}
			
			protected function EmailValidator_validHandler(event:ValidationResultEvent):void
			{
				ErrMsg="";
			}
			protected function application1_keyDownHandler(event:KeyboardEvent):void
			{
				SCtrl.KeyHandler(event);
			}	
			
//			private function ValidationFun():String
//			{
//				ErrStr=""; 
//				
//				return ErrStr; 	
//			}	
			private function Search()
			{				
				Clear();
				
				PopUpManager.addPopUp( SearchPopUp , this, true);
				SearchPopUp.Prc_name="ImportGuest"
				var SearchParam:Array =new Array();
				SearchPopUp.HlpIndex="SEARCH"
				SearchParam[0]=GlobalXml;
				SearchParam[1]=0;
				SearchParam[2]=0;
				SearchParam[3]=0;				
				SearchPopUp.Prc_Param=SearchParam;
				SearchPopUp.HlpSrchGlobal="";
				SearchPopUp.dataPanel.focusEnabled=true;
				SearchPopUp.Pageint();
				SearchPopUp.addEventListener("PopupEnter",funpopupEnter);
				SearchPopUp.addEventListener("PopupClose",funpopupClose);
				PopUpManager.centerPopUp(SearchPopUp); 
			}
			private function funpopupClose(event:Event)
			{ 
			}
			private function funpopupEnter(event:Event)
			{				
				SearchDtls(SearchPopUp.SelectRow.Id,0);			
			}
			private function SearchDtls(Id:String,_PrdFk:int):void
			{
				var Load:Array =new Array();
				Load[0]=GlobalXml; Load[1]=Id; Load[2]=0; Load[3]=0;  				
				useWeb("ImportGuest","Search_CUSTOM",Load);
			}
			
			
			private function removeDgridItem(event:CloseEvent):void 
			{	
				if (event.detail==Alert.YES) 
				{	
					var Load:Array = new Array();
					Load[0]= Id; Load[1]=""; Load[2]= 0; Load[3]= 0; 
					useWeb("ImportGuest","Delete_CUSTOM",Load);
				}
			} 
			private function Clear():void
			{
				Import_Grd._clear();
				Hlp_ClientName.dataProvider=null;
				Hlp_ClientName.text="";
				//Ddl_Client.prompt="Please Select Client";
				statsCollection.removeAll();
				TempArr.removeAll();					
				ef.sheets.length;
				HdrpkId=0;
				Id=0;
				
				ef = new ExcelFile();                                    
				ba = new ByteArray();                                    
				fr = new FileReference(); 
				Tempar.removeAll();
				myArrayCollection=null;
				
				ClientId=0;
				ClientName="";
				AddMode=true;
				FnHelp_PageLoad();
			}
			[Bindable] 
			private var statsCollection:ArrayCollection; 
			private function importXLS(e:Event):void                                                     
			{               
				Import_Grd._clear();
				var fileFilter:FileFilter = new FileFilter("Excel (.xls)", "*.xls;");                         
				fr.addEventListener(Event.SELECT, selectXLS);                                                 
				fr.browse([fileFilter]);                                                                      
			}   
			
			private function selectXLS(e:Event):void
			{  
				
				if(fr.type==".xls")
				{
					fr = FileReference(e.target);                                                                 
					fr.addEventListener(Event.COMPLETE, fileIn);                                                  
					fr.load();                                                                                    
				}    
				else
				{
					ErrStr=ErrStr+"*File is not Excel Format\n"
					return;
				}
			}
			public var TempArr:ArrayCollection=new ArrayCollection();
			private function fileIn(e:Event):void
			{                                                           
				ba = fr.data;                                                                                 
				ef.loadFromByteArray(ba);                                                                     
				var sheet:Sheet = ef.sheets[0];                                                               
				var tCols:int = sheet.cols;                                                                   
				var tRows:int = 5000;//sheet.rows;                                                                   
				tRows=tRows-1;
				statsCollection = new ArrayCollection();                                                      
				
				for(var i:int=1; i<=5000; i++)
				{                                                              
					var statsEntry:Object = new Object();                                                   
					statsEntry.EmpCode=sheet.getCell(i,0).value;                                              
					statsEntry.FirstName = sheet.getCell(i,1).value;                        
					statsEntry.LastName = sheet.getCell(i,2).value;                                               
					statsEntry.Grade = sheet.getCell(i,3).value;                                                
					statsEntry.MobileNo = sheet.getCell(i,4).value;                                               
					statsEntry.Email = sheet.getCell(i,5).value;                                                
					statsEntry.Designation = sheet.getCell(i,6).value;                                               
					statsEntry.Id=0;
					statsEntry.ClientId=ClientId;
					if(statsEntry.Name != "")                                                                 
					{                                                                                             
						statsCollection.addItem(statsEntry);                                                  
					}   
				}
				var secondcode:Array= new Array();
				var tempCode:Array= new Array();
				secondcode =statsCollection.source;
				tempCode  =statsCollection.source; 
				
				for(var i:int =0; i<statsCollection.length; i++)
				{   
					for(var j:int =i+1; j<statsCollection.length; j++)
					{ 
						if( secondcode[i].EmpCode==tempCode[j].EmpCode)
						{
							TempArr.addItem(secondcode[i].EmpCode); 
						} 
					}
				}
				
				Import_Grd._SetValue(statsCollection)
				
			}    
			public var ErrStr1:String="";
			public var Tempar:ArrayCollection=new ArrayCollection();
			
			public function Custom_Grid_Delete(index:int,arrGrid:ArrayCollection,GrdId:String):void
			{              
				if(arrGrid[index].Id!="")
				{												
					useWeb("ImportGuest","Delete_NEWCUSTOM",[GlobalXml,"GUESTDELETE",0,arrGrid[index].Id]);
				}
			}
			

			private function Save():void
			{   
				ErrStr="";var Flag:Boolean=true; 
				
				if(Hlp_ClientName.text=="")
				{
					if(Flag == true)
					{
						Hlp_ClientName.setFocus();Flag=false;
					}
					ErrStr = ErrStr + "* Client Name is Required.\n";
				} 
				if((Import_Grd._getGridSrc==null)||(Import_Grd._getGridSrc.length==0))
				{
					ErrStr = ErrStr + "* Import the Excel Sheet.\n";
				} 
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				}
				else
				{
					if(	AddMode==true)
					{
					alignAlert(Alert.show("Do you want to Save this item?", "Warning",Alert.YES | Alert.NO, null,
						Savesuccess, iconWarning, Alert.NO),10,"");
						
						Tempar.removeAll();
						var grid:ArrayCollection = new ArrayCollection();
						grid = Import_Grd._getGridSrc;
						var arr:Array= new Array();
						arr=grid.source;
					}
					else
					{
						alignAlert(Alert.show("Do you want to update this item?", "Warning",Alert.YES | Alert.NO, null,
							Savesuccess, iconWarning, Alert.NO),10,"");
						
						Tempar.removeAll();
						var grid:ArrayCollection = new ArrayCollection();
						grid = Import_Grd._getGridSrc;
						var arr:Array= new Array();
						arr=grid.source;
					}
				} 
			} 
//				for(var i=0;arr[i]<=arr;i++)
//				{ 
//					if(arr[i].EmpCode=="" || arr[i].FirstName=="") 
//					{
//						Tempar.addItem(arr[i].EmpCode);
//					}			
//					else
//					{  
			private function Savesuccess(event:CloseEvent):void 
			{	
				if (event.detail==Alert.YES) 
				{	
					var statsEntry:Object = new Object(); 
					var arrcopysave:ArrayCollection = new ArrayCollection
						([{
							EmpCode:statsEntry.EmpCode,
							FirstName:statsEntry.FirstName,                       
							LastName:statsEntry.LastName,                                            
							Grade:statsEntry.Grade,                                            
							MobileNumber:statsEntry.MobileNumber,                                             
							Email:statsEntry.Email,                                               
							Designation:statsEntry.Designation,
							Id:Id,
							ClientId:ClientId
							//ClientName:ClientName
						}])
					var arrcopy:ArrayCollection = new ArrayCollection
						([{ 
							ClientId:ClientId 
						}])
					
					GlobalXml="";
					GlobalXml += "<ROOT>";
					GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
					GlobalXml += "</ROOT>";		
					
					var HdrXml:String=""
					HdrXml += "<ROOT>";	
					HdrXml += ObjToXmlStr_Comm(Import_Grd._getGridSrc,"HdrXml") 
					HdrXml += "</ROOT>";
					var HdrXml1:String=""
					HdrXml1 += "<ROOT>";	
					HdrXml1 += ObjToXmlStr_Comm(arrcopy,"Client") 
					HdrXml1 += "</ROOT>";
					useWeb("ImportGuest","Save_CUSTOM",[GlobalXml,HdrXml,HdrXml1]); 
					
				} 
			}
		
			private function ClientData():void
			{
				if(Hlp_ClientName.selected())
				{
					ClientId=Hlp_ClientName.Select_Row.Id;
					ClientName=Hlp_ClientName.Select_Row.label;
					Hlp_ClientName.text=ClientName;
				}
				else
				{
					Hlp_ClientName.text="";
					ClientId=0;
				}
				Import_Grd._setFocus(0);
			}
			var tempAC:ArrayCollection=new ArrayCollection();
			public var FltCode:String="";
			private function filter(Filt:String):void
			{ 
				FltCode=Filt;				
				tempAC = Import_Grd._getGridSrc as ArrayCollection;
		
				tempAC.refresh();  
			}

			private function downloadSourceCodeZip():void {
				/* Clear existing array collection. */
				//arrColl = new ArrayCollection();
				//Alert.show(FILE_URL);
				/* Hide the Text control. */
				//txt.visible = false;
				/* Begin download. */
				
				fileRef.download(urlReq);
			}
			private function init1():void {
				/* Initialize the array collection to an empty collection. */
				arrColl = new ArrayCollection();
				
				/* Set up the URL request to download the file specified by the FILE_URL variable. */
				urlReq = new URLRequest(FILE_URL);
				
				/* Define file reference object and add a bunch of event listeners. */
				fileRef = new FileReference();
				fileRef.addEventListener(Event.CANCEL, doEvent);
				fileRef.addEventListener(Event.COMPLETE, doEvent);
				fileRef.addEventListener(Event.OPEN, doEvent);
				fileRef.addEventListener(Event.SELECT, doEvent);
				fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS, doEvent);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR, doEvent);
				fileRef.addEventListener(ProgressEvent.PROGRESS, doEvent);
				fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR, doEvent);
			}
			private function doEvent(evt:Event):void
			{
				
			}
			
			 
		]]>
	</fx:Script>
	<s:VGroup x="0" y="0" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
	<s:BorderContainer x="33" y="15" width="100%" height="443" backgroundColor="#fbf9f9" borderVisible="false" borderWeight="2" cornerRadius="10">
		
			
		<s:Button x="749" y="46" width="111" height="39" label="Import XLS" click="importXLS(event)"/>                               
		<WrbComp:ProDGrid1 id="Import_Grd" x="129" y="130" width="803" height="296"
						  _borderVisible="true"
						  _ColDataField="EmpCode~FirstName~LastName~Grade~MobileNo~Email~Designation~Id~ClientId"
						  _ColHdrText="Emp Code~First Name~Last Name~Grade~MobileNo~EmailId~Designation~Id~ClientId"
						  _ColType="txt~txt~txt~txt~ntxt~txt~txt~txt~txt"
						  _colVisible="1~1~1~1~1~1~1~0~0"
						  _ColWidth="100~100~100~100~100~100~100~0~0" 
						  _editable="1~1~1~1~1~1~1~0~0"
						  _required="1~1~0~0~1~1~0~0~0" 
						  _DuplChk="false"
						  _spltChar="~" _visibleColNos="7" ID="Import">
		</WrbComp:ProDGrid1> 
		<s:Label x="32" y="29" text="Import Guest Excel" color="red"/>
		<!--s:DropDownList id="Ddl_Client" x="272" y="58" width="356" height="23" tabIndex="1"
						prompt="Please Select Client" change="Ddl_Client_changeHandler(event)" visible="false"/-->
		<WrbHelpComp:HelpText id="Hlp_ClientName" x="251" y="60" width="282" height="20" pxTabIndex="1"
							  onselection="{ClientData()}" pxSetColumnsWidth="282" depth="10">
		</WrbHelpComp:HelpText>
		
		<s:Label x="158" y="64" text="Client Name"/>
		<s:Label x="236" y="64" text="*" color="red"/>
		<mx:LinkButton x="717" y="93" label="Download Sample Excel File" click="downloadSourceCodeZip();" />
		
		
	
	</s:BorderContainer> 
		<mx:HRule width="100%" strokeColor="#eb1c24"/>
		
	<s:BorderContainer x="0" y="505" width="933" height="43" cornerRadius="5" horizontalCenter="center" borderVisible="false">
		<WrbComp:SaveControl id="SCtrl" x="181" y="4" depth="1" docClear="Clear()" docRefresh="FnRefresh()"
							 docSave="Save()" doSearch="Search()"
							 tabIndex="9">
		</WrbComp:SaveControl>
	</s:BorderContainer>
	</s:VGroup>	
</s:Application>
