<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbComp="WrbComp.*"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   xmlns:ns1="*"
			   width="100%" height="100%" creationComplete="PageLoad(event)" pageTitle="VendorChequeApprovalStatus">
	<fx:Declarations>
		<mx:NumberFormatter id="NF_Two" precision="2" rounding="nearest"/>
	</fx:Declarations>
	<fx:Style source = "..\\Common\\ApplicationCSS.css"/>
	<fx:Script source="..\\Common\\CommonScript.as"/>
	<fx:Script source="..\\Common\\Functions.as"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import com.as3xls.xls.Cell;
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			import com.as3xls.xls.Type;
			
			import mx.collections.ArrayCollection;
			import mx.containers.Accordion;
			import mx.controls.Alert;
			import mx.controls.Text;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.ColorPickerEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			import mx.graphics.codec.PNGEncoder;
			import mx.managers.PopUpManager;
			import mx.rpc.http.mxml.HTTPService;
			
			import org.hamcrest.mxml.collection.Array;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public static var Global_AC:ArrayCollection = new ArrayCollection();
			public static var GlobalXml:String = "",TypeServiceId:int=0,ApprovalId:int=0,ErrStr:String="";
			public var Id:int=0,ErrMsg:String="",Roles:String="",PropertyId:int=0,PropertyName:String="",UserName:String="",UserId:int=0;
			public var AddMode:Boolean=true,Flag:Boolean=true;
			private var xlsFile:ExcelFile;
			private var fileRef:FileReference = new FileReference();
			private var urlReq:URLRequest;
			private var arrColl:ArrayCollection;
			private var FILE_URL:String = "";
			public var uploadURL:URLRequest = new URLRequest();
			
			protected function PageLoad(event:FlexEvent):void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				Help();
				
			}
			public function Help():void
			{  
				useWeb("VendorChequeApproval","PAGELOAD_CUSTOM",[GlobalXml,'PAGELOAD',Global_AC[0].UsrId,0,'']);
			}
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{
				if (Ds_Objects.currentTarget.description.toString() == "PAGELOAD_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Details.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						hlp_Property.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					}
					
				}
				if (Ds_Objects.currentTarget.description.toString() == "USERLOAD_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						hlp_User.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "PropertyLoad_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Details.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Actionload_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_User1.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "HistoryLoad_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
					  Grd_History.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Txt_Request.text=Ds_Objects.result.Tables.Table1.Rows[0].Requestedby;
						Txt_Month.text=Ds_Objects.result.Tables.Table1.Rows[0].RequestedOn;
					}
					var Len:Number=0,TotAmt:Number=0;
					var Ac_Tmp:ArrayCollection=new ArrayCollection();
					Ac_Tmp=Grd_History.dataProvider as ArrayCollection;				
					Txt_Total.text=="";
					var Total:int=0;
					for(var i:int=0;i<Ac_Tmp.length;i++)
					{
						Total+=Number(Ac_Tmp[i].RequestedAmount);
					}
					var TA:String=NF_Two.format(Total);
					Txt_Total.text=TA.replace(",","");
					var Tmp:Number=Number(Txt_Total.text)
					Txt_Total.text=NF_Two.format(Tmp);
					
					if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
					{
						Grd_ExcelHistory.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
					}
				}
				
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					if (AddMode == true)
					{
						alignAlert(Alert.show("Do you want to Approve the Vendor Payment Request?.","Message !",Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
					}
					else
					{
						alignAlert(Alert.show("Do you want to Approve the Vendor Payment Request?.","Message !",Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
					}
					FnClear();
					
				}
				if (Ds_Objects.currentTarget.description.toString() == "Download_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						FILE_URL=Ds_Objects.result.Tables.Table.Rows[0].VendorBill;
						init1();
					}
					Brd_imageUpload .visible=true;
				}
			}
			protected function FnValidation_BeforeSave():String
			{
				ErrStr="";
				
				var TxtFlag:Boolean=true;
//				if(hlp_User.text=="")
//				{
//					if(TxtFlag==true)
//					{
//						hlp_User.setFocus();
//						TxtFlag=false;
//					}
//					ErrStr=ErrStr+"* Property is Required.\n";					
//				}
				err();
				if(Grd_Details.dataProvider ==null)
				{
					ErrStr=ErrStr+"* User Details should not be Empty.\n";
				}
				return ErrStr; 
				
			}	
			public function err():void
			{
				var Grid_AC1:ArrayCollection=new ArrayCollection();
				var SaveFlag:Boolean=true;				;
				if(Grd_Details.dataProvider !=null)
				{ 
					Grid_AC1=Grd_Details.dataProvider as ArrayCollection;
					var i:int=Grid_AC1.length-1;
					for( i ;i>=0;i--)
					{
						if(Grid_AC1[i].Process ==true)
						{  
							SaveFlag=false;
						} 						
					}	
					Grd_Details.dataProvider=Grid_AC1.source;
					if(SaveFlag==true)
					{
						ErrStr=ErrStr+"* Select Any One User to Approve.\n";
					}
				}
			}
			protected function FnSave():void
			{
				ErrStr="";
				ErrMsg = ""; Flag = true; 
				var Str:String=FnValidation_BeforeSave();
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				else
				{
					alignAlert(Alert.show("Do you want to Approve the Vendor Payment Request?", "Warning",Alert.YES | Alert.NO, null,
						FnSave1, iconWarning, Alert.NO),10,"");
				}
			}
			protected function FnSave1(event:CloseEvent):void
			{
				if ((event.detail==Alert.YES)) 
				{
					var Ac_Hdr:ArrayCollection = new ArrayCollection
						([{ 
							UserName:UserName,
							UserId:UserId,
							Id:Id
						}])
					var PCR:ArrayCollection= new  ArrayCollection();
					PCR.removeAll();
					PCR=Grd_Details.dataProvider as ArrayCollection;
					var ServiceXml:String="";
					ServiceXml += "<ROOT>";
					ServiceXml += ObjToXmlStr_Comm(PCR,"ServiceXml")
					ServiceXml += "</ROOT>";
					var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
					useWeb("VendorChequeApproval","Save_CUSTOM",[GlobalXml,HdrXml,ServiceXml]);
				}
			}
			
			protected function FnClear():void
			{				
				Help();
				bdr_Action.visible=false;
				bdr_History.visible=false;
				Grd_Details.visible=true;
				//Grd_Details.dataProvider=null;
				//bdr_Scroll.visible=false;
				hlp_Property.dataProvider=null;
				hlp_Property.text="";
				hlp_User.dataProvider=null;
				hlp_User.text="";
				
			}
			public function Ddl_Property_changeHandler():void
			{
				if(hlp_Property.selected())
				{
					PropertyName=hlp_Property.Select_Row.Property;
					PropertyId=hlp_Property.Select_Row.Id;
					hlp_Property.text=PropertyName;
					useWeb("VendorChequeApproval","USERLOAD_CUSTOM",[GlobalXml,'UserLoad',0,PropertyId,'']);
				}
				else
				{
					hlp_Property.text="";
				}
			}
			public function Ddl_User_changeHandler():void
			{
				if(hlp_User.selected())
				{
					UserName=hlp_User.Select_Row.UserName;
					UserId=hlp_User.Select_Row.Id;
					hlp_User.text=UserName;
					//useWeb("PettyCash","GRID_CUSTOM",[GlobalXml,'PETTYLOAD',PropertyId,Global_AC[0].UsrId]);
				}
				else
				{
					hlp_User.text="";
				}
			}
			protected function Search():void
			{
				var Str:String="";
				if((hlp_Property.text !="")||(hlp_User.text !=""))
					{
						Str="All";
						useWeb("VendorChequeApproval","PropertyLoad_CUSTOM",[GlobalXml,'PropertyLoad',UserId,PropertyId,Str]);
					}
			}
			public function FnHistory(Event):void
			{ 
				//var Grid_AC:ArrayCollection=new ArrayCollection();
				Id=Grd_Details.selectedItem.Id;
				PropertyId=Grd_Details.selectedItem.PropertyId;
				Roles=Grd_Details.selectedItem.RequestedOn;
				Grd_History.dataProvider=null;
				useWeb("VendorChequeApproval","HistoryLoad_CUSTOM",[GlobalXml,"History",Id,PropertyId,Roles]);
				bdr_History.visible=true;
				Grd_Details.visible=false;
				bdr_Scroll.visible=false;
				
			}
			public function FnAction(Event):void
			{ 
				//var Grid_AC:ArrayCollection=new ArrayCollection();
				UserId=Grd_Details.selectedItem.RequestedUserId;
				PropertyId=Grd_Details.selectedItem.PropertyId;
				Roles=Grd_Details.selectedItem.RequestedOn;
				Grd_User1.dataProvider=null;
				useWeb("VendorChequeApproval","Actionload_CUSTOM",[GlobalXml,"Action",UserId,PropertyId,Roles]);
				bdr_Action.visible=true;
				bdr_History.visible=false;
				Grd_Details.visible=false;
				bdr_Scroll.visible=false;
				
			}
			public function FnClosetariff_clickHandler(event):void
			{
				bdr_History.visible=false;
				Grd_History.dataProvider=null;
				Grd_Details.visible=true;
				bdr_Scroll.visible=true;
				
			}
			public function FnClose_clickHandler(event):void
			{
				bdr_Action.visible=false;
				Grd_Details.visible=true;
				bdr_Scroll.visible=true;
				
				Grd_User1.dataProvider=null;
			}
			public function FnChkChange(event:Event):void
			{
				var Ac:ArrayCollection=new ArrayCollection();				
				Ac=Grd_Details.dataProvider as ArrayCollection;				
				var Index:int=Grd_Details.selectedIndex;
				var Flag:Boolean=true;
				
				if(Ac[Index].Process==0)
				{
					Ac[Index].Process=true;
				}
				else
				{
					Ac[Index].Process=false;
				} 
			}
			protected function Export(event:MouseEvent):void
			{
				if(Grd_ExcelHistory.dataProvider !=null)
				{
					var arrExportResult:ArrayCollection = Grd_ExcelHistory.dataProvider as ArrayCollection;
					xlsFile = new ExcelFile();
					var sheet:Sheet = new Sheet();
					sheet.resize(arrExportResult.length+1,9);
					
					sheet.setCell(0,0,'BillDate');
					sheet.setCell(0,1,'ExpenseHead');
					sheet.setCell(0,2,'VendorName');
					sheet.setCell(0,3,'Property');
					sheet.setCell(0,4,'Type');
					sheet.setCell(0,5,'DueDate');
					sheet.setCell(0,6,'BillNo');
					sheet.setCell(0,7,'PaymentMode');
					sheet.setCell(0,8,'RequestedAmount');
					
					
					for(var i:int=0;i<arrExportResult.length;i++)
					{
						sheet.setCell(i+1, 0, arrExportResult[i].BillDate);
						sheet.setCell(i+1, 1, arrExportResult[i].ExpenseHead);
						sheet.setCell(i+1, 2, arrExportResult[i].VendorName);
						sheet.setCell(i+1, 3, arrExportResult[i].Property);
						sheet.setCell(i+1, 4, arrExportResult[i].Type);
						sheet.setCell(i+1, 5, arrExportResult[i].DueDate);
						sheet.setCell(i+1, 6, arrExportResult[i].BillNo);						
						sheet.setCell(i+1, 7, arrExportResult[i].PaymentMode);
						sheet.setCell(i+1, 8, arrExportResult[i].RequestedAmount);
					}
					Grd_ExcelHistory.dataProvider = arrExportResult;
					xlsFile.sheets.addItem(sheet);      
					var bytes: ByteArray = xlsFile.saveToByteArray();
					var fr:FileReference = new FileReference();
					fr.save(bytes,"SampleExport.xls");
				}
				else
				{
					alignAlert(Alert.show("User Requested Details Required.","Message !",
						Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
				}
				
			}
			
//			[Bindable]
//			public var Ac_Dtl:ArrayCollection=new ArrayCollection();
//			public function addData():void
//			{
//				if( Roles == "Resident Managers" || "Assistant Resident Managers")
//				{
//					Ac_Dtl = new ArrayCollection 
//						([{ProcessedStatus:'Acknowledged'}]);
//				}
//				if(Roles =="Operations Managers")
//				{
//					Ac_Dtl = new ArrayCollection 
//						([{ProcessedStatus:'Rejected',ProcessedStatus:'Approved by reporting authority'}]);
//				}
//				if(Roles == "Ops Head")
//				{
//					Ac_Dtl = new ArrayCollection 
//						([{ProcessedStatus:'Approved and waiting for transfer'}]);
//				}
//				if(Roles == "Finance")
//				{
//					Ac_Dtl = new ArrayCollection 
//						([{ProcessedStatus:'Transferred'}]);		
//				}
//			}
			public function Download():void
			{ 
				var BillId=Grd_History.selectedItem.Id;
				var UserId1=Grd_History.selectedItem.UserId;
				useWeb("VendorChequeApproval","Download_CUSTOM",[GlobalXml,"DownloadReport",UserId1,PropertyId,BillId]);
			}
			public var ImageFormat:String="";
			private function init1():void 
			{
				// Initialize the array collection to an empty collection. 
				arrColl = new ArrayCollection();
				
				// Set up the URL request to download the file specified by the FILE_URL variable. 
				urlReq = new URLRequest(FILE_URL);
				
				txt_ImageName.text =FILE_URL;
				// Define file reference object and add a bunch of event listeners. 
				fileRef = new FileReference();
				fileRef.addEventListener(Event.CANCEL, doEvent);
				fileRef.addEventListener(Event.COMPLETE, doEvent);
				fileRef.addEventListener(Event.OPEN, doEvent);
				fileRef.addEventListener(Event.SELECT, doEvent);
				fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS, doEvent);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR, doEvent);
				fileRef.addEventListener(ProgressEvent.PROGRESS, doEvent);
				fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR, doEvent);
			}
			
			private function doEvent(event:Event):void 
			{
				
				FilePath.text = "";
//				event.currentTarget.name.toString();
//				ImageFormat=FilePath.text;	
			}
			
			private function downloadSourceCodeZip():void 
			{
				// Clear existing array collection. 
				//arrColl = new ArrayCollection();
				//Alert.show(FILE_URL);
				// Hide the Text control. //
				//txt.visible = false;
				// Begin download. 
				fileRef.download(urlReq);
				Brd_imageUpload.visible=false;
			}
			
			private function showAlert(item:Object):void 
			{
				Alert.show(item.eventString, item.type);
			}
			public function DeleteGrid(event:Event):void
			{
				var PCId:int=0;
				PCId=Grd_History.selectedItem.Id
				useWeb("VendorChequeApproval","ActionDelete_CUSTOM",[GlobalXml,"Delete",UserId,PCId,0]);
				var TotAmt:int=0;
				var TB:String=NF_Two.format(Txt_Total.text);
				Txt_Total.text=TB.replace(",","");
				var total:Number=Math.round(Number(Txt_Total.text));
				var Ac_PettyCash:ArrayCollection=new ArrayCollection();
				Ac_PettyCash=Grd_History.dataProvider as ArrayCollection;
				var Foodindex:int=Grd_History.selectedIndex;
				var Tmp:ArrayCollection=new ArrayCollection([{BillDate:Ac_PettyCash[Foodindex].BillDate,
					ExpenseHead:Ac_PettyCash[Foodindex].ExpenseHead,VendorName:Ac_PettyCash[Foodindex].VendorName,
					Property:Ac_PettyCash[Foodindex].Property,Type:Ac_PettyCash[Foodindex].Type,
					BillNo:Ac_PettyCash[Foodindex].BillNo,PaymentMode:Ac_PettyCash[Foodindex].PaymentMode,
					RequestedAmount:Ac_PettyCash[Foodindex].RequestedAmount,Bill:Ac_PettyCash[Foodindex].Bill}]);				
				Ac_PettyCash.removeItemAt(Foodindex);
				for(var i:int=0;i<Tmp.length;i++)
				{
					TotAmt+=Number(Tmp[i].RequestedAmount);
				}
				var TB:String=NF_Two.format(total-TotAmt);
				Txt_Total.text=TB.replace(",","");
				Grd_History.dataProvider=Ac_PettyCash.source;
			}
			private function ViewBill():void 
			{
				ExternalInterface.call("changeDocumentTitle",txt_ImageName.text);
				Brd_imageUpload.visible=false;
			}
			
		]]>
	</fx:Script>
	
	<mx:HRule x="0" y="465" width="100%" strokeColor="#eb1c24"/>
	
	<WrbComp:Button_BB id="Sctrl_Approve" x="393" y="476" width="94" height="30" click="FnSave()"
					   Lable_val="Approval">
	</WrbComp:Button_BB>
	<WrbComp:Button_BB id="Sctrl_Clear" x="523" y="476" width="94" height="30"
					   click="FnClear()" Lable_val="Clear">
	</WrbComp:Button_BB>
	<s:Label x="183" y="69" text="Property"/>
	<s:Label x="493" y="69" text="User"/>
	<WrbHelpComp:HelpText id="hlp_User" x="546" y="63" width="238" height="22" pxSetColumnsWidth="0,275" 
						  onselection="{Ddl_User_changeHandler()}"  pxTabIndex="2" depth="10">
	</WrbHelpComp:HelpText>
	<WrbHelpComp:HelpText id="hlp_Property" x="236" y="63" width="238" height="22" pxSetColumnsWidth="0,275" 
						  onselection="{Ddl_Property_changeHandler()}"  pxTabIndex="1" depth="10">
	</WrbHelpComp:HelpText>
	<WrbComp:Button_BB id="Sctrl_Search" x="807" y="58" width="94" height="30" click="Search()"
					   Lable_val="Search">
	</WrbComp:Button_BB>
	<s:BorderContainer x="57" y="33" width="856" height="415" id="bdr_History"
					   borderVisible="true" visible="false" depth="1000">
		<mx:Label x="19" y="62" text="Requestedby" />
		<mx:Label x="19" y="362" text="Resident Manager" />
		<mx:Label x="159" y="362" text="Operations Manager" />
		<mx:Label x="319" y="362" text="Head Operations" />
		<mx:Label x="461" y="362" text="Account Manager" />
		<mx:Label x="581" y="362" text="Total Amount" />
		<mx:Label x="365" y="60" text="Requested On" />
		
		<mx:DataGrid x="0" y="98"  verticalAlign="middle" editable="true" visible="true"
					 width="100%" height="220" tabIndex="4" id="Grd_History"
					>
			<mx:columns>
				<mx:DataGridColumn dataField="Reject" width="50"  editable="false">
					<mx:itemRenderer>
						<fx:Component>
							<mx:HBox horizontalAlign="center" verticalAlign="middle">										
								<mx:Image source="@Embed(source='../Assets/delete.png')" buttonMode="true"
										  click="outerDocument.DeleteGrid(event)"/>
								
							</mx:HBox>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="BillDate" headerText="BillDate" width="75" editable="false"/>
				<mx:DataGridColumn dataField="ExpenseHead" headerText="NatureOfService" width="100" editable="false"/>
				<mx:DataGridColumn dataField="VendorName" headerText="VendorName" width="125" editable="false"/>
				<mx:DataGridColumn dataField="Property" headerText="Property" width="100" editable="false"/>
				<mx:DataGridColumn dataField="Type" headerText="Type" width="100" editable="false"/>
				<mx:DataGridColumn dataField="DueDate" headerText="DueDate" width="75" editable="false"/>
				<mx:DataGridColumn dataField="BillNo" headerText="BillNo" width="100" editable="false"/>
				<mx:DataGridColumn dataField="PaymentMode" headerText="PaymentMode" width="100" editable="false"/>
				<mx:DataGridColumn dataField="RequestedAmount" headerText="Amount" width="100" editable="false"/>
				<mx:DataGridColumn dataField="Bill" headerText="Bill" width="50" editable="false">
					<mx:itemRenderer >
						<fx:Component>
							<mx:HBox horizontalAlign="center" verticalAlign="middle">										
								<mx:Image source="@Embed(source='../Assets/view.gif')" buttonMode="true"
										  click="outerDocument.Download()" />
							</mx:HBox>	
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="Id" headerText="Id" width="10" editable="false" visible="false"/>
			</mx:columns>
		</mx:DataGrid> 
		<mx:DataGrid x="4" y="98"  verticalAlign="middle" editable="true" visible="false"
					 width="800" height="220" tabIndex="4" id="Grd_ExcelHistory"
					 >
			<mx:columns>
				<mx:DataGridColumn dataField="Reject" width="50"  editable="false">
					<mx:itemRenderer>
						<fx:Component>
							<mx:HBox horizontalAlign="center" verticalAlign="middle">										
								<mx:Image source="@Embed(source='../Assets/delete.png')" buttonMode="true"
										  click="outerDocument.DeleteGrid(event)"/>
								
							</mx:HBox>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="BillDate" headerText="BillDate" width="75" editable="false"/>
				<mx:DataGridColumn dataField="ExpenseHead" headerText="ExpenseHead" width="100" editable="false"/>
				<mx:DataGridColumn dataField="VendorName" headerText="VendorName" width="125" editable="false"/>
				<mx:DataGridColumn dataField="Property" headerText="Property" width="100" editable="false"/>
				<mx:DataGridColumn dataField="Type" headerText="Type" width="100" editable="false"/>
				<mx:DataGridColumn dataField="DueDate" headerText="DueDate" width="50" editable="false"/>
				<mx:DataGridColumn dataField="BillNo" headerText="BillNo" width="100" editable="false"/>
				<mx:DataGridColumn dataField="PaymentMode" headerText="PaymentMode" width="100" editable="false"/>
				<mx:DataGridColumn dataField="RequestedAmount" headerText="RequestedAmount" width="100" editable="false"/>
				<mx:DataGridColumn dataField="Bill" headerText="Bill" width="50" editable="false">
					<mx:itemRenderer >
						<fx:Component>
							<mx:HBox horizontalAlign="center" verticalAlign="middle">										
								<mx:Image source="@Embed(source='../Assets/view.gif')" buttonMode="true"
										  click="outerDocument.Download()" />
							</mx:HBox>	
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid> 
		<s:BorderContainer x="0" y="0" width="854" height="42" borderVisible="false"  backgroundColor="#c2c2c2">
			<s:Image x="828" y="14" source="@Embed(source='../Assets/CrossSmall.png')" 
					 buttonMode="true" toolTip="Close" click="FnClosetariff_clickHandler(event)"/>
			<mx:Label x="32" y="13" text="Vendor Cheque Request Details" color="red"/>
		</s:BorderContainer>
		<mx:TextInput id="Txt_Request" x="101" y="60" width="150" height="23" textAlign="center"  editable="false"/>
		<mx:TextInput id="Txt_Month" x="469" y="60" width="100" height="23" textAlign="center"  editable="false"/>
		
		<mx:TextInput id="Txt_Total" x="661" y="360" width="100" height="23" textAlign="right" editable="false"/>
		<mx:Button x="688" y="60" height="26" label="Export" click="Export(event)"/>
		
		<s:BorderContainer x="213" y="97" width="437" height="222" id="Brd_imageUpload" visible="false" 
						   borderVisible="true" backgroundColor="#fbf9f9" cornerRadius="5" depth="500">
			
			<mx:ControlBar visible="false">
				<mx:Spacer width="80%"/>
				<mx:HBox visible="false">
					<mx:TextInput id="FilePath" width="150"  visible="true"/>
					<mx:Button id="Filedata" label="Browse File" name="Filedata" />
					<mx:Button label="UpLoad File" name="uploadbutton" id="uploadbutton" visible="false" width="0" />
				</mx:HBox>
				<mx:TextArea id="resultsTxtField"  width="0"  name="resultsTxtField" visible="false"/>
			</mx:ControlBar>
			
			<WrbComp:Button_HB id="Btn_Close" x="68" y="145" width="118" height="32" buttonMode="true"
							   _Label="Download" click="downloadSourceCodeZip()" depth="0" focusEnabled="false" visible="true"/>
			
			<s:TextInput x="111" y="52" width="189" height="40" id="txt_ImageName" enabled="false"/>		
			<WrbComp:Button_HB x="189" y="145" height="32" _Label="View" click="ViewBill()"/>
			<WrbComp:Button_HB x="279" y="145" height="32" _Label="Close" click="{Brd_imageUpload.visible=false}"/>
		</s:BorderContainer>
	</s:BorderContainer>
	<s:BorderContainer x="232" y="43" width="538" height="409" id="bdr_Action" visible="false" depth="500">
		<s:BorderContainer x="0" y="0" width="536" height="42" borderVisible="true"  backgroundColor="#c2c2c2">
			<mx:Label x="15" y="12" text="Comment History" color="red"/>
		</s:BorderContainer>
		
		<mx:Label x="15" y="46" text="Approval Status" color="red"/>
		
		<s:Image x="513" y="14" source="@Embed(source='../Assets/CrossSmall.png')" 
				 buttonMode="true" toolTip="Close" click="FnClose_clickHandler(event)"/>
		<mx:DataGrid x="13" y="66"  verticalAlign="middle" editable="true" visible="true"
					 width="510" height="331" tabIndex="4" id="Grd_User1" >
			<mx:columns>
				<mx:DataGridColumn dataField="UserName" headerText="UserName" width="150" editable="false"
								   visible="true">
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="Status" headerText="Status" width="100" 
								   editable="false" visible="true">
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="Processedon" headerText="Processedon" width="100" editable="false">
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
		
	</s:BorderContainer>
	<s:BorderContainer x="39" y="120" width="950" height="320" id="bdr_Scroll" visible="true">
		
			<mx:DataGrid x="0" y="-1"  verticalAlign="middle" editable="true" visible="true"
							 width="100%" height="321" tabIndex="4" id="Grd_Details">
					<mx:columns>
						<mx:DataGridColumn dataField="Action" headerText="Action" width="50" editable="false"
										   visible="true">
							<mx:itemRenderer >
								<fx:Component>
									<mx:HBox horizontalAlign="center" verticalAlign="middle">										
										<mx:Image source="@Embed(source='../Assets/Comment.png')" buttonMode="true"
												  click="outerDocument.FnAction(event)"/>
									</mx:HBox>	
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn dataField="History" headerText="History" width="50" 
										   editable="false" visible="true">
							<mx:itemRenderer >
								<fx:Component>
									<mx:HBox horizontalAlign="center" verticalAlign="middle">										
										<mx:Image source="@Embed(source='../Assets/view.gif')" buttonMode="true"
												  click="outerDocument.FnHistory(event)"/>
									</mx:HBox>	
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn dataField="Process" headerText="Process" width="50" editable="false">
							<mx:itemRenderer >
								<fx:Component>
									<mx:HBox horizontalAlign="center" verticalAlign="middle">
										<mx:CheckBox selected="{data.Process}"  
													 change="outerDocument.FnChkChange(event);" 
													 />
									</mx:HBox>	
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn dataField="RequestedOn" headerText="RequestedOn" width="75" editable="false" visible="true"/>
						<mx:DataGridColumn dataField="Requestedby" headerText="Requestedby" width="100" editable="false"/>
						<mx:DataGridColumn dataField="Property" headerText="Property" width="100" editable="false"/>
						<mx:DataGridColumn dataField="RequestedAmount" headerText="RequestedAmount" width="120" editable="false"/>
						<mx:DataGridColumn dataField="Status" headerText="Status" width="150" editable="false"/>
						<mx:DataGridColumn dataField="Processedon" headerText="LastProcessedon" width="75" editable="false"/>
						<mx:DataGridColumn dataField="Processedby" headerText="LastProcessedby" width="100" editable="false"/>
						<mx:DataGridColumn dataField="UserId" headerText="UserId" width="10" editable="false" visible="false"/>
						<mx:DataGridColumn dataField="RequestedUserId" headerText="RequestedUserId" width="10" editable="false" visible="false"/>
						<mx:DataGridColumn dataField="Id" headerText="Id" width="10" editable="false" visible="false"/>
						<mx:DataGridColumn dataField="PropertyId" headerText="PropertyId" width="10" editable="false" visible="false"/>
					</mx:columns>
				</mx:DataGrid>
				
		
	</s:BorderContainer>
</s:Application>
