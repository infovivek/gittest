<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   width="100%" height="100%" creationComplete="PageLoad(event)" 
			   pageTitle="Define Vendor Cost">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Style source = "..\\Common\\ApplicationCSS.css"/>
	<fx:Script source="..\\Common\\CommonScript.as"/>
	<fx:Script source="..\\Common\\Functions.as"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import com.as3xls.xls.Type;
			
			import mx.collections.ArrayCollection;
			import mx.containers.Accordion;
			import mx.controls.Alert;
			import mx.controls.Text;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.ColorPickerEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			import mx.graphics.codec.PNGEncoder;
			import mx.managers.PopUpManager;
			import mx.rpc.http.mxml.HTTPService;
			
			import org.hamcrest.mxml.collection.Array;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public static var Global_AC:ArrayCollection = new ArrayCollection();
			public static var GlobalXml:String = "",ErrStr:String="";
			public var Id:int=0,ErrMsg:String="",Vendor:String="",VendorId:int=0,PropertyId:int=0;
			public var AddMode:Boolean=true,Flag:Boolean=true,DateFrom:String="",DateTo:String="";
			
			protected function PageLoad(event:FlexEvent):void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				Help();
				Grd_Details.editable=false;

			}
			public function Help():void
			{  
				useWeb("VendorCost","PAGELOAD_CUSTOM",[GlobalXml,'PAGELOAD',0,'','']);
			}
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{
				if (Ds_Objects.currentTarget.description.toString() == "PAGELOAD_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						hlp_vendor.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;		
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "SERVICELOAD_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						dt_Effectivedate.text=Ds_Objects.result.Tables.Table.Rows[0].EffectiveFrom;		
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Grd_Details.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;		
					}
					if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
					{
						Grd_History.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;		
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "HistoryLoad_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Detail.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "SEARCH_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Details.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;		
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Grd_History.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;		
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					if (AddMode == true)
					{
						alignAlert(Alert.show("Cost Added Successfully.","Message !",
							Alert.OK, null, null,iconTickLarge, Alert.OK),10,"");
					}
					else
					{
						alignAlert(Alert.show("Cost Updated Successfully.","Message !",
							Alert.OK, null, null,iconTickLarge, Alert.OK),10,"");
					}
					FnClear();
					
				}
			}
			protected function OnSelectionGuestname():void
			{
				Grd_Details.dataProvider=null;
				Vendor=hlp_vendor.Select_Row.VendorName;
				hlp_vendor.text=Vendor;
				VendorId=hlp_vendor.Select_Row.Id
				//useWeb("VendorCost","PROPERTYLOAD_CUSTOM",[GlobalXml,"PropertyLoad",VendorId,'','']);
			}
			protected function FnValidation_BeforeSave():String
			{
				ErrStr="";
				
				var TxtFlag:Boolean=true;
				if(hlp_vendor.text=="")
				{
					if(TxtFlag==true)
					{
						hlp_vendor.setFocus();
						TxtFlag=false;
					}
					ErrStr=ErrStr+"* Vendor is Required.\n";					
				}
				if(dt_Effectivedate.text=="")
				{
					if(TxtFlag==true)
					{
						dt_Effectivedate.setFocus();
						TxtFlag=false;
					}
					ErrStr=ErrStr+"* EffectiveFrom is Required.\n";
				}
				if(Grd_Details.dataProvider ==null)
				{
					ErrStr=ErrStr+"* Cost Details should not be Empty.\n";
				}
				return ErrStr; 
				
			}	
			protected function FnSave():void
			{
				ErrStr="";
				ErrMsg = ""; Flag = true; 
				var Str:String=FnValidation_BeforeSave();
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				else
				{
					var Ac_Hdr:ArrayCollection = new ArrayCollection
						([{ 
							VendorId:VendorId,
							//PropertyId:PropertyId,
							EffectiveFrom:dt_Effectivedate.text
						}])
					var VC:ArrayCollection= new  ArrayCollection();
					VC.removeAll();
					VC=Grd_Details.dataProvider as ArrayCollection;
					var ServiceXml:String="";
					ServiceXml += "<ROOT>";
					ServiceXml += ObjToXmlStr_Comm(VC,"ServiceXml")
					ServiceXml += "</ROOT>";
					var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
					useWeb("VendorCost","Save_CUSTOM",[GlobalXml,HdrXml,ServiceXml]);
				}
			}
			protected function FnClear():void
			{
				hlp_vendor.text="";
				hlp_vendor.dataProvider=null;
				VendorId=0;PropertyId=0;
				Grd_Details.dataProvider=null;
				Grd_History.dataProvider=null;
				dt_Effectivedate.text="";
				Help();
			}
			public function FnChkChange(event:Event):void
			{
				var Ac:ArrayCollection=new ArrayCollection();				
				Ac=Grd_Details.dataProvider as ArrayCollection;				
				var Index:int=Grd_Details.selectedIndex;
				var Flag:Boolean=true;
				
				if(Ac[Index].Process==0)
				{
					Ac[Index].Process=true;
					
				}
				else
				{
					Ac[Index].Process=false;
				} 
			}
			
			protected function Newrate(event:MouseEvent):void
			{
				Grd_Details.editable=true;
								
			}
			protected function CurrentRate(event:MouseEvent):void
			{
				Grd_Details.editable=false;
				useWeb("VendorCost","SERVICELOAD_CUSTOM",[GlobalXml,"Serviceload",VendorId,'','']);
			}
			public function FnHistory(Event):void
			{ 
				
				DateFrom=Grd_History.selectedItem.EffectiveFrom;
				DateTo=Grd_History.selectedItem.EffectiveTo;
				if(DateTo !="")
				{
				useWeb("VendorCost","HistoryLoad_CUSTOM",[GlobalXml,"History",VendorId,DateFrom,DateTo]);
				}
				else
				{
					useWeb("VendorCost","HistoryLoad_CUSTOM",[GlobalXml,"History1",VendorId,DateFrom,'']);
				}
				bdr_History.visible=true;
							
			}
			
			protected function ItemSearch(event:MouseEvent):void
			{
				useWeb("VendorCost","SERVICELOAD_CUSTOM",[GlobalXml,"Serviceload",VendorId,'','']);
				Grd_Details.editable=false;
			}
			public function FnClose_clickHandler(event):void
			{
				bdr_History.visible=false;
			}
			protected function dt_DateofAgreement_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				//dt_ExpiryDate.text="";
				if(dt_Effectivedate.selectedDate)
				{
					var asd:String = dt_Effectivedate.text;										
					var Y:String = asd.substr(6,10);
					var M:String = asd.substr(3,2);
					var D:String = asd.substr(0,2);
					var RangeStart:String =  Y+'/'+M+'/'+D;
					dt_Effectivedate.selectableRange = {rangeStart:new Date(RangeStart)};
					dt_Effectivedate.selectedDate = new Date(RangeStart);
				}
			}
		]]>
	</fx:Script>
	<mx:Label x="104" y="81" text="Vendor"/>
	
	<mx:Button x="442" y="76" height="26" label="Search" click="ItemSearch(event)"/>
	<mx:Button x="461" y="501" height="26" label="Save" click="FnSave()"/>
	<mx:Button x="561" y="501" height="26" label="Clear" click="FnClear()"/>
	<WrbHelpComp:HelpText x="157" y="78" width="260" height="26" id="hlp_vendor" depth="500"
						  onselection="{OnSelectionGuestname()}" pxSetColumnsWidth="0,260">
	</WrbHelpComp:HelpText>
		
		<mx:DataGrid id="Grd_Details" x="99" y="172" width="429" height="289" tabIndex="3"
					 dragEnabled="true" draggableColumns="false" dragMoveEnabled="true"
					 dropEnabled="true" editable="true" focusEnabled="false"  
					 textAlign="center" borderVisible="true">
			<mx:columns>
				<!--mx:DataGridColumn dataField="Action" width="50"  editable="false">
					<mx:itemRenderer >
						<fx:Component>
							<mx:HBox horizontalAlign="center" verticalAlign="middle">
								<mx:CheckBox selected="{data.Process}"  
											 change="outerDocument.FnChkChange(event);" 
											 />
							</mx:HBox>	
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn-->
				<mx:DataGridColumn dataField="ServiceItem" width="160" 
								   headerText="ServiceItem" editable="false" textAlign="center"/>							
				<mx:DataGridColumn dataField="Cost" width="90" headerText="Cost"
								   editable="true" textAlign="center" />
				<mx:DataGridColumn dataField="ItemId" width="100" visible="false"/>
				<mx:DataGridColumn dataField="Flag" width="50" visible="false"/>
				<mx:DataGridColumn dataField="Id" width="50" visible="false"/>
			</mx:columns>
		</mx:DataGrid>				
		<mx:Label x="104" y="137" text="Effective From:"/>
	<mx:DateField x="190" y="131" width="116" id="dt_Effectivedate" yearNavigationEnabled="true" tabIndex="2" 
				  change="dt_DateofAgreement_changeHandler(event)"   formatString="DD/MM/YYYY" />
		<mx:Button x="350" y="131" width="75" height="23" label="New Rate" click="Newrate(event)"/>
		<mx:Button x="434" y="131" height="23" label="Current Rate" click="CurrentRate(event)"/>
		

			<mx:Label x="576" y="136" text="History" color="red"/>
			<mx:DataGrid x="575" y="172"  verticalAlign="middle" editable="true" visible="true"
						 width="350" height="289" tabIndex="4" id="Grd_History" >
				<mx:columns>
					<mx:DataGridColumn dataField="EffectiveFrom" headerText="EffectiveFrom" width="100" editable="false"
									   visible="true">
					</mx:DataGridColumn>
					<mx:DataGridColumn dataField="EffectiveTo" headerText="EffectiveTo" width="100" 
									   editable="false" visible="true">
					</mx:DataGridColumn>
					<mx:DataGridColumn dataField="History" headerText="Type" width="100" editable="false">
					</mx:DataGridColumn>
					<mx:DataGridColumn dataField="View" headerText="View" width="50" editable="false">
						<mx:itemRenderer >
							<fx:Component>
								<mx:HBox horizontalAlign="center" verticalAlign="middle">										
									<mx:Image source="@Embed(source='../Assets/view.gif')" buttonMode="true"
											  click="outerDocument.FnHistory(event)"/>
								</mx:HBox>	
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
				</mx:columns>
			</mx:DataGrid>
			
	<mx:HRule x="0" y="477" width="100%" strokeColor="#eb1c24"/>
	<s:BorderContainer x="229" y="38" width="556" height="493" id="bdr_History" depth="2000" visible="false">
		<s:BorderContainer x="0" y="0" width="555" height="42" borderVisible="true"  backgroundColor="#c2c2c2">
			<s:Label x="45" y="12" text="VendorCost History" color="red"/>
		</s:BorderContainer>
		
		<s:Image x="533" y="14" source="@Embed(source='../Assets/CrossSmall.png')" 
				 buttonMode="true" toolTip="Close" click="FnClose_clickHandler(event)"/>
		<mx:DataGrid id="Grd_Detail" x="61" y="63" width="434" height="408" tabIndex="3"
					 dragEnabled="true" draggableColumns="false" dragMoveEnabled="true"
					 dropEnabled="true" editable="true" focusEnabled="false"  
					 textAlign="center" borderVisible="true">
			<mx:columns>
				<!--mx:DataGridColumn dataField="Action" width="50"  editable="false">
				<mx:itemRenderer >
				<fx:Component>
				<mx:HBox horizontalAlign="center" verticalAlign="middle">
				<mx:CheckBox selected="{data.Process}"  
				change="outerDocument.FnChkChange(event);" 
				/>
				</mx:HBox>	
				</fx:Component>
				</mx:itemRenderer>
				</mx:DataGridColumn-->
				<mx:DataGridColumn dataField="ServiceItem" width="160" 
								   headerText="ServiceItem" editable="false" textAlign="center"/>							
				<mx:DataGridColumn dataField="Cost" width="90" headerText="Cost"
								   editable="true" textAlign="center" />
				<mx:DataGridColumn dataField="ItemId" width="100" visible="false"/>
				<mx:DataGridColumn dataField="Id" width="100" visible="false"/>
			</mx:columns>
		</mx:DataGrid>
	</s:BorderContainer>
	
</s:Application>
