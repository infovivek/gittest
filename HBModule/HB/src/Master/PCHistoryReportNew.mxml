<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbComp="WrbComp.*"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   xmlns:ns1="*"
			   width="100%" height="100%" creationComplete="PageLoad(event)" pageTitle="PCHistoryReport">
	<fx:Declarations>
		<mx:NumberFormatter id="NF_Two" precision="2" rounding="nearest"/>
	</fx:Declarations>
	<fx:Style source = "..\\Common\\ApplicationCSS.css"/>
	<fx:Script source="..\\Common\\CommonScript.as"/>
	<fx:Script source="..\\Common\\Functions.as"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.FormPrintView;
			import WrbComp.frmsearchwindow;
			
			import WrbHelpComp.HlpGridHdr;
			
			import com.as3xls.xls.Cell;
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			import com.as3xls.xls.Type;
			
			import mx.collections.ArrayCollection;
			import mx.containers.Accordion;
			import mx.controls.Alert;
			import mx.controls.Text;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.ColorPickerEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			import mx.graphics.codec.PNGEncoder;
			import mx.managers.PopUpManager;
			import mx.rpc.http.mxml.HTTPService;
			
			import org.hamcrest.mxml.collection.Array;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public static var Global_AC:ArrayCollection = new ArrayCollection();
			public static var GlobalXml:String = "",TypeServiceId:int=0,ErrStr:String="";
			public var Id:int=0,ErrMsg:String="",PropertyId:int=0,PropertyName:String="",UserName:String="",UserId:int=0;
			public var AddMode:Boolean=true,Flag:Boolean=true;
			public var FromDate:String="",ToDate:String="",Str:String="";
			[Bindable]
			public var footerHeight:Number = 20;
			public var prodIndex:Number;
			public var prodTotal:Number = 0;
			private var xlsFile:ExcelFile;
			
			
			protected function PageLoad(event:FlexEvent):void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				Help();
				
			}
			public function Help():void
			{  
				useWeb("PCHistory","PAGELOAD_CUSTOM",[GlobalXml,'Pageload',0,Global_AC[0].UsrId,'','']);
			}
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{
				if (Ds_Objects.currentTarget.description.toString() == "PAGELOAD_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						hlp_Property.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Grd_Details.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "USERLOAD_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						hlp_Username.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Gridload_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						
						Grd_Details.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Actionload_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_User1.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "HistoryLoad_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Txt_Requestedby.text=Ds_Objects.result.Tables.Table.Rows[0].Requestedby;
						Txt_RequestedOn.text=Ds_Objects.result.Tables.Table.Rows[0].RequestedOn;
						Txt_RequestedProperty.text=Ds_Objects.result.Tables.Table.Rows[0].PCAccount;
						Txt_Requestedamount.text=NF_Two.format(Ds_Objects.result.Tables.Table.Rows[0].Amount);
						Txt_Requestedstatus.text=Ds_Objects.result.Tables.Table.Rows[0].Status;
						Txt_Approvedamount.text=NF_Two.format(Ds_Objects.result.Tables.Table.Rows[0].ApprovedAmount);
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						
						Grd_History.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					if (AddMode == true)
					{
						alignAlert(Alert.show("Request Approved Successfully.","Message !",Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
					}
					else
					{
						alignAlert(Alert.show("Request Approved Successfully.","Message !",Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
					}
					FnClear();
					
				}
			}
			protected function FnValidation_BeforeSave():String
			{
				ErrStr="";
				
				var TxtFlag:Boolean=true;
				if(hlp_Property.text =="")
				{
					ErrStr=ErrStr+"* PropertyName Required.\n";
				}
				if(hlp_Username.text =="")
				{
					ErrStr=ErrStr+"* Username Required.\n";
				}
				if(Grd_Details.dataProvider ==null)
				{
					ErrStr=ErrStr+"* User Details should not be Empty.\n";
				}
				return ErrStr; 
				
			}	
			protected function FnSave():void
			{
				ErrStr="";
				ErrMsg = ""; Flag = true; 
				var Str:String=FnValidation_BeforeSave();
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				else
				{
					var Ac_Hdr:ArrayCollection = new ArrayCollection
						([{ 
							PropertyId:PropertyId,
							Property:PropertyName,
							UserId:Global_AC[0].UsrId,
							Id:Id
						}])
					var PCR:ArrayCollection= new  ArrayCollection();
					PCR.removeAll();
					PCR=Grd_Details.dataProvider as ArrayCollection;
					var ServiceXml:String="";
					ServiceXml += "<ROOT>";
					ServiceXml += ObjToXmlStr_Comm(PCR,"ServiceXml")
					ServiceXml += "</ROOT>";
					var HdrXml:String = ObjToXmlStr_Comm(Ac_Hdr,"HdrXml");
				}
			}
			
			protected function FnClear():void
			{				
				Help();
				bdr_Action.visible=false;
				bdr_History.visible=false;
				Grd_Details.visible=false;
			}
			public function FnHistory(Event):void
			{ 
				//var Grid_AC:ArrayCollection=new ArrayCollection();
				UserId=Grd_Details.selectedItem.RequestedUserId;
				Grd_History.dataProvider=null;
				Txt_Requestedby.text="";Txt_RequestedOn.text="";
				Txt_RequestedProperty.text="";Txt_Requestedamount.text="";
				Txt_Requestedstatus.text="";
				PropertyId=Grd_Details.selectedItem.PropertyId;
				Str=Grd_Details.selectedItem.RequestedOn;
				useWeb("PCHistory","HistoryLoad_CUSTOM",[GlobalXml,"History",PropertyId,UserId,Str,'']);
				bdr_History.visible=true;
				Grd_History.visible=true;
				Grd_Details.visible=false;
				
			}
			public function FnAction(Event):void
			{ 
				UserId=Grd_Details.selectedItem.RequestedUserId;
				Grd_User1.dataProvider=null;
				Str=Grd_Details.selectedItem.RequestedOn;
				PropertyId=Grd_Details.selectedItem.PropertyId;
				useWeb("PCHistory","Actionload_CUSTOM",[GlobalXml,"Action",PropertyId,UserId,Str,'']);
				bdr_Action.visible=true;
				Grd_User1.visible=true;
				bdr_History.visible=false;
				Grd_Details.visible=false;
				
			}
			public function FnClosetariff_clickHandler(event):void
			{
				bdr_History.visible=false;
				Grd_History.dataProvider=null;
				Grd_Details.visible=true;
			}
			public function FnClose_clickHandler(event):void
			{
				bdr_Action.visible=false;
				Grd_Details.visible=true;
				Grd_User1.dataProvider=null;
			}
			public function FnChkChange(event:Event):void
			{
				var Ac:ArrayCollection=new ArrayCollection();				
				Ac=Grd_Details.dataProvider as ArrayCollection;				
				var Index:int=Grd_Details.selectedIndex;
				var Flag:Boolean=true;
				
				if(Ac[Index].Process==0)
				{
					Ac[Index].Process=true;
				}
				else
				{
					Ac[Index].Process=false;
				} 
			}
			public var NewPropertyId:Number=0;
			protected function PropertyLoad():void
			{
				if(hlp_Property.selected())
				{
					hlp_Username.text="";
					UserId=0;
					//Grd_Details.dataProvider=null;
					NewPropertyId=hlp_Property.Select_Row.PropertyId;
					PropertyName=hlp_Property.Select_Row.Property;
					hlp_Property.text=PropertyName;
					useWeb("PCHistory","USERLOAD_CUSTOM",[GlobalXml,"USERLOAD",NewPropertyId,0,'','']);
					hlp_Username.setFocus();
				}
				else
				{
					hlp_Property.text="";
				}
			}
			protected function search(event:MouseEvent):void
			{
				Grd_Details.dataProvider=null;
				ErrStr="";
				ErrMsg = ""; Flag = true; 
				//var Str:String=FnValidation_BeforeSave();
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				else
				var Str:String=drp_status.selectedItem;
				useWeb("PCHistory","Gridload_CUSTOM",[GlobalXml,"GRIDLOAD",NewPropertyId,UserId,Str,'']);
				Grd_Details.visible=true;
				
			}
			protected function GuestNameLoad():void
			{
				//Grd_Details.dataProvider=null;
				if(hlp_Username.selected())
				{
					UserId=hlp_Username.Select_Row.Id;
					UserName=hlp_Username.Select_Row.UserName;
					hlp_Username.text=UserName;
					//useWeb("PettyCashReport","Gridload_CUSTOM",[GlobalXml,"GRIDLOAD",PropertyId,UserId]);
					dt_DateFrom.setFocus();
				}
				else
				{
					hlp_Username.text="";
				}
			}
			public function roExport_export_Result():void
			{
				if(Grd_Details.dataProvider !=null)
				{
					var arrExportResult:ArrayCollection = Grd_Details.dataProvider as ArrayCollection;
					xlsFile = new ExcelFile();
					var sheet:Sheet = new Sheet();
					
					sheet.resize(arrExportResult.length+1,6);
					
					sheet.setCell(0,0,'Requestedby');
					sheet.setCell(0,1,'PCAccount');
					sheet.setCell(0,2,'RequestedAmount');
					sheet.setCell(0,3,'Status');
					sheet.setCell(0,4,'ProcessedBy');
					sheet.setCell(0,5,'Processedon');
					
					for(var i:int=0;i<arrExportResult.length;i++)
					{
						sheet.setCell(i+1, 0, arrExportResult[i].Requestedby);
						sheet.setCell(i+1, 1, arrExportResult[i].PCAccount);
						sheet.setCell(i+1, 2, arrExportResult[i].RequestedAmount);
						sheet.setCell(i+1, 3, arrExportResult[i].Status);
						sheet.setCell(i+1, 4, arrExportResult[i].ProcessedBy);
						sheet.setCell(i+1, 5, arrExportResult[i].Processedon);
						
					}
					Grd_Details.dataProvider = arrExportResult;
					xlsFile.sheets.addItem(sheet);      
					var bytes: ByteArray = xlsFile.saveToByteArray();
					var fr:FileReference = new FileReference();
					fr.save(bytes,"SampleExport.xls");
				}
				else
				{
					alignAlert(Alert.show("User Requested Details Required.","Message !",
						Alert.OK, null, null, iconErrLarge, Alert.OK),10,"");
				}
				Grd_History.visible=false;
				bdr_History.visible=false;
				hlp_Property.text="";
				hlp_Username.text="";
			}
			public function roExport_export_Result1():void
			{
				if(Grd_History.dataProvider !=null)
				{
					var arrExportResult:ArrayCollection = Grd_History.dataProvider as ArrayCollection;
					xlsFile = new ExcelFile();
					var sheet:Sheet = new Sheet();
					
					sheet.resize(arrExportResult.length+1,4);
					
					sheet.setCell(0,0,'RequestedOn');
					sheet.setCell(0,1,'RequestedAmount');
					sheet.setCell(0,2,'ExpenseHead');
					sheet.setCell(0,3,'Description');
					
					
					for(var i:int=0;i<arrExportResult.length;i++)
					{
						sheet.setCell(i+1, 0, arrExportResult[i].RequestedOn);
						sheet.setCell(i+1, 1, arrExportResult[i].RequestedAmount);
						sheet.setCell(i+1, 2, arrExportResult[i].ExpenseHead);
						sheet.setCell(i+1, 3, arrExportResult[i].Description);
												
					}
					Grd_History.dataProvider = arrExportResult;
					xlsFile.sheets.addItem(sheet);      
					var bytes: ByteArray = xlsFile.saveToByteArray();
					var fr:FileReference = new FileReference();
					fr.save(bytes,"SampleExport.xls");
				}
				else
				{
					alignAlert(Alert.show("History Details Required.","Message !",
						Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
				}
				
				bdr_History.visible=false;
				Grd_Details.visible=true;
				hlp_Property.text="";
				hlp_Username.text="";
			}
			public function roExport_export_Result2():void
			{
				if(Grd_User1.dataProvider !=null)
				{
					var arrExportResult:ArrayCollection = Grd_User1.dataProvider as ArrayCollection;
					xlsFile = new ExcelFile();
					var sheet:Sheet = new Sheet();
					
					sheet.resize(arrExportResult.length+1,4);
					
					sheet.setCell(0,0,'UserName');
					sheet.setCell(0,1,'Status');
					sheet.setCell(0,2,'Comments');
					sheet.setCell(0,3,'Processedon');
					
					
					for(var i:int=0;i<arrExportResult.length;i++)
					{
						sheet.setCell(i+1, 0, arrExportResult[i].UserName);
						sheet.setCell(i+1, 1, arrExportResult[i].Status);
						sheet.setCell(i+1, 2, arrExportResult[i].Comments);
						sheet.setCell(i+1, 3, arrExportResult[i].Processedon);
						
					}
					Grd_User1.dataProvider = arrExportResult;
					xlsFile.sheets.addItem(sheet);      
					var bytes: ByteArray = xlsFile.saveToByteArray();
					var fr:FileReference = new FileReference();
					fr.save(bytes,"SampleExport.xls");
				}
				else
				{
					alignAlert(Alert.show("Action Details Required.","Message !",
						Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
				}
				Grd_User1.visible=false;
				bdr_Action.visible=false;
				Grd_Details.visible=true;
				hlp_Property.text="";
				hlp_Username.text="";
			}
		]]>
	</fx:Script>
	
	<!--s:Label x="335" y="92" height="20" text="Select Property "/-->
	<!--WrbHelpComp:HelpText id="hlp_property" x="441" y="84" width="194" height="28" depth="46"
	onselection="{OnSelectionGuestname()}" pxSetColumnsWidth="194,0,0"
	pxSetHeight="183">
	</WrbHelpComp:HelpText-->
	
	
				<mx:DataGrid x="48" y="102"  verticalAlign="middle" editable="true" visible="true"
							 width="900" height="371" tabIndex="4" id="Grd_Details">
					<mx:columns>
						<mx:DataGridColumn dataField="Action" headerText="Action" width="50" editable="false"
										   visible="true">
							<mx:itemRenderer >
								<fx:Component>
									<mx:HBox horizontalAlign="center" verticalAlign="middle">										
										<mx:Image source="@Embed(source='../Assets/Comment.png')" buttonMode="true"
												  click="outerDocument.FnAction(event)"/>
									</mx:HBox>	
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn dataField="History" headerText="History" width="60" 
										   editable="false" visible="true">
							<mx:itemRenderer >
								<fx:Component>
									<mx:HBox horizontalAlign="center" verticalAlign="middle">										
										<mx:Image source="@Embed(source='../Assets/view.gif')" buttonMode="true"
												  click="outerDocument.FnHistory(event)"/>
									</mx:HBox>	
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn dataField="RequestedOn" headerText="RequestedOn" width="100" editable="false"/>
						<mx:DataGridColumn dataField="Requestedby" headerText="Requestedby" width="100" editable="false"/>
						<mx:DataGridColumn dataField="PCAccount" headerText="PCAccount" width="130" editable="false"/>
						<mx:DataGridColumn dataField="RequestedAmount" headerText="RequestedAmount" width="100" editable="false"/>
						
						<mx:DataGridColumn dataField="Status" headerText="Status" width="150" editable="false"/>
						<mx:DataGridColumn dataField="ProcessedBy" headerText="Processedby" width="120" editable="false"/>
						<mx:DataGridColumn dataField="Processedon" headerText="Processedon" width="100" editable="false"/>
						<mx:DataGridColumn dataField="RequestedUserId" headerText="RequestedUserId" width="10" editable="false" visible="false"/>
						<mx:DataGridColumn dataField="Id" headerText="Id" width="10" editable="false" visible="false"/>
						
					</mx:columns>
				</mx:DataGrid>
				
	<WrbComp:Button_BB x="852" y="56" Lable_val="Filter" click="search(event)">
	</WrbComp:Button_BB>
	<s:BorderContainer x="78" y="43" width="825" height="479" id="bdr_History"
					   borderVisible="true" visible="false" depth="1500">
		<mx:Label x="73" y="59" text="Requested by"/>
		<mx:Label x="445" y="58" text="Requested on"/>
		<mx:Label x="73" y="103" text="Requested Status"/>
		<mx:Label x="445" y="103" text="Requested Amount"/>
		<mx:Label x="73" y="146" text="Requested Property"/>
		<s:TextInput x="206" y="50" width="199" height="29"  id="Txt_Requestedby" editable="false"/>
		<s:TextInput x="567" y="50" width="199" height="29" id="Txt_RequestedOn" editable="false"/>
		<s:TextInput x="206" y="135" width="199" height="29" id="Txt_RequestedProperty" editable="false"/>
		<s:TextInput x="567" y="93" width="199" height="29" id="Txt_Requestedamount" editable="false"/>
		<mx:Label x="445" y="139" text="Approved Amount"/>
		<s:TextInput x="567" y="133" width="199" height="29" id="Txt_Approvedamount" editable="false"/>
		<s:TextInput x="206" y="93" width="199" height="29" id="Txt_Requestedstatus" editable="false"/>
		<WrbComp:Button_BB x="374" y="437" Lable_val="Export" click="roExport_export_Result1()">
			</WrbComp:Button_BB>
		<mx:DataGrid x="69" y="174"  verticalAlign="middle" editable="true" visible="true"
					 width="700" height="244" tabIndex="4" id="Grd_History" >
			<mx:columns>
				<mx:DataGridColumn dataField="RequestedOn" headerText="Requested Date" width="100" editable="false"/>
				<mx:DataGridColumn dataField="RequestedAmount" headerText="Requested Amount" width="100" editable="false"/>
				<mx:DataGridColumn dataField="ApprovedAmount" headerText="Approved Amount" width="100" editable="false"/>
				<mx:DataGridColumn dataField="ExpenseHead" headerText="Expense-Head" width="200" editable="false"/>
				<mx:DataGridColumn dataField="Description" headerText="Description" width="200" editable="false"/>
				
			</mx:columns>
		</mx:DataGrid> 
		<s:BorderContainer x="0" y="0" width="823" height="42" borderVisible="true"  backgroundColor="#c2c2c2">
			<s:Image x="790" y="9" source="@Embed(source='../Assets/CrossSmall.png')" 
					 buttonMode="true" toolTip="Close" click="FnClosetariff_clickHandler(event)"/>
			<mx:Label x="32" y="13" text="Petty Cash Request Details" color="red"/>
		</s:BorderContainer>
		
	</s:BorderContainer>
	<s:BorderContainer x="68" y="43" width="847" height="485" id="bdr_Action" visible="false" depth="500">
		<s:BorderContainer x="0" y="0" width="845" height="42" borderVisible="true"  backgroundColor="#c2c2c2">
			<mx:Label x="45" y="12" text="Comment History" color="red"/>
		</s:BorderContainer>
		
		<s:Label x="175" y="70" text="Approval Status" color="red"/>
		
		<s:Image x="813" y="14" source="@Embed(source='../Assets/CrossSmall.png')" 
				 buttonMode="true" toolTip="Close" click="FnClose_clickHandler(event)"/>
		<mx:DataGrid x="176" y="90"  verticalAlign="middle" editable="true" visible="true"
					 width="510" height="331" tabIndex="4" id="Grd_User1" >
			<mx:columns>
				<mx:DataGridColumn dataField="UserName" headerText="UserName" width="150" editable="false"
								   visible="true">
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="Status" headerText="Status" width="100" 
								   editable="false" visible="true">
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="Comments" headerText="Comments" width="150" editable="false">
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="Processedon" headerText="Processedon" width="100" editable="false">
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
		<WrbComp:Button_BB x="384" y="436" Lable_val="Export" click="roExport_export_Result2()">
		</WrbComp:Button_BB>
	</s:BorderContainer>
	<s:Label x="48" y="65" text="Select Property"/>
	<s:Label x="316" y="65" text="UserName"/>
	
	<mx:Label x="545" y="60" text="From" visible="false"/>
	<mx:DateField id="dt_DateFrom" x="583" y="59" width="100" height="23" enabled="true"
				  formatString="DD/MM/YYYY" selectableRange="{{rangeEnd:new Date()}}"
				  styleName="DisabledDateField" 
				  yearNavigationEnabled="false" visible="false"/>
	<s:Label x="701" y="65" text="To" visible="false"/>
	<mx:DateField id="dt_DateTo" x="723" y="59" width="100" height="23" enabled="true"
				  formatString="DD/MM/YYYY" selectableRange="{{rangeEnd:new Date()}}"
				  styleName="DisabledDateField"
				  yearNavigationEnabled="false" visible="false"/>
	<WrbHelpComp:HelpText x="137" y="59" width="171" height="24" id="hlp_Property" onselection="{PropertyLoad()}" 
						  pxSetColumnsWidth="160,0" pxSetHeight="183" depth="10" tabIndex="1">
	</WrbHelpComp:HelpText>
	<WrbHelpComp:HelpText x="382" y="59" width="155" height="24" id="hlp_Username" onselection="{GuestNameLoad()}"
						  pxSetColumnsWidth="0,155" depth="10" tabIndex="2">
	</WrbHelpComp:HelpText>
	<WrbComp:Button_BB x="450" y="491" Lable_val="Export" click="roExport_export_Result()">
	</WrbComp:Button_BB>
	<WrbComp:Button_BB x="475" y="470" Lable_val="Print" visible="false">
	</WrbComp:Button_BB>
	<s:DropDownList x="557" y="59" width="277" height="24" id="drp_status"
					selectedItem="Waiting For Operation Manager Approval">
		<s:ArrayList>
			<fx:String>Waiting For Operation Manager Approval</fx:String>
			<fx:String>Approved by reporting authority</fx:String>
			<fx:String>Approved and waiting for transfer</fx:String>
			<fx:String>Transferred</fx:String>
			<fx:String>Acknowledged</fx:String>
		</s:ArrayList>
	</s:DropDownList>
	<!--s:Label x="419" y="86" width="10" height="12" text="*" color="Red"/-->
</s:Application>
