<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbComp="WrbComp.*"
			   xmlns:Controls="fx.com.adobe.Controls.*"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   xmlns:ns1="*"
			   width="100%" height="100%" creationComplete="PageLoad()" pageTitle="Registration">
	<fx:Declarations>
		<mx:EmailValidator id="EmailValidator" valid="EmailValidator_validHandler(event)"
						   invalid="EmailValidator_invalidHandler(event)"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Style source = "..\\Common\\ApplicationCSS.css"/>
	<fx:Script source = "..\\Common\\Functions.as"/>
	<fx:Script source = "..\\Common\\CommonScript.as"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import WrbHelpComp.HlpGridHdr;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ValidationResultEvent;
			import mx.graphics.codec.PNGEncoder;
			
			import spark.events.IndexChangeEvent;                       
			private var _isValidEmail:Boolean = true;	
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			public var validator:ValidationResultEvent;
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public static var Global_AC:ArrayCollection = new ArrayCollection();
			public static var GlobalXml:String = "",TypeServiceId:int=0,ErrStr:String="",Str_Email:String="";;
			public var Id:int=0,ErrMsg:String="",PropertyId:int=0,PropertyName:String="",UserId:int=0;
			public var AddMode:Boolean=true,Flag:Boolean=true,ClientId:int=0,ClientName:String="";
			
			protected function PageLoad():void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				useWeb("AddUser","PAGELOAD_CUSTOM",[GlobalXml,'PAGELOAD',0,UserId]);
				Ddl_Client1.setFocus();
			}
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{
				if (Ds_Objects.currentTarget.description.toString() == "PAGELOAD_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Ddl_Client1.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						//Ddl_Client2.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;	
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					if (AddMode == true)
					{
						alignAlert(Alert.show("User Added Successfully.","Message !",Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
					}
					else
					{
						alignAlert(Alert.show("User Updated Successfully.","Message !",Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
					}
					FnClear();
				}
//				if(Ds_Objects.currentTarget.description.toString() == "Delete_CUSTOM")
//				{
//					alignAlert(Alert.show("Deleted Successfully.","Message !",Alert.OK, 
//						null, null, iconTickLarge, Alert.OK),10,"");
//					FnClear();
//				}
				if (Ds_Objects.currentTarget.description.toString() == "Search_CUSTOM")
				{
					ClientName=Ds_Objects.result.Tables.Table.Rows[0].ClientName;
					Ddl_Client1.text=ClientName;
					//ClientName=ClientName;
					ClientId=Ds_Objects.result.Tables.Table.Rows[0].data;
					Ddl_Title.selectedItem=Ds_Objects.result.Tables.Table.Rows[0].Title;
					txt_FirstName.text=Ds_Objects.result.Tables.Table.Rows[0].FirstName;
					txt_LastName.text=Ds_Objects.result.Tables.Table.Rows[0].LastName;
					txt_Mobile.text=Ds_Objects.result.Tables.Table.Rows[0].Mobile;
					txt_Email.text=Ds_Objects.result.Tables.Table.Rows[0].Email;
					Activation.selected=Ds_Objects.result.Tables.Table.Rows[0].Active;
					Id=Ds_Objects.result.Tables.Table.Rows[0].Id;
//					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
//					{
//						Grd_User._setGridSrc=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
//					}
					AddMode=false;
				}
				if (Ds_Objects.currentTarget.description.toString() == "Delete_CUSTOM")
				{	
					alignAlert(Alert.show("User Deleted Successfully.","Message !",Alert.OK, null, FunCall,iconTickLarge, Alert.OK),10,'');
					FnClear();	
				}	
			}
			public function FnValidation_BeforeSearch():String
			{
				ErrStr="";
				var Flag:Boolean=true;
				if((Ddl_Client2.selectedIndex == -1) && ( Ddl_Filter.selectedIndex == -1))
				{
					if(Flag==true)
					{
						Ddl_Client2.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* Please Choose any 1 Filter Option.\n";
				}
				return ErrStr;
			}
			public function FnSearch():void
			{
				FnClear();
				ErrStr="";
				var Str:String=FnValidation_BeforeSearch();
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>"; 
				
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				}
				else
				{
					var Load:Array =new Array();
					Load[0]=GlobalXml; Load[1]=ClientId; Load[2]=0;  Load[3]= ClientId;
					Load[4]=Ddl_Filter.selectedItem; // Load[5]=PropertyId; Load[6]=UserId;
					useWeb("AddUser","Search_CUSTOM1",[GlobalXml,ClientId,Ddl_Filter.selectedItem,UserId]);
				}
			}
			private function validation():String
			{
				var TxtFlag:Boolean=true;var ErrStr:String="";				
				if(txt_Email.text!="")
				{
					EmailValidator.validate(txt_Email.text);
				}
				//if(Ddl_Client1.selectedIndex == -1)
				if(ClientName =="")
				{
					if(TxtFlag=true)
					{
						Ddl_Client1.setFocus();
						TxtFlag=false;
					}
					ErrStr=ErrStr+" *   Client Name is Required \n";
				}
//				if(Ddl_Title.selectedIndex == -1)
//				{
//					if(TxtFlag=true)
//					{
//						Ddl_Title.setFocus();
//						TxtFlag=false;
//					}
//					ErrStr=ErrStr+" *   Title is Required \n";
//				}
				if(txt_FirstName.text=="")
				{
					if(TxtFlag=true)
					{
						txt_FirstName.setFocus();
						TxtFlag=false;
					}
					ErrStr=ErrStr +" *   First Name is Required \n";
				}
				if(txt_LastName.text=="")
				{
					if(TxtFlag=true)
					{
						txt_LastName.setFocus();
						TxtFlag=false;
					}
					ErrStr=ErrStr +" *   Last Name is Required \n";
				}
				if(txt_Mobile.text == "")
				{
					if(TxtFlag=true)
					{
						txt_Mobile.setFocus();
						TxtFlag=false;
					}
					ErrStr=ErrStr +" *  Mobile is Required \n";
				}
				if(txt_Email.text == "")
				{
					if(TxtFlag=true)
					{
						txt_Email.setFocus();
						TxtFlag=false;
					}
					ErrStr=ErrStr +" *  Email is Required \n";
				}
//				if(txt_Password.text == "")
//				{
//					if(TxtFlag=true)
//					{
//						txt_Password.setFocus();
//						TxtFlag=false;
//					}
//					ErrStr=ErrStr +" *  Password is Required \n";
//				}
				return ErrStr;
			}
			protected function txt_Email_focusOutHandler(event:FocusEvent):void
			{
				if(txt_Email.text != "")
				{
					EmailValidator.validate(txt_Email.text);
				}
				else
				{
					txt_Email.errorString = "";
				}
				
				//txt_Email.setFocus();
			}
			protected function txt_Email_changeHandler(event:TextOperationEvent):void
			{
				if(txt_Email.text != "")
				{
					txt_Email.errorString = "";
				}
			}
			protected function EmailValidator_validHandler(event:ValidationResultEvent):void
			{
				Str_Email = "";
			}
			
			protected function EmailValidator_invalidHandler(event:ValidationResultEvent):void
			{
				txt_Email.errorString = event.message;
			}
			protected function txt_Mobile_changeHandler(event:TextOperationEvent):void
			{
				if(txt_Mobile.text != "")
				{
					txt_Mobile.errorString = "";
				}
			}
			protected function txt_Mobile_focusOutHandler():void
			{
				if(txt_Mobile.text != "")
				{
					if(txt_Mobile.text.length < 10)
					{
						txt_Mobile.errorString = "Mobile Number Must be 10 digits.";
					}
					if(txt_Mobile.text.length == 10)
					{
						var Str:String = txt_Mobile.text;
						
						var Str1:String = Str.substr(0, 1);
						
						if((Str1 != "9") && (Str1 != "8") && (Str1 != "7"))
						{
							txt_Mobile.errorString = "Mobile Number Starts With 9 or 8 or 7";
						}
						ErrStr=ErrStr+" * Invalid Mobile Number";
					}
				}
			}
			public function Ddl_Client_changeHandler1():void
			{
				if(Ddl_Client1.selected())
				{
				ClientName=Ddl_Client1.Select_Row.Client;
				ClientId=Ddl_Client1.Select_Row.Id;
				Ddl_Client1.text=ClientName;
				}
				else
				{
					ClientId=0;
					ClientName="";
					Ddl_Client1.text="";
				}
			}	
			public function Ddl_Client_changeHandler2():void
			{
			//	ClientName=Ddl_Client2.selectedItem.label;
			//	ClientId=Ddl_Client2.selectedItem.data;
			}
			protected function Save():void
			{ 
				ErrStr=validation();
				Ddl_Client1.setFocus();
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
					
				} 
				else
				{
					var Ac:ArrayCollection=new ArrayCollection
						([{
							Id:Id,
							ClientId:ClientId,
							Title:Ddl_Title.selectedItem,
							FirstName:txt_FirstName.text,
							LastName:txt_LastName.text,
							Mobile:txt_Mobile.text,
							Email:txt_Email.text,
							//Password:txt_Password.text,
							Activation:Activation.selected
							
						}]);
					var HdrXml:String="";
					HdrXml += "<ROOT>";
					HdrXml += ObjToXmlStr_Comm(Ac,"HdrXml")
					HdrXml += "</ROOT>";
					useWeb("AddUser","Save_CUSTOM",[GlobalXml,HdrXml]);
				}
			}
			protected function Search():void
			{
				PopUpManager.addPopUp( SearchPopUp , this, true);
				SearchPopUp.Prc_name="AddUser";
				var SearchParam:Array =new Array();
				SearchPopUp.HlpIndex="SEARCH";
				SearchParam[0]=GlobalXml;
				SearchParam[1]=0;
				SearchParam[2]=ClientId;
				SearchPopUp.Prc_Param=SearchParam;
				SearchPopUp.HlpSrchGlobal="";
				SearchPopUp.dataPanel.focusEnabled=true;
				SearchPopUp.Pageint();					
				SearchPopUp.addEventListener("PopupEnter",funpopupEnter);
				SearchPopUp.addEventListener("PopupClose",funpopupClose);
				PopUpManager.centerPopUp(SearchPopUp);				
			}
			
			private function funpopupClose(event:Event):void
			{
				
			}
			
			private function funpopupEnter(event:Event):void
			{				
				Searchhb(SearchPopUp.SelectRow.Id,0);		
			}
			private function Searchhb(Id:int,_PrdFk:int):void
			{
				var Load:Array = new Array(); 
				Load[0] = GlobalXml; Load[1] = Id; Load[2]=ClientId;
				useWeb("AddUser","Search_CUSTOM",Load);
			}
			protected function Delete():void
			{
				if(Id == 0)
				{
					alignAlert(Alert.show("This is an Invalid Process.","Alert Message !",Alert.OK, 
						null, null,iconWarning, Alert.OK),10,'');					
					return;
				}	
				alignAlert(Alert.show("Do you want to delete this item?", "Warning",Alert.YES | Alert.NO, null,
					removeDgridItem, iconWarning, Alert.NO),10,"");		
			}
			private function removeDgridItem(event:CloseEvent):void 
			{	
				if (event.detail==Alert.YES) 
				{	
					var Load:Array = new Array();
					Load[0]= GlobalXml; Load[1]= Id;  
					useWeb("AddUser","Delete_CUSTOM",Load);
				}
			}
			public function FunCall(event:CloseEvent):void
			{
				if (event.detail == Alert.OK) 
				{	
					//txt_title.setFocus();
					txt_FirstName.setFocus();
				}
			}
			protected function FnClear():void
			{
				txt_FirstName.text="";
				txt_LastName.text="";
				txt_Mobile.text="";
				txt_Email.text="";
				//txt_Password.text="";
				Grd_User._clear();
				Ddl_Title.selectedItem="Select Title";
				Ddl_Client1.text="";
				//Ddl_Client2.dataProvider=null;
				PageLoad();
				ClientName="";
				ClientId=0;
				Id=0;
				Activation.selected=false;
				//txt_FirstName.setFocus();
				Ddl_Client1.setFocus(); 
			}
		]]>
		
	</fx:Script>
	<fx:Declarations>
		<s:Power id="powerEasing"
				 exponent="4"/>
		<s:Move  id="User" target="{UserAdd}" xTo="50"   easer="{powerEasing}"
				 duration="1000" />
	</fx:Declarations>
	<s:BorderContainer x="0" y="0" width="100%" height="504" depth="50" backgroundColor="#fbf9f9" borderVisible="false">
		<s:BorderContainer x="297" y="31" width="408" height="459" borderVisible="true" cornerRadius="5" id="UserAdd">
			<s:Label x="50" y="69" text="Client Name"/>
			<s:Label x="50" y="111" text="Title"/>
			<s:Label x="50" y="164" text="First Name"/>
			<s:Label x="50" y="222" text="Last Name"/>
			<s:Label x="50" y="276" text="Mobile"/>
			<s:Label x="50" y="331" text="Email"/>
			<s:Label x="50" y="384" text="Password"/>
			<s:Label x="131" y="65" text="*" color="red"/>
			<s:Label x="93" y="330" text="*" color="red"/>
			<s:Label x="97" y="276" text="*" color="red"/>
			<s:Label x="118" y="223" text="*" color="red"/>
			<s:Label x="117" y="162" text="*" color="red"/>
			<s:DropDownList id="Ddl_Title" x="170" y="107" width="161" prompt="Select Title" tabIndex="2">
				<s:ArrayList>
					<fx:String>Mr</fx:String>
					<fx:String>Mrs</fx:String>
				</s:ArrayList>
			</s:DropDownList>
			<s:TextInput id="txt_FirstName" x="170" y="161" width="161" prompt="First Name" tabIndex="3" maxChars="50"/>
			<s:TextInput id="txt_LastName" x="170" y="214" width="161" prompt="Last Name" tabIndex="4" maxChars="50"/>
			<s:TextInput id="txt_Mobile" x="170" y="268" width="161" prompt="Mobile" restrict="0-9" tabIndex="5"
						 focusOut="txt_Mobile_focusOutHandler()" change="txt_Mobile_changeHandler(event)"
						 maxChars="10"/>
			<s:TextInput id="txt_Email" x="170" y="322.5" width="161" height="20" prompt="Email"
						 change="txt_Email_changeHandler(event)"
						 focusOut="txt_Email_focusOutHandler(event)" tabIndex="6" maxChars="50"/>
			
			<!--s:DropDownList id="Ddl_Client1" x="170" y="60" width="161" prompt="Select Client" tabIndex="1"
							change="Ddl_Client_changeHandler1()"></s:DropDownList-->
			
			<s:Label x="50" y="431" width="58" height="13" text="Activation"/>
			<s:CheckBox id="Activation" x="172" y="426" selected="false" tabIndex="7"/>
			<s:Label x="170" y="379" text="Password will be generated by the"/>
			<s:Label x="170" y="400" text="System"/>
			<WrbHelpComp:HelpText id="Ddl_Client1" x="170" y="60" width="161" pxSetPrompt="Select Client" pxTabIndex="1"
								  onselection="{Ddl_Client_changeHandler1()}" pxSetColumnsWidth="161,0" depth="100">
			</WrbHelpComp:HelpText>
		</s:BorderContainer>
		<s:Label x="469" y="60" text="FilterBy" visible="false"/>
		
		<WrbComp:ProDGrid1 id="Grd_User" x="530" y="110" width="303" height="265"
						   _borderVisible="true"
						   _ColDataField="FirstName~Email~Mobile~Id"
						   _ColHdrText="First Name~Email~Mobile~Id"
						   _ColType="txt~txt~ntxt~txt"
						   _colVisible="1~1~1~0"
						   _ColWidth="100~100~100~0" 
						   _editable="1~1~1~0"
						   _required="1~1~1~0" 
						   _spltChar="~"
						   _DuplChk="false"
						   _visibleColNos="3" visible="false" >
		</WrbComp:ProDGrid1>
		
		
		<s:DropDownList id="Ddl_Filter" x="762" y="53" width="145" prompt="Select Filter Option" visible="false">
			<s:ArrayList>
				<fx:String>Active</fx:String>
				<fx:String>InActive</fx:String>
				<fx:String>All</fx:String>
			</s:ArrayList>
		</s:DropDownList>
		
		<s:DropDownList id="Ddl_Client2" x="546" y="53" width="176" prompt="Select Client"
						change="Ddl_Client_changeHandler2()" visible="false"></s:DropDownList>
		
		<s:Label x="23" y="27" text="Add User" color="red"/>
		<s:Button x="529" y="196" height="38" label="Add New User" click="User.play()" visible="false"/>
		<s:Button x="841" y="110" label="Search" click="FnSearch()" visible="false"/>
	</s:BorderContainer>
	<s:HGroup x="5" y="512" width="100%" height="40" horizontalAlign="center" verticalAlign="middle"
			  depth="0">
		<WrbComp:SaveControl docClear="FnClear()" docRefresh="PageLoad()" docSave="Save()" doSearch="Search()"
							 docDelete="Delete()">
		</WrbComp:SaveControl>
	</s:HGroup>
</s:Application>
