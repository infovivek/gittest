<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:Controls="fx.com.adobe.Controls.*"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   xmlns:WrbComp="WrbComp.*"
			   xmlns:ns1="*"
			   width="100%" height="100%" creationComplete="PageLoad()"
			   pageTitle="Assign Pricing Model">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script source = "..\\Common\\CommonScript.as"/>
	<fx:Script source = "..\\Common\\Functions.as"/>
	<fx:Style source="..\\Common\\ApplicationCSS.css"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import WrbHelpComp.HlpGridHdr;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.graphics.codec.PNGEncoder;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public static var Global_AC:ArrayCollection = new ArrayCollection();
			public static var GlobalXml:String = "",TypeServiceId:int=0,ErrStr:String="";
			public var Id:int=0,ErrMsg:String="",PricingModelId:int=0,PricingModel:String="";
			public var AddMode:Boolean=true,Flag:Boolean=true;
			private var firstTime:Boolean = true;
			protected function PageLoad():void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				FnHelp_Type();
				dt_Date.selectedDate=new Date();
				useWeb("ClientWisePrice","PAGELOAD_CUSTOM",[GlobalXml,"PAGELOAD","",0]);
				//Grd_Client._setValuetoCtrl("dtfDate",event.currentTarget.selectedRow.Date);
			}
			protected function FnHelp_Type():void
			{
				var Tmp:ArrayCollection=new ArrayCollection
					([{Action:GlobalXml,Param1:"CLIENTLOAD",Param2:0,Param3:0,prcName:"ClientWisePrice",
						ctrlName:"hlpClientName",grdWidth:"300,100,100"}]);				
				Grd_Client._bindHlpTextData(Tmp);
				Tmp=new ArrayCollection();
			}
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{
				if (Ds_Objects.currentTarget.description.toString() == "PAGELOAD_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						drp_PricingModel.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "LASTCLIENT_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Client._setGridSrc=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					if (AddMode == true)
					{
						alignAlert(Alert.show("Saved Successfully.","Message !",Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
					}
					else
					{
						alignAlert(Alert.show("Updated Successfully.","Message !",Alert.OK, null, null, iconTickLarge, Alert.OK),10,"");
					}
					FnClear();
				}
				if (Ds_Objects.currentTarget.description.toString() == "Delete_NEWCUSTOM")
				{	
					alignAlert(Alert.show("Deleted Successfully",null,Alert.OK, null, null,iconTickLarge, Alert.OK),10,"");
					//FnClear();	
				}	
				
			}
			protected function FnValidation():String
			{
				var TxtFlag:Boolean=true;ErrStr="";
				var Flag:Boolean=true;
				//if(hlp_Property.text=="")
				if(PricingModelId==0)
				{
					if(TxtFlag=true)
					{
						drp_PricingModel.setFocus();
						TxtFlag=false;
					}
					ErrStr=ErrStr+" *   Pricing Model Name is Required \n";
				}
				if((Grd_Client._getGridSrc==null)||((Grd_Client._getGridSrc.length==0)))
				{
					if(Flag==true)
					{
						Flag=false;
					}
					ErrStr=ErrStr+"*   Client's are Required.\n";
				}
				return ErrStr;
			}	
			protected function FnSave():void
			{
				ErrStr="";
				ErrMsg = ""; Flag = true; 
				
				var Str:String=FnValidation();
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				else
				{
					var arrcopy:ArrayCollection = new ArrayCollection
						([{ 
							Id:PricingModelId
						}])
					
					var HdrXml:String=""
					HdrXml += "<ROOT>";	
					HdrXml += ObjToXmlStr_Comm(arrcopy,"Price") 
					HdrXml += "</ROOT>";
					
					var HdrXml1:String="";
					HdrXml1 += "<ROOT>";
					HdrXml1 += ObjToXmlStr_Comm(Grd_Client._getGridSrc,"HdrXml")
					HdrXml1 += "</ROOT>";
					useWeb("ClientWisePrice","Save_CUSTOM",[GlobalXml,HdrXml,HdrXml1]);
				}
			}
			protected function FnClear():void
			{
				drp_PricingModel.selectedIndex=-1;
				PricingModelId=0
				PricingModel="";
				Grd_Client._clear();
				PageLoad();
				txt_Filter.text="";
			}
			protected function PriceLoad():void
			{
				PricingModelId=drp_PricingModel.selectedItem.data;
				PricingModel=drp_PricingModel.selectedItem.label;
				Grd_Client._clear();
				useWeb("ClientWisePrice","LASTCLIENT_CUSTOM",[GlobalXml,"LASTCLIENT","",PricingModelId]);
			}
//			public function Custom_Grid_Enter(arrObj:Object, GridMode:Boolean, Index:int):String
//			{
//				var Date:String=dt_Date.text;
//				try{
//				var Str:String="";
//				arrObj.Date=Date;
//				if(arrObj.Date =="")
//					{
//						Str="* Effective from Date is Required.\n";
//						return Str;
//					}
//					//return Str;
////					if(Str !="")
////					{
////						alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
////						return Str;
////					} 
//					Grd_Client._setValuetoCtrl("dtfDate",Date);
//				}
//				catch(Exception)
//				{}
//				//var Date:String=dt_Date.text;
//				
//				return null;
//			}
			public function Custom_Grid_Delete(index:int,arrGrid:ArrayCollection,GrdId:String):void
			{              
				if(arrGrid[index].Id!="")
				{												
					useWeb("ClientWisePrice","Delete_NEWCUSTOM",[GlobalXml,"CLIENTDELETE","",arrGrid[index].Id]);
				}
			}
			public function getHlpData(event:Event):void
			{
				var FromDate:String=event.currentTarget.selectedRow.DateId;
				if(event.currentTarget.ID == "hlpClientName")
				{	
					Grd_Client._setValuetoCtrl("hlpClientName",event.currentTarget.selectedRow.ClientName);
					Grd_Client._setValuetoCtrl("txtClientId",event.currentTarget.selectedRow.ClientId); 
					Grd_Client._setValuetoCtrl("dtFromDate",FromDate);
					//Grd_Client._setValuetoCtrl("txtId",event.currentTarget.selectedRow.Id);
					var Pettyidhlp=(event.currentTarget.selectedRow.ClientId);
					//Grd_Client._setFocus(8);
					Grd_Client._setFocusFlag(false);	
					//event.currentTarget.selectedRow = null;
				}
			}
			public function Custom_Grid_Tab(event:Object,arrObj:Object, GridMode:Boolean, Index:int):String
			{
				if(arrObj.FromDate=="")
				{
					alignAlert(Alert.show(ErrStr,"Effective from Date is Required!",Alert.OK,
						this,null,iconErrLarge),10,"");
				}
				else
				{
					var ToDate:String='';
					var sdfs:String=arrObj.FromDate;						
					var D:String=sdfs.substr(0,2);
					var M:String=sdfs.substr(3,2);
					var Y:String=sdfs.substr(6,10);
					var RangeStart:String=String(String(Number(D)-1)+'/'+M+'/'+(Number(Y)+1));
					ToDate=RangeStart;
					Grd_Client._setValuetoCtrl("dtToDate",ToDate);
				}
				return '';
			}
			protected function clearMyTextInput1():void
			{
				if (firstTime == true )
				{
					txt_Filter.text = "";
					firstTime = false;					
				}		 
			} 
			private function filterMyArrayCollection1(item:Object):Boolean 
			{
				var Itm:Boolean=true;				
				if(txt_Filter.text!="")
				{
					var searchString:String = txt_Filter.text.toLowerCase();
					var itemName:String = (item.ClientName as String).toLowerCase();
					Itm=itemName.indexOf(searchString) > -1;
				}		
				return Itm;		
			}
			public function filter1(Filt:String):void
			{	 
				var tempAC1:ArrayCollection=new ArrayCollection();	
				tempAC1=Grd_Client._getGridSrc as ArrayCollection
				tempAC1.filterFunction = filterMyArrayCollection1;
				tempAC1.refresh();	
			}
		]]>
	</fx:Script>
	<s:VGroup x="0" y="0" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
		<s:BorderContainer x="12" y="19" width="100%" height="500" backgroundColor="#fbf9f9"
						   borderVisible="false">
			<s:Label x="59" y="169" text="Pricing Model"/>
			<s:DropDownList id="drp_PricingModel" x="168" y="160" width="154"
							prompt="Select Pricing Model" change="PriceLoad()"></s:DropDownList>
			<s:TextInput x="439" y="372" width="154" id="txt_Filter"  focusIn="clearMyTextInput1()"
						 change="filter1('ClientName')" maxChars="100"/>
			<WrbComp:ProDGrid1 id="Grd_Client" x="355" y="49" width="500" height="300"
							   _borderVisible="true" _getHlpTxtData="getHlpData(event)"
							   _ColDataField="ClientName~FromDate~ToDate~ClientId~Id"
							   _ColHdrText="ClientName~Bill Start From *~Bill End To *~ClientId~Id"
							   _ColType="hlp~dtf~dtf~txt~txt"
							   _colVisible="1~1~1~0~0"
							   _ColWidth="200~150~150~0~0" 
							   _editable="1~1~1~0~0"
							   _required="1~1~1~0~0" 
							   _spltChar="~" 
							   _DuplChk="true"
							   _visibleColNos="3" >
			</WrbComp:ProDGrid1>
			<s:Button x="363" y="442" label="Save" click="FnSave()"/>
			<s:Button x="489" y="442" label="Clear" click="FnClear()"/>
			<s:Label x="382" y="380" text="Filter"/>
			<s:Label x="19" y="26" text="Assign Pricing Model" color="red"/>
			<mx:DateField id="dt_Date" x="469" y="10" />
			<s:Label x="325" y="156" text="*" color="red"/>
		</s:BorderContainer>
	</s:VGroup>
</s:Application>

