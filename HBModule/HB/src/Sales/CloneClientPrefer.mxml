<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbComp="WrbComp.*"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   xmlns:ns1="*"
			   width="100%" height="100%"
			   creationComplete="PageLoad()"
			   pageTitle="Clone Client Prefered ">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script source = "..\\Common\\CommonScript.as"/>
	<fx:Script source = "..\\Common\\Functions.as"/>
	<fx:Style source="..\\Common\\ApplicationCSS.css"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import flash.net.FileReference;
			
			import flexlib.controls.textClasses.StringBoundaries;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.graphics.codec.PNGEncoder;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			public static var Global_AC:ArrayCollection = new ArrayCollection();
			public static var GlobalXml:String = "";
			public var Id:int=0,ClientId:int=0,ClientName:String="",ClientId2:int=0,ClientName2:String="";
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public var ErrStr:String="",Flag:Boolean=true;
			private var firstTime:Boolean = true;
			
			protected function PageLoad():void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				dt_Date.selectedDate = new Date();
				Grd_Clients.dataProvider=null;
				useWeb("CloneClientPrefer","PAGELOAD_CUSTOM",[GlobalXml,'PAGELOAD',0,0,0]);
				lbl1.visible=false;lbl2.visible=false;lbl3.visible=false;hlp_MasterClient.visible=false;
			} 
			private function Custom_WebSer_Result (Ds_Objects:Object):void				
			{
				if (Ds_Objects.currentTarget.description.toString() == "PAGELOAD_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						hlp_FromClient.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						hlp_MasterClient.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					}
					//					if (Ds_Objects.result.Tables.Table2.Rows.length > 0)
					//					{
					//						Grd_Clients.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
					//					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "CLIENTLOAD_CUSTOM")
				{
					Grd_Clients.dataProvider=null;
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Clients.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
					lbl1.visible=true;lbl2.visible=true;lbl3.visible=true;hlp_MasterClient.visible=true
				}
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					alignAlert(Alert.show("Copied Successfully.","Message !",Alert.OK, 
						null, null, iconTickLarge, Alert.OK),10,"");
					Clear();
				}
				
			}
			private function validation():String 
			{
				ErrStr="";
				var TxtFlag:Boolean=true;
				var TempApart_AC:ArrayCollection=new ArrayCollection();
				var Apartment_AC:ArrayCollection=new ArrayCollection();
				TempApart_AC=new ArrayCollection();
				Apartment_AC=new ArrayCollection();
				Apartment_AC=Grd_Clients.dataProvider as ArrayCollection;
				for(var i:int=0;i<Apartment_AC.length;i++)
				{
					if(Apartment_AC[i].Tick=="1")
					{
						TempApart_AC.addItemAt(Apartment_AC[i],TempApart_AC.length);
					}
				}	
				if((TempApart_AC==null)||(TempApart_AC.length==0))
				{
					ErrStr=ErrStr+"*  To Clients are Required.\n";
				}
				if(hlp_FromClient.text=="")
				{
					if(TxtFlag==true)
					{
						hlp_FromClient.setFocus();
						TxtFlag=false;
					}
					ErrStr=ErrStr+ "*  From Client Name \n";
				}
				return ErrStr;
			}
			protected function Save():void
			{
				ErrStr=validation();
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				else
				{
					var Acc:ArrayCollection=new ArrayCollection
						([{
							FromId:ClientId,
							ToId:ClientId2
						}]);
					var AC:ArrayCollection=new ArrayCollection();
					var AC1:ArrayCollection=new ArrayCollection();
					AC=Grd_Clients.dataProvider as ArrayCollection; 
					for(var i:int=0;i<AC.length;i++)
					{
						if(AC[i].Tick=="1")
						{
							AC1.addItemAt(AC[i],AC1.length);
						}
					}
					var CCP:ArrayCollection= new  ArrayCollection();
					CCP.removeAll();
					CCP=Grd_Clients.dataProvider as ArrayCollection;
					var ServiceXml:String="";
					var HdrXml:String = ObjToXmlStr_Comm(Acc,"HdrXml");
					
					var GridXml:String="";				
					GridXml += "<ROOT>";
					GridXml += ObjToXmlStr_Comm(AC1,"GridXml")
					GridXml += "</ROOT>";
					useWeb("CloneClientPrefer","Save_CUSTOM",[GlobalXml,HdrXml,GridXml]);
				}
			}
			protected function Clear():void
			{
				hlp_FromClient.dataProvider=null;
				hlp_MasterClient.dataProvider=null;
				hlp_FromClient.Select_Row.ClientName="";
				hlp_FromClient.text="";
				ClientId=0;
				ClientId2=0;
				ClientName="";
				ClientName2="";
				hlp_MasterClient.text="";
				MasterClientId=0;
				Grd_Clients.dataProvider=null;
				lbl1.visible=false;lbl2.visible=false;lbl3.visible=false;hlp_MasterClient.visible=false;
				PageLoad();
			}
			public var MasterClientId:int=0,MasterClient:String="";
			private function MasterLoad():void
			{
				if(hlp_MasterClient.selected())
				{
					MasterClient=hlp_MasterClient.Select_Row.MasterClient;
					MasterClientId=hlp_MasterClient.Select_Row.ZId;
					useWeb("CloneClientPrefer","CLIENTLOAD_CUSTOM",[GlobalXml,"FILTER",MasterClientId,ClientId,0]);
				}
				else
				{
					hlp_MasterClient.text="";
					MasterClient="";
					MasterClientId=0;
				}
			}
			private function ClientLoad():void
			{
				if(hlp_FromClient.selected())
				{
					ClientName=hlp_FromClient.Select_Row.ClientName;
					ClientId=hlp_FromClient.Select_Row.ZId;
					hlp_FromClient.text=ClientName;
					useWeb("CloneClientPrefer","CLIENTLOAD_CUSTOM",[GlobalXml,"CLIENTLOAD",0,ClientId,0]);
				}
				else
				{
					hlp_FromClient.text="";
					ClientName="";
					ClientId=0;
				}
			}
			public var Ac:ArrayCollection=new ArrayCollection();
			public function FnChkChange(event:Event):void
			{
				var Ac:ArrayCollection=new ArrayCollection();				
				Ac=Grd_Clients.dataProvider as ArrayCollection;				
				var Index:int=Grd_Clients.selectedIndex;				
				if(Ac[Index].Tick==0)
				{
					Ac[Index].Tick=1;
				}
				else
				{
					Ac[Index].Tick=0;
				}
			}
		]]>
	</fx:Script> 
	
	<s:VGroup x="0" y="0" width="100%" height="100%" gap="5" horizontalAlign="center" verticalAlign="middle">
		<s:HGroup x="6" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
			<s:BorderContainer y="2" width="100%" height="417" backgroundColor="#fbf9f9"
							   borderVisible="false"> 
				<WrbHelpComp:HelpText id="hlp_FromClient" x="178" y="203" width="220" height="20"
									  depth="100" onselection="{ClientLoad()}" pxSetColumnsWidth="220,0"
									  pxTabIndex="1">
				</WrbHelpComp:HelpText>
				
				<WrbHelpComp:HelpText id="hlp_MasterClient" x="557" y="87" width="220" height="20"
									  depth="100" onselection="{MasterLoad()}" pxSetColumnsWidth="220,0"
									  pxTabIndex="1" pxSetPrompt="Select Master Client" visible="false">
				</WrbHelpComp:HelpText>
				<s:Button x="343" y="361" label="Copy" click="Save()"/>
				<s:Label x="73" y="211" text="Client From"/>
				<s:Label x="465" y="212" text="Client To"/>
				<s:Label x="37" y="28" text="Clone Client Prefered" color="red"/>
				<s:Button x="459" y="362" label="Clear" click="Clear()"/>
				<mx:DateField x="724" y="36" width="106" id="dt_Date" yearNavigationEnabled="true"
							  formatString="DD/MM/YYYY" selectableRange="{{rangeEnd:new Date()}}" enabled="false"/>
				<mx:DataGrid id="Grd_Clients" x="557" y="137"  verticalAlign="middle" editable="true" 
							 width="277" height="193" tabIndex="4">
					<mx:columns>
						<mx:DataGridColumn dataField="Tick" headerText="Select" width="60"  editable="false">
							<mx:itemRenderer>
								<fx:Component>
									<mx:HBox horizontalAlign="center" verticalAlign="middle">
										<mx:CheckBox selected="{data.Tick}" enabled="true" 
													 change="outerDocument.FnChkChange(event);"/>
									</mx:HBox>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn dataField="RoleName" headerText="" width="250" editable="false" visible="false"/>
						<mx:DataGridColumn dataField="ClientId" headerText="Id" width="250" editable="false" visible="false"/>
						<mx:DataGridColumn dataField="ClientName" headerText="Client Name" width="250" editable="false">	
						</mx:DataGridColumn> 
					</mx:columns>
				</mx:DataGrid>
				<s:Label id="lbl1" x="533" y="90" text="---" visible="false"/>
				<s:Label id="lbl2" x="544" y="91" text=">" visible="false"/>
				<s:Label id="lbl3" x="410" y="91" text="Filter By Master Client" visible="false"/>
			</s:BorderContainer>
		</s:HGroup>
	</s:VGroup>
</s:Application>
