<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:WrbComp="WrbComp.*"
			   width="100%" height="100%" creationComplete="PageLoad()"
			   pageTitle="SearchInvoice  Report">
	<fx:Declarations>
		<s:Animate id="fader"   duration="500"   repeatBehavior="reverse"   repeatCount="0">
			<s:SimpleMotionPath property="alpha" valueFrom="1.0" valueTo="0.0" />
		</s:Animate>
		<s:Animate id="fader1"  duration="0"  repeatBehavior="reverse"  repeatCount="0">
			<s:SimpleMotionPath property="alpha" valueFrom="1.0" valueTo="0.0" />
		</s:Animate>
		<s:RadioButtonGroup id="Modes"  change="CourierChange()"/> 
		<mx:NumberFormatter id="NF_Two" precision="2" rounding="nearest"/>
	</fx:Declarations>
	
	<fx:Script source = "..\\Common\\CommonScript.as"/>
	<fx:Script source = "..\\Common\\Functions.as"/>
	<fx:Style source="..\\Common\\ApplicationCSS.css"/>
	<fx:Script>
		<![CDATA[ 
			public static var Global_AC:ArrayCollection = new ArrayCollection();
			import mx.events.CloseEvent;
			public static var GlobalXml:String = ""; 
			public var ErrorFlag:Boolean=true; 
			public var Id:Number=0; 	public var Str_ChkOut:String="",Str_Serv:String="",Str_Settle:String="";
			public var Str_ChkOut1:String="",Str_Serv1:String="",Str_Settle1:String="",Str_ChkOutTAC:String="",ErrMsg:String="";
			public var InVoiceNo:String="",ChkOutHdrId:int=0,Statuss:String="",BillType:String="",ErrStr:String="",ErrStr1:String="";
			public var AddMode:Boolean=true,Flag:Boolean=true;
			public 	var Type:String="";
			public var Str_Tariff:String="",Str_CServ:String="";
			public var PrintTariffId:int=0,SC:int=0;
			
			protected function PageLoad():void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>";
				useWeb("SearchInvoiceReport","Report_CUSTOM",[GlobalXml,"Pageload",FromDate,ToDate,'','','',0,0,0]);
				//				Str_ChkOut="http://localhost:4171/GuestCheckOutTariff.aspx?";
				//				Str_Serv="http://localhost:4171/GuestCheckOutService.aspx?";
				//				Str_Settle="http://localhost:4171/GuestCheckOutConsolidate.aspx?";
				//				
				//			Str_ChkOut1="http://localhost:4171/ExternalCheckOutTariff.aspx?";
				//			Str_Serv1="http://localhost:4171/GuestCheckOutService1.aspx?";
				//			Str_Settle1="http://localhost:4171/GuestCheckOutConsolidate1.aspx?";
				//	  Str_ChkOutTAC="http://localhost:4171/HBReport/ExternalCheckoutTACMail.aspx?";
				Str_ChkOut1="http://sstage.in/HBReport/ExternalCheckOutTariff.aspx?";
				Str_Serv1="http://sstage.in/HBReport/GuestCheckOutService1.aspx?";
				Str_Settle1="http://sstage.in/HBReport/GuestCheckOutConsolidate1.aspx?";
				
				Str_ChkOut="http://sstage.in/HBReport/GuestCheckOutTariff.aspx?";
				Str_Serv="http://sstage.in/HBReport/GuestCheckOutService.aspx?";
				Str_Settle="http://sstage.in/HBReport/GuestCheckOutConsolidate.aspx?";
				
				
				Str_ChkOutTAC="http://sstage.in/HBReport/ExternalCheckoutTAC.aspx?";
				// Rdlc Print
//				Str_Tariff="http://localhost:6236/CreditNoteTariffBill.aspx?";
//				Str_CServ="http://localhost:6236/CreditNoteServiceBill.aspx?";
				Str_Tariff="http://sstage.in/HBReport/CreditNoteTariffBill.aspx?";
				Str_CServ="http://sstage.in/HBReport/CreditNoteServiceBill.aspx?";
				Modes.selectedValue=0;
				
			}
			private function Custom_WebSer_Result (Ds_Objects:Object):void
			{ 
				//Grd_SearchInvoice.dataProvider= null;
				try
				{
					if (Ds_Objects.currentTarget.description.toString() == "Report_CUSTOM")
					{
						if (Ds_Objects.result.Tables.Table.Rows.length > 0)
						{
							Grd_SearchInvoice.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
						} 
					}
					//					if (Ds_Objects.currentTarget.description.toString() == "ReportBorder_CUSTOM")
					//					{
					//						if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					//						{
					//							Txt_TransID.text=Ds_Objects.result.Tables.Table.Rows[0].TransactionID;
					//							Txt_Date.text=Ds_Objects.result.Tables.Table.Rows[0].DATE;
					//							Txt_Amount.text=Ds_Objects.result.Tables.Table.Rows[0].InvoiceAmount;
					//						} 
					//					}
				}//try end
				catch(Exception)
				{
					
				}
				if (Ds_Objects.currentTarget.description.toString() == "CreditNoteTariff_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Txt_CrdInVoiceNo.text=Ds_Objects.result.Tables.Table.Rows[0].CreditNoteNo;
						
					}
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Txt_ChkInVoiceNo.text=Ds_Objects.result.Tables.Table1.Rows[0].InVoiceNo
						Txt_ChkOutId.text=Ds_Objects.result.Tables.Table1.Rows[0].ChkOutId;
						Txt_PropertyId.text=Ds_Objects.result.Tables.Table1.Rows[0].PropertyId;
					}
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Tariff.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						lbl_LT.text=Ds_Objects.result.Tables.Table3.Rows[0].LuxuryTaxPer
						//lbl_TST.text=Ds_Objects.result.Tables.Table3.Rows[0].ServiceTaxPer
						lbl_Vat.text=Ds_Objects.result.Tables.Table3.Rows[0].VATPer
						lbl_STFB.text=Ds_Objects.result.Tables.Table3.Rows[0].RestaurantSTPer
						SC=Ds_Objects.result.Tables.Table3.Rows[0].ServiceCharge	
					}
					
										
				}
				if (Ds_Objects.currentTarget.description.toString() == "CreditNoteService_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Txt_CrdInVoiceNo.text=Ds_Objects.result.Tables.Table.Rows[0].CreditNoteNo;
						
					}
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Txt_ChkInVoiceNo.text=Ds_Objects.result.Tables.Table1.Rows[0].InVoiceNo
						Txt_ChkOutId.text=Ds_Objects.result.Tables.Table1.Rows[0].ChkOutId;
						Txt_PropertyId.text=Ds_Objects.result.Tables.Table1.Rows[0].PropertyId;
					}
					
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Service.dataProvider=Ds_Objects.result.Tables.Table2.Rows as ArrayCollection;
					}
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						lbl_LT.text=Ds_Objects.result.Tables.Table3.Rows[0].LuxuryTaxPer
						//lbl_TST.text=Ds_Objects.result.Tables.Table3.Rows[0].ServiceTaxPer
						lbl_Vat.text=Ds_Objects.result.Tables.Table3.Rows[0].VATPer
						lbl_STFB.text=Ds_Objects.result.Tables.Table3.Rows[0].RestaurantSTPer
						SC=Ds_Objects.result.Tables.Table3.Rows[0].ServiceCharge
					}
					
					
					
				}
				
				if (Ds_Objects.currentTarget.description.toString() == "Save_CUSTOM")
				{
					Type=Ds_Objects.result.Tables.Table.Rows[0].Type
					if(Type=="Tariff")
					{
						PrintTariffId=0
						if (Ds_Objects.result.Tables.Table.Rows.length > 0)
						{
							PrintTariffId=Ds_Objects.result.Tables.Table.Rows[0].Id;
							ExternalInterface.call("changeDocumentTitle",Str_Tariff+PrintTariffId);
						}
						else
						{
							alignAlert(Alert.show("CreditNote Added Successfully.","Message !",Alert.OK,
								null, null,	iconTickLarge, Alert.OK),10,"");
						}
					}
					else if(Type=="Service")
					{
						PrintTariffId=0
						if (Ds_Objects.result.Tables.Table.Rows.length > 0)
						{
							PrintTariffId=Ds_Objects.result.Tables.Table.Rows[0].Id;
							ExternalInterface.call("changeDocumentTitle",Str_CServ+PrintTariffId);
						}
						else
						{
							alignAlert(Alert.show("CreditNote Added Successfully.","Message !",Alert.OK,
								null, null,	iconTickLarge, Alert.OK),10,"");
						}
					}
					else if(Type=="Exists")
					{
						alignAlert(Alert.show("CreditNote is Already Submitted For this InVoice .","Message !",Alert.OK,
							null, null,	iconWarning, Alert.OK),10,"");
					}
					
					ClearTariff()
				}
			}
			
			public var 	FromDate:String="",ToDate:String="",ChkoutId:String="",Status:String="";
			public function Clear():void
			{
				DT_From.text="";DT_To.text="";txtInvoiceNumbr.text=""; 	 
				//	Txt_TransID.text="";Txt_Date.text="";Txt_TransID.text="";
				FromDate="";ToDate="";ChkoutId="";Status="";Type="";InvoiceNum="";
				PageLoad();Internal.selected=true;External.selected=false;TAC.selected=false;
				Change("Lbl_TDT");Changes("Lbl_FDT");txtGuestName.text="";
			}  
			public var InvoiceNum:String="";
			protected function btn_Search_clickHandler():void
			{
				// TODO Auto-generated method stub
				ErrorFlag=true; 
				//				if(DT_From.text=="")
				//				{
				//					fader.target=Lbl_FDT;				
				//					fader.play();
				//					Lbl_FDT.setStyle("color","red");
				//					ErrorFlag=false;
				//				}
				//				if(DT_To.text=="")
				//				{
				//					fader.target=Lbl_TDT;				
				//					fader.play();
				//					Lbl_TDT.setStyle("color","red");
				//					ErrorFlag=false;
				//				}
				if(Modes.selectedValue==0)
				{
					Type="Internal Property"; 
				}
				else if(Modes.selectedValue==1)
				{
					Type="External Property"; 
				}
				else if(Modes.selectedValue==2)
				{
					Type="TAC"; 
				}
				else
				{
					alignAlert(Alert.show("Select Status","Alert Message !",
						Alert.OK,null,null,iconWarning,Alert.OK),10,"");
					return;
				}
				
				if(DT_From.text !='')
				{
					if(DT_To.text =='')
					{
						alignAlert(Alert.show("Select Valid From and ToDate","Alert Message !",
							Alert.OK,null,null,iconWarning,Alert.OK),10,"");
						return;
					}
				}
				if(DT_To.text !='')
				{
					if(DT_From.text =='')
					{
						alignAlert(Alert.show("Select Valid From and ToDate","Alert Message !",
							Alert.OK,null,null,iconWarning,Alert.OK),10,"");
						return;
					}
				}
				if(ErrorFlag==true)
				{			
					FromDate=DT_From.text;
					ToDate=DT_To.text;
					InvoiceNum=txtInvoiceNumbr.text; 
					if (Status==null)
					{
						Status='';
					}
					//useWeb("Reconcile","Report_CUSTOM",[GlobalXml,"Report",FromDate,ToDate,TransactionId,Status,0,0,'','']);	
					useWeb("SearchInvoiceReport","Report_CUSTOM",[GlobalXml,"Pageload",FromDate,ToDate,Type,InvoiceNum,'',0,0,0]);
				} 
			}
			public var Ac1:ArrayCollection=new ArrayCollection();
			
			public function change()
			{
				Ac1=Grd_SearchInvoice.dataProvider as  ArrayCollection;				
				var Index:int=Grd_SearchInvoice.selectedIndex;
				var Flag:Boolean=true;
				
				var Flag:Boolean=true;
				var i:int=Ac1.length-1;
				for( i ;i>=0;i--)
				{
					if(Ac1[i].selectRadio ==0)
					{  
						Ac1[i].selectRadio=false;
					} 	
					if(Ac1[i].selectRadio==true)
					{
						Ac1[i].selectRadio=false;
					}
				}	
				var Index:int=Grd_SearchInvoice.selectedIndex;
				if(Ac1[Index].selectRadio==false)
				{
					Ac1[Index].selectRadio=true;
				}
				if(Ac1[Index].selectRadio==0)
				{
					//	Ac[Index].Bankchecks=true;
				}
			}
			public function FnAction(Event):void
			{  
				FromDate="";ToDate="";
				//brd_Popup_reset.visible=true; 
				
				var BillType:String=""; var PropertyCat:String="";
				BillType=Grd_SearchInvoice.selectedItem.BillType;
				change();
				ChkoutId=Grd_SearchInvoice.selectedItem.ChkoutId;
				PropertyCat=Grd_SearchInvoice.selectedItem.PropertyCat;
				if(PropertyCat=="Internal Property")
				{
					if(BillType == "Tariff")
					{
						ExternalInterface.call("changeDocumentTitle",Str_ChkOut+ChkoutId);
					}
					if(BillType == "Service")
					{
						ExternalInterface.call("changeDocumentTitle",Str_Serv+ChkoutId);
					}
					if(BillType == "Consolidate")
					{
						ExternalInterface.call("changeDocumentTitle",Str_Settle+ChkoutId);
					} 
					if(BillType == "Consolidated")
					{
						ExternalInterface.call("changeDocumentTitle",Str_Settle+ChkoutId);
					} 
				}
				if(PropertyCat=="External Property")
				{
					if(BillType == "Tariff")
					{
						ExternalInterface.call("changeDocumentTitle",Str_ChkOut1+ChkoutId+'?'+PropertyCat);
					}
					if(BillType == "Service")
					{
						ExternalInterface.call("changeDocumentTitle",Str_Serv1+ChkoutId+'?'+PropertyCat);
					}
					if(BillType == "Consolidate")
					{
						ExternalInterface.call("changeDocumentTitle",Str_Settle1+ChkoutId+'?'+PropertyCat);
					}
					if(BillType == "Consolidated")
					{
						ExternalInterface.call("changeDocumentTitle",Str_Settle1+ChkoutId+'?'+PropertyCat);
					}
				}
				if(PropertyCat=="TAC")
				{
					if(BillType == "Tariff")
					{
						ExternalInterface.call("changeDocumentTitle",Str_ChkOutTAC+ChkoutId);
					}	
				}
			} 
			
			protected function CourierChange()
			{
				// TODO Auto-generated method stub
				
				FromDate=DT_From.text;
				ToDate=DT_To.text;
				if(Modes.selectedValue==0)
				{
					Type="Internal Property";
					txtGuestName.text="";txtInvoiceNumbr.text=""; txtProperty.text="";
					useWeb("SearchInvoiceReport","Report_CUSTOM",[GlobalXml,"Pageload",FromDate,ToDate,Type,'','',0,0,0]);
				}
				if(Modes.selectedValue==1)
				{
					Type="External Property";
					txtGuestName.text="";txtInvoiceNumbr.text=""; txtProperty.text="";
						useWeb("SearchInvoiceReport","Report_CUSTOM",[GlobalXml,"Pageload",FromDate,ToDate,Type,'','',0,0,0]);
				}
				if(Modes.selectedValue==2)
				{
					Type="TAC";
					txtGuestName.text="";txtInvoiceNumbr.text=""; txtProperty.text="";
						useWeb("SearchInvoiceReport","Report_CUSTOM",[GlobalXml,"Pageload",FromDate,ToDate,Type,'','',0,0,0]);
				}
			}
			public var FltNm:String="";
			public var myArrayCollection:ArrayCollection=new ArrayCollection();
			private function filter(Filt:String):void
			{				
				FltNm=Filt;				
				var tempAC:ArrayCollection=new ArrayCollection();	
				//tempAC=myArrayCollection
				tempAC=Grd_SearchInvoice.dataProvider as ArrayCollection;
				tempAC.filterFunction = filterMyArrayCollections;
				tempAC.refresh();				
			}	
			private function filterMyArrayCollections(item:Object):Boolean 
			{
				txtGuestName.text="";
				txtProperty.text="";
				var Itm:Boolean=true;				
				if(txtInvoiceNumbr.text!="")
				{
					var searchString:String = txtInvoiceNumbr.text.toLowerCase();
					var itemName:String = (item.InvoiceNumber as String).toLowerCase();
					Itm=itemName.indexOf(searchString) > -1;
				}				
				return Itm;		
			}
			public var FltPrpty:String="";
			public function filterss(Filts:String):void
			{				
				FltPrpty=Filts;				
				var tempAC:ArrayCollection=new ArrayCollection();	
				//tempAC=myArrayCollection
				tempAC=Grd_SearchInvoice.dataProvider as ArrayCollection;
				tempAC.filterFunction = filterMyArrayCollectionss;
				tempAC.refresh();				
			}	
			private function filterMyArrayCollectionss(item:Object):Boolean 
			{
				txtGuestName.text="";
				txtInvoiceNumbr.text="";
				var Itm:Boolean=true;				
				if(txtProperty.text!="")
				{
					var searchString:String = txtProperty.text.toLowerCase();
					var itemName:String = (item.Property as String).toLowerCase();
					Itm=itemName.indexOf(searchString) > -1;
				}				
				return Itm;		
			}
			public function Change(LabelName:String):void
			{
				
				fader1.target=this[LabelName];				
				fader1.play();					
				this[LabelName].setStyle("color","#565454");
				if(DT_From.selectedDate)
				{
					var asd:String = DT_From.text;										
					var Y:String = asd.substr(6,10);
					var M:String = asd.substr(3,2);
					var D:String = asd.substr(0,2);
					var RangeStart:String = Y+'/'+M+'/'+D;
					DT_To.selectableRange = {rangeStart:new Date(RangeStart)};
					DT_To.selectedDate = new Date(RangeStart);
					
					DT_To.selectableRange = {rangeStart:new Date(RangeStart)};
					DT_To.selectedDate = new Date(RangeStart);
					DT_To.setFocus();
				}
				
				//				if(DT_To.selectedDate)
				//				{ 
				//				 	 DT_To.text=""; 
				//					 DT_To.text=DT_To.text ;
				//				}
			}
			public function Changes(LabelName:String):void
			{
				
				fader1.target=this[LabelName];				
				fader1.play();					
				this[LabelName].setStyle("color","#565454");
				if((DT_To.selectedDate==DT_From.selectedDate)&&(DT_To.text=="")&&(DT_From.text==""))
				{ 
					DT_To.text=="";
				}
			}
			
			
			public var FltNmg:String="";
		//	public var filterMyArrayCollectionsg:ArrayCollection=new ArrayCollection();
			private function filterg(Filtg:String):void
			{				
				FltNmg=Filtg;				
				var tempAC:ArrayCollection=new ArrayCollection();	
				//tempAC=myArrayCollection
				tempAC=Grd_SearchInvoice.dataProvider as ArrayCollection;
				tempAC.filterFunction = filterMyArrayCollectionsg;
				tempAC.refresh();				
			}	
			private function filterMyArrayCollectionsg(item:Object):Boolean 
			{
				txtInvoiceNumbr.text="";
				txtProperty.text="";
				var Itm:Boolean=true;				
				if(txtGuestName.text!="")
				{
					var searchString:String = txtGuestName.text.toLowerCase();
					var itemName:String = (item.GuestName as String).toLowerCase();
					Itm=itemName.indexOf(searchString) > -1;
				}				
				return Itm;		
			}
			public function CreditNote(Event):void
			{ 
				InVoiceNo=Grd_SearchInvoice.selectedItem.InvoiceNumber;
				ChkOutHdrId=Grd_SearchInvoice.selectedItem.ChkoutId;
				Statuss=Grd_SearchInvoice.selectedItem.Status;
				BillType=Grd_SearchInvoice.selectedItem.BillType;
				
					if(BillType=='Tariff')
					{
	    				brd_CreditNote.visible=true;
						brd_Tariff.visible=true;
						brd_Service.visible=false;
						useWeb("SearchInvoiceReport","CreditNoteTariff_CUSTOM",[GlobalXml,"CreditNoteTariff",InVoiceNo,'','','','',ChkOutHdrId,0,0]);
					}
					else if(BillType=='Service')
					{
						brd_CreditNote.visible=true
						brd_Tariff.visible=false;
						brd_Service.visible=true;
						useWeb("SearchInvoiceReport","CreditNoteService_CUSTOM",[GlobalXml,"CreditNoteService",InVoiceNo,'','','','',ChkOutHdrId,0,0]);
					}
					else 
					{
						alignAlert(Alert.show("Select Tariff or Service InVoice","Alert Message !",
													Alert.OK,null,null,iconWarning,Alert.OK),10,"");
												return;
					}

			}
			protected function FnC_clickHandler(event):void
			{
				brd_CreditNote.visible=false;
				Grd_Tariff.dataProvider=null;Grd_Service.dataProvider=null;
				Txt_ChkInVoiceNo.text="";Txt_ChkOutId.text="";Txt_CrdInVoiceNo.text="";
				Txt_LT.text="";Txt_PropertyId.text="";Txt_SC.text="";
				txt_Service.text="";Txt_ST.text="";Txt_STFB.text="";
				Txt_STotal.text="";txt_TariffDes.text="";Txt_TST.text="";
				Txt_TTotal.text="";Txt_Vat.text="";lbl_LT.text="";lbl_Vat.text="";
			}
			

			protected function FnValidation_BeforeTariffSave():String
			{
				ErrStr="";
				var Flag:Boolean=true;
				if(Txt_ChkInVoiceNo.text=="")
				{
					if(Flag==true)
					{
						Txt_ChkInVoiceNo.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* Check Out InVoice No is Required.\n";
				}
				if(Txt_CrdInVoiceNo.text=="")
				{
					if(Flag==true)
					{
						Txt_CrdInVoiceNo.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* Credit Note No is Required.\n";
				}
				if((Grd_Tariff.dataProvider==null)||(Grd_Tariff.dataProvider.length==0))
				{
					if(Flag==true)
					{
						Grd_Tariff.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* Check Out InVoice No is Required.\n";
				}
				
				if(txt_TariffDes.text=="")
				{
					if(Flag==true)
					{
						txt_TariffDes.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* Description is Required.\n";
				}
				
				return ErrStr;
			}
			protected function btn_TariffSave(event:MouseEvent):void
			{
				ErrStr="";
				ErrMsg = ""; Flag = true; 
				var Str:String=FnValidation_BeforeTariffSave();
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				else
				{
					alignAlert(Alert.show("Do you want to Submit the Credit Note For Tariff?", "Warning",Alert.YES | Alert.NO, null,
						FnTariffSave1, iconWarning, Alert.NO),10,"");
				}
				
			}
			protected function FnTariffSave1(event:CloseEvent):void
			{
				if ((event.detail==Alert.YES)) 
				{
					    	var arrcopy:ArrayCollection = new ArrayCollection
							([{ 
								ChkInVoiceNo:Txt_ChkInVoiceNo.text,
								CrdInVoiceNo:'',
								CreditNoteNo:Txt_CrdInVoiceNo.text,
								LuxuryTax:Txt_LT.text,
								ServiceTax1:Txt_TST.text,
								ServiceTax2:Txt_SC.text,
								TotalAmount:Txt_TTotal.text,
								Description:txt_TariffDes.text,
								ChkOutId:Txt_ChkOutId.text,
								PropertyId:Txt_PropertyId.text,
								Id:Id
							}])
					}
					var StatusGrid:ArrayCollection=new ArrayCollection();
					StatusGrid=Grd_Tariff.dataProvider as ArrayCollection
					var HdrXml:String="";
					HdrXml += "<ROOT>";
					HdrXml += ObjToXmlStr_Comm(StatusGrid,"HdrXml")
					HdrXml += "</ROOT>";
					
					var HdrXml1:String=""
					HdrXml1 += "<ROOT>";	
					HdrXml1 += ObjToXmlStr_Comm(arrcopy,"HdrXml1") 
					HdrXml1 += "</ROOT>";
					useWeb("CreditNoteTariff","Save_CUSTOM",[GlobalXml,HdrXml1,HdrXml]);
			}
			protected function FnValidation_BeforeServiceSave():String
			{
				ErrStr="";
				var Flag:Boolean=true;
				if(Txt_ChkInVoiceNo.text=="")
				{
					if(Flag==true)
					{
						Txt_ChkInVoiceNo.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* Check Out InVoice No is Required.\n";
				}
				if(Txt_CrdInVoiceNo.text=="")
				{
					if(Flag==true)
					{
						Txt_CrdInVoiceNo.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* Credit Note No is Required.\n";
				}
				if((Grd_Service.dataProvider==null)||(Grd_Service.dataProvider.length==0))
				{
					if(Flag==true)
					{
						Grd_Service.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* Check Out InVoice No is Required.\n";
				}
				if(txt_Service.text=="")
				{
					if(Flag==true)
					{
						txt_Service.setFocus();
						Flag=false;
					}
					ErrStr=ErrStr+"* Description is Required.\n";
				}
				return ErrStr;
			}
			protected function btn_ServiceSave(event:MouseEvent):void
			{
				ErrStr="";
				ErrMsg = ""; Flag = true; 
				var Str:String=FnValidation_BeforeServiceSave();
				if(ErrStr !="")
				{
					alignAlert(Alert.show(ErrStr,"Required Fields !",Alert.OK,this,null,iconErrLarge),10,"");
					return;
				} 
				else
				{
					alignAlert(Alert.show("Do you want to Submit the Credit Note For Service?", "Warning",Alert.YES | Alert.NO, null,
						FnServiceSave1, iconWarning, Alert.NO),10,"");
				}
				
			}
			protected function FnServiceSave1(event:CloseEvent):void
			{
				if ((event.detail==Alert.YES)) 
				{
					var arrcopy:ArrayCollection = new ArrayCollection
						([{ 
							ChkInVoiceNo:Txt_ChkInVoiceNo.text,
							CrdInVoiceNo:'',
							CreditNoteNo:Txt_CrdInVoiceNo.text,
							VAT:Txt_Vat.text,
							ServiceTaxFB:Txt_STFB.text,
							ServiceTaxOT:Txt_ST.text,
							Cess:0.00,
							HECess:0.00,
							TotalAmount:Txt_STotal.text,
							Description:txt_Service.text,
							ChkOutId:Txt_ChkOutId.text,
							PropertyId:Txt_PropertyId.text,
							Id:Id
						}])
				}
				var ServiceGrid:ArrayCollection=new ArrayCollection();
				ServiceGrid=Grd_Service.dataProvider as ArrayCollection
				var HdrXml:String="";
				HdrXml += "<ROOT>";
				HdrXml += ObjToXmlStr_Comm(ServiceGrid,"HdrXml")
				HdrXml += "</ROOT>";
				
				var HdrXml1:String=""
				HdrXml1 += "<ROOT>";	
				HdrXml1 += ObjToXmlStr_Comm(arrcopy,"HdrXml1") 
				HdrXml1 += "</ROOT>";
				useWeb("CreditNoteService","Save_CUSTOM",[GlobalXml,HdrXml1,HdrXml]);
			}
			protected function Grd_Ingredients_focusOutHandler(event:FocusEvent):void
			{
				if(SC==0)
				{
					var temp_Val2:String=event.currentTarget.editable;
					if(event.currentTarget.editedItemPosition != null)
					{ 
						
						var Val2:Number =event.currentTarget.selectedItem.TariffAmount
						var Val3:Number =event.currentTarget.selectedItem.NoOfDays						
						event.currentTarget.selectedItem.Total = Val2*Val3;
						var TotAmt:Number=0,Len:Number=0;
						var TempGrids:ArrayCollection = Grd_Tariff.dataProvider as ArrayCollection;
						TotAmt=event.currentTarget.selectedItem.Total
						var LT:Number=Number(lbl_LT.text);
						var ST:Number=Number(lbl_TST.text);
						var STC:Number=Number(lbl_TSC.text);
						var TLT:Number=TotAmt*LT/100
						var TST:Number=TotAmt*7.42/100
						var TSC:Number=	TotAmt*0.00/100
						var LT1:String=NF_Two.format(TLT);
						Txt_LT.text=LT1.replace(",","");
						var ST1:String=NF_Two.format(TST);
						Txt_TST.text=ST1.replace(",","");
						var ST2:String=NF_Two.format(TSC);
						Txt_SC.text=ST2.replace(",","");
						var TA:String=NF_Two.format(TotAmt+TLT+TST+TSC);
						Txt_TTotal.text=TA.replace(",","");
													
					}
				}
				else
				{
					var temp_Val2:String=event.currentTarget.editable;
					if(event.currentTarget.editedItemPosition != null)
					{ 
						
						var Val2:Number =event.currentTarget.selectedItem.TariffAmount
						var Val3:Number =event.currentTarget.selectedItem.NoOfDays						
						event.currentTarget.selectedItem.Total = Val2*Val3;
						var TotAmt:Number=0,Len:Number=0;
						var TempGrids:ArrayCollection = Grd_Tariff.dataProvider as ArrayCollection;
						TotAmt=event.currentTarget.selectedItem.Total
						var LT:Number=Number(lbl_LT.text);
						var ST:Number=Number(lbl_TST.text);
						var STC:Number=Number(lbl_TSC.text);
						var TLT:Number=TotAmt*LT/100
						var TST:Number=TotAmt*ST/100
						var TSC:Number=	TotAmt*2.5/100
						var LT1:String=NF_Two.format(TLT);
						Txt_LT.text=LT1.replace(",","");
						var ST1:String=NF_Two.format(TST);
						Txt_TST.text=ST1.replace(",","");
						var ST2:String=NF_Two.format(TSC*12.36/100);
						Txt_SC.text=ST2.replace(",","");
						var TA:String=NF_Two.format(TotAmt+TLT+TST+TSC);
						Txt_TTotal.text=TA.replace(",","");
						
					}
				}
			}
			protected function Grd_Ingredients_focusOutHandler1(event:FocusEvent):void
			{
				var Tot:Number=0;
				var temp_Val2:String=event.currentTarget.editable;
				if(event.currentTarget.editedItemPosition != null)
				{ 
					var Type:String="";
					Type=event.currentTarget.selectedItem.TypeService;
					if(Type=="Food And Beverages")
					{ 
						var Val2:Number =event.currentTarget.selectedItem.ServiceAmount
						var Val3:Number =event.currentTarget.selectedItem.Quantity						
						
						Tot=(Val2*Val3);
						event.currentTarget.selectedItem.Total = Tot;
						event.currentTarget.selectedItem.Tax =NF_Two.format(Tot*4.94/100);
						var TotAmt:Number=0,Len:Number=0,Tax:Number=0;
						var TempGrids:ArrayCollection = Grd_Service.dataProvider as ArrayCollection;
						for(var i:int=0;i<TempGrids.length;i++)
						{
							TotAmt+=Number(TempGrids[i].Total);
							Tax+=Number(TempGrids[i].Tax);
						}
						var VAT:Number=Number(lbl_Vat.text);
						var VT:Number=TotAmt*VAT/100
						var VT1:String=NF_Two.format(VT);
						Txt_Vat.text=VT1.replace(",","");
						var STF:String=NF_Two.format(Tax);
						Txt_STFB.text=STF.replace(",","");
						var ST1:String=NF_Two.format(0.00);
						Txt_ST.text=ST1.replace(",","");
						var TA:String=NF_Two.format(TotAmt+VT+Tax+0.00);
						Txt_STotal.text=TA.replace(",","");
					}
					else
					{
						var Val2:Number =event.currentTarget.selectedItem.ServiceAmount
						var Val3:Number =event.currentTarget.selectedItem.Quantity						
						Tot=(Val2*Val3);
						event.currentTarget.selectedItem.Total = Tot;
						event.currentTarget.selectedItem.Tax = Tot*12.00/100;
						var TotAmt:Number=0,Len:Number=0,Tax:Number=0;
						var TempGrids:ArrayCollection = Grd_Service.dataProvider as ArrayCollection;
						for(var i:int=0;i<TempGrids.length;i++)
						{
							TotAmt+=Number(TempGrids[i].Total);
							Tax+=Number(TempGrids[i].Tax);
						}
						var VAT:Number=Number(lbl_Vat.text);
						var VT:Number=TotAmt*VAT/100
						var VT1:String=NF_Two.format(VT);
						Txt_Vat.text=VT1.replace(",","");
						var STF:String=NF_Two.format(0.00);
						Txt_STFB.text=STF.replace(",","");
						var ST1:String=NF_Two.format(Tax);
						Txt_ST.text=ST1.replace(",","");
						var TA:String=NF_Two.format(TotAmt+VT+0.00+Tax);
						Txt_STotal.text=TA.replace(",","");
					}
											
				}
				else
				{
					
				}
			}
			protected function ClearTariff():void
			{
					Txt_ChkInVoiceNo.text="";
					Txt_CrdInVoiceNo.text="";
					Txt_LT.text="";
					Txt_TST.text="";
					Txt_TTotal.text="";
					txt_TariffDes.text="";
					Txt_ChkOutId.text="";
					Txt_PropertyId.text="";
					Id:0
					Grd_Tariff.dataProvider=null;
					Grd_Service.dataProvider=null;
					Txt_Vat.text="";lbl_LT.text="";lbl_TST.text="";
					txt_TariffDes.text="";lbl_STFB.text="";
					Txt_STFB.text="";Txt_ST.text="";Txt_STotal.text="";
					txt_Service.text="";lbl_Vat.text="";
					lbl_ST.text="";brd_CreditNote.visible=false;
					
			}
		]]>
	</fx:Script>
	<s:BorderContainer x="0" y="30" width="100%" height="84" borderVisible="false" backgroundColor="#f4efef" depth="10">
		<s:HGroup x="0" y="0" width="100%" height="90" horizontalAlign="center" verticalAlign="middle">
			<s:Group x="132" y="5" width="100%" height="80">
				<mx:Label x="42" y="7" width="64" height="16" text="From Date" id="Lbl_FDT"/>
				<mx:Label x="58" y="47" text="To Date" id="Lbl_TDT"/>
				
				<mx:DateField id="DT_From" x="128" y="6" width="90" formatString="DD/MM/YYYY"  tabIndex="1"  
							  yearNavigationEnabled="true" selectableRange="{{rangeEnd: new Date()}}" change="Change('Lbl_FDT')" />
				<mx:DateField id="DT_To" x="128" y="46" width="90" formatString="DD/MM/YYYY"
							  tabIndex="2" yearNavigationEnabled="true"   change="Changes('Lbl_TDT')" />
				
				<s:Image x="831" y="20" source="assets/a1.png" toolTip="Search" click="btn_Search_clickHandler()" tabIndex="5"/>
				<s:Image x="930" y="20" click="Clear()" source="assets/dust_bin1.png" toolTip="Clear"/>
				<!--mx:Label id="Lbl_Vendor1" x="223" y="2" width="13" text="*" color="red" fontSize="16"/>
				<mx:Label id="Lbl_Vendor0" x="222" y="42" width="13" text="*" color="red" fontSize="16"/-->
				<mx:Label   x="304" y="2" width="13" text="*" color="red" fontSize="16"/>
				<s:Label x="270" y="45" height="29" text="Filter by &#xd;InvoiceNumber"/>
				<s:Label x="582" y="8" width="84" height="28" text="Filter by Guest Name"/>
				<s:TextInput id="txtGuestName" x="688" y="2" width="109" height="25" tabIndex="5"
							 change="filterg('GuestName')" prompt="GuestName"/>
				<s:Label   x="270" y="14" text="Status"/>
				<s:TextInput id="txtInvoiceNumbr" x="373" y="44" width="109" height="25" tabIndex="4"
							 change="filter('InvoiceNumber')" prompt="InvoiceNumber"/>
				<s:Label x="582" y="45" height="29" text="Filter by &#xd;Property"/>
				<s:TextInput id="txtProperty" x="688" y="44" width="109" height="25" tabIndex="6"
							 change="filterss('Property')" prompt="Property Name"/>
				<s:HGroup x="344" y="6" width="199" horizontalAlign="center" verticalAlign="middle" tabIndex="3" gap="17"  id="type">
					<s:RadioButton label="Internal" groupName="Modes" value="0"
								   id="Internal" buttonMode="true"  />
					<s:RadioButton label="External" groupName="Modes"  value="1"
								   id="External" buttonMode="true"  />
					<s:RadioButton label="TAC" groupName="Modes"  value="2"
								   id="TAC" buttonMode="true"  />
				</s:HGroup>
			</s:Group>
		</s:HGroup>
	</s:BorderContainer>
	
	<s:BorderContainer x="0" y="130" width="100%" height="354" id="bdr_Scroll" visible="true" borderVisible="false">
		<s:HGroup  width="100%" height="100%">
			<mx:DataGrid id="Grd_SearchInvoice" x="0" y="150" width="100%" height="100%"  editable="false" tabIndex="3" verticalAlign="middle">
				<mx:columns>
					<mx:DataGridColumn dataField="Select" headerText="Select" width="50" 
									   editable="false" visible="true">
						<mx:itemRenderer >
							<fx:Component>
								<mx:HBox horizontalAlign="center" verticalAlign="middle">										
									<s:RadioButton 
										change="outerDocument.FnAction(event);" selected="{data.selectRadio}">  </s:RadioButton>
								</mx:HBox>	
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn dataField="CheckOutDate"   editable="false" width="100" textAlign="center"/>	
					<mx:DataGridColumn dataField="CheckInDate"   editable="false" width="100" textAlign="center"/>	
					<mx:DataGridColumn dataField="GuestName"   editable="false" width="100" textAlign="center"/>	
					<mx:DataGridColumn dataField="InvoiceNumber"  textAlign="center" visible="true" width="80" editable="false"/> 
					<mx:DataGridColumn dataField="Property"  textAlign="center" visible="true" width="150" editable="false"/> 
					<mx:DataGridColumn dataField="ClientName"  textAlign="center" visible="true" width="120" editable="false"/>
					
					<mx:DataGridColumn dataField="Amount" headerText="Amount"  width="80" editable="false" textAlign="right" visible="true"/> 
					<mx:DataGridColumn dataField="BillType" editable="false" textAlign="center" visible="true" width="100"/>
					<mx:DataGridColumn dataField="Amounts"  headerText="NetAmount" width="80" editable="false" textAlign="right" visible="true"/>
					<mx:DataGridColumn dataField="Status"  editable="false" textAlign="center" visible="true" width="80"/> 
					<mx:DataGridColumn dataField="PropertyCat"  visible="false" /> 
					<mx:DataGridColumn dataField="ChkoutId" visible="false"/> 
					<mx:DataGridColumn dataField="CreditNote" headerText="CreditNote" width="100" editable="false"
									   visible="true">
						<mx:itemRenderer >
							<fx:Component>
								<mx:HBox horizontalAlign="center" verticalAlign="middle">										
									<mx:Image source="@Embed(source='../Assets/Comment.png')" buttonMode="true"
											  click="outerDocument.CreditNote(event)"/>
								</mx:HBox>	
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
				</mx:columns>
			</mx:DataGrid>
			 
		</s:HGroup> 
	</s:BorderContainer> 
	
	<s:BorderContainer x="0" y="116" width="100%" height="396" id="brd_CreditNote"	borderVisible="true" visible="false" depth="1500">
	<mx:Label x="173" y="56" text="CheckOut InVoiceNo"/>
	<s:TextInput x="326" y="56" width="163" height="18"  id="Txt_ChkInVoiceNo" editable="false"/>
		<s:TextInput x="266" y="56" width="163" height="18"  id="Txt_ChkOutId" editable="false" visible="false"/>
		<s:TextInput x="266" y="56" width="163" height="18"  id="Txt_PropertyId" editable="false" visible="false"/>
		<mx:Label x="523" y="56" text="CreditNote No"/>
		<s:TextInput x="646" y="56" width="163" height="18"  id="Txt_CrdInVoiceNo" editable="false"/>
	<s:BorderContainer x="69" y="79" width="1174" height="309" id="brd_Tariff"
						   borderVisible="true" visible="true" depth="1500">
		<mx:DataGrid id="Grd_Tariff" x="179" y="7" width="789" height="124"  editable="true" tabIndex="3" verticalAlign="middle"
					 doubleClickEnabled="true" textAlign="center" borderVisible="true" 
					 focusOut="Grd_Ingredients_focusOutHandler(event)">
		<mx:columns> 
		<mx:DataGridColumn dataField="Type"  editable="false" textAlign="center" visible="true" width="100"/>						
		<mx:DataGridColumn dataField="TariffAmount"  textAlign="center" visible="true" editable="true" width="150" />
		<mx:DataGridColumn dataField="NoOfDays"  textAlign="center" visible="true" editable="true"  width="150" />
		<mx:DataGridColumn dataField="Total"  width="100" textAlign="center" editable="false" visible="true"/>
		</mx:columns>
		</mx:DataGrid>
		<mx:Label x="193" y="154" text="Description"/>
		<s:TextArea id="txt_TariffDes" x="279" y="137" width="322" height="92" maxChars="2000" borderVisible="true"/>
		
		<mx:Label x="49" y="8" text="Tariff Credit Note" color="red"/> 
		<mx:Label x="633" y="136" text="LuxuryTax @"/>
		<mx:Label x="633" y="163" text="ServiceTax @"/>
		<mx:Label x="633" y="187" text="ServiceTax @" />
		<mx:Label x="712" y="136" width="39" text="" id="lbl_LT"/>
		<mx:Label x="752" y="136" width="39" text="%"/>
		<mx:Label x="713" y="162" width="39" text="7.42" id="lbl_TST"/>
		<mx:Label x="753" y="162" width="39" text="%"/>
		<mx:Label x="713" y="186" width="39" text="12.36" id="lbl_TSC"/>
		<mx:Label x="755" y="186" width="30" text="%" />
		<mx:Label x="633" y="225" text="Total Amount"/>
		<s:TextInput x="832" y="138" width="116" id="Txt_LT" editable="false"/>
		<s:TextInput x="832" y="163" width="116" id="Txt_TST" editable="false"/>
		<s:TextInput x="832" y="188" width="116" id="Txt_SC" editable="false" visible="true"/>
		<s:TextInput x="832" y="225" width="116" id="Txt_TTotal" editable="false"/>
		<s:Button x="541" y="262" label="Submit" id="btn_Tariff" click="btn_TariffSave(event)"/>
	</s:BorderContainer>
	<s:BorderContainer x="69" y="79" width="1174" height="309" id="brd_Service"
						   borderVisible="true" visible="false" depth="1500">
			<mx:DataGrid id="Grd_Service" x="179" y="7" width="800" height="124"  editable="true" tabIndex="3" verticalAlign="middle"
						 focusOut="Grd_Ingredients_focusOutHandler1(event)">
				<mx:columns> 
					<mx:DataGridColumn dataField="Item"  editable="false" textAlign="center" visible="true" width="200"/>						
					<mx:DataGridColumn dataField="ServiceAmount"  textAlign="center" visible="true" editable="true" width="150" />
					<mx:DataGridColumn dataField="Quantity"  textAlign="center" visible="true" editable="true" width="150" />
					<mx:DataGridColumn dataField="Tax"  textAlign="center" visible="true" editable="false" width="100" />
					<mx:DataGridColumn dataField="TypeService"  textAlign="center" visible="false" editable="false" width="100" />
					<mx:DataGridColumn dataField="Total"  width="100" textAlign="center" editable="false" visible="true"/>
				</mx:columns>
			</mx:DataGrid>
			<mx:Label x="180" y="165" text="Description"/>
			<s:TextArea id="txt_Service" x="261" y="138" width="277" height="104" maxChars="2000"/>
		<mx:Label x="49" y="8" text="Service Credit Note" color="red"/> 
		<mx:Label x="563" y="136" text="VAT @"/>
		<mx:Label x="563" y="161" text="ServiceTax @"/>
		<mx:Label x="563" y="185" text="ServiceTax @"/>
		<!--mx:Label x="563" y="224" text="Cess @"/-->
		<!--mx:Label x="563" y="250" text="HE Cess @"/-->
		<mx:Label x="611" y="136" width="39" text="" id="lbl_Vat"/>
		<mx:Label x="643" y="161" width="39" text="4.94" id="lbl_STFB"/>
		<mx:Label x="643" y="185" width="51" text="12.00" id="lbl_ST"/>
		<!--mx:Label x="613" y="224" width="39" text="" id="lbl_Cess"/-->
		<!--mx:Label x="633" y="250" width="39" text="" id="lbl_HECess"/-->
		<mx:Label x="688" y="161" width="151" text="On Food and Beverages"/>
		<mx:Label x="693" y="185" width="73" text="On Others"/>
		<mx:Label x="563" y="222" text="Total Amount"/>
		<s:TextInput x="852" y="135" width="116" id="Txt_Vat" editable="false"/>
		<s:TextInput x="852" y="161" width="116" id="Txt_STFB" editable="false"/>
		<s:TextInput x="852" y="188" width="116" id="Txt_ST" editable="false"/>
		<!--s:TextInput x="852" y="197" width="116" id="Txt_Cess" editable="false"/-->
		<!--s:TextInput x="852" y="224" width="116" id="Txt_HECess" editable="false"/-->
		<s:TextInput x="852" y="221" width="116" id="Txt_STotal" editable="false"/>
		<s:Button id="btn_Service" x="521" y="260" width="78" height="20" label="Submit" click="btn_ServiceSave(event)"/>
	</s:BorderContainer>
		<s:BorderContainer x="0" y="0" width="100%" height="42" borderVisible="true"  backgroundColor="#c2c2c2">
			<s:Image x="1335" y="14" source="@Embed(source='../Assets/CrossSmall.png')" 
					 buttonMode="true" toolTip="Close" click="FnC_clickHandler(event)"/>
			<mx:Label x="32" y="13" text="Credit Note" color="red"/>
		</s:BorderContainer>
		
	</s:BorderContainer>
</s:Application>
