<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:Controls="fx.com.adobe.Controls.*"
			   xmlns:WrbHelpComp="WrbHelpComp.*"
			   xmlns:WrbComp="WrbComp.*"
			   xmlns:flexlib="http://code.google.com/p/flexlib/"
			   xmlns:ns1="*"
			   width="100%" height="100%" creationComplete="PageLoad()"
			   pageTitle="TAC Invoice Report">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script source = "..\\Common\\CommonScript.as"/>
	<fx:Script source = "..\\Common\\Functions.as"/>
	<fx:Style source="..\\Common\\ApplicationCSS.css"/>
	<fx:Script>
		<![CDATA[
			import WrbComp.frmsearchwindow;
			
			import WrbHelpComp.HlpGridHdr;
			
			import com.as3xls.xls.Cell;
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			import com.as3xls.xls.Type;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.graphics.codec.PNGEncoder;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			public var Screen:String = "";
			public var ScreenName:String = "";
			public var ADate:String = "",Action:String="";
			public var Identity:String="";private var xlsFile:ExcelFile;
			private var SearchPopUp:frmsearchwindow = new frmsearchwindow();
			public static var Global_AC:ArrayCollection = new ArrayCollection();
			public static var GlobalXml:String = "";
			public var Id:int=0,ErrMsg:String="",PropertyId:int=0,PropertyName:String="",UserId:int=0;
			public var AddMode:Boolean=true,Flag:Boolean=true,PropretyType:String="";
			
			
			protected function PageLoad():void
			{
				Global_AC=funLoginInfo("<FlexServiceUrl>http://192.168.1.135/WebService/clsDataInterface.asmx?WSDL</FlexServiceUrl><FlexSwfUrl>http://192.168.1.135/wrperp/</FlexSwfUrl><gVchTypCd>PO</gVchTypCd><gVchTypDesc>Purchase Order</gVchTypDesc><gVchTypFk>387</gVchTypFk><gLocFk>1</gLocFk><gUmpFk></gUmpFk><gFyrFk>2</gFyrFk><gUsr>ADMIN</gUsr><gUsrFk>4</gUsrFk><gCur>Indian Rupees</gCur><gCurFk>1</gCurFk><gCurRt> 1.0000000</gCurRt><gPrintPath></gPrintPath><gScrId>551</gScrId><gCPRights>10101111</gCPRights>")
				GlobalXml="";
				GlobalXml += "<ROOT>";
				GlobalXml += ObjToXmlStr_Comm(Global_AC,"GlobalXml")
				GlobalXml += "</ROOT>"; 
				useWeb("TACInvoice","PAGELOAD_CUSTOM",[GlobalXml,'PAGELOAD',0,"","",0,"",0]);
			}
			private function Custom_WebSer_Result (Ds_Objects:Object):void				
			{
				if (Ds_Objects.currentTarget.description.toString() == "PAGELOAD_CUSTOM")
				{
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						hlp_Property.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;		
					}
					if (Ds_Objects.result.Tables.Table1.Rows.length > 0)
					{
						Grd_Details.dataProvider=Ds_Objects.result.Tables.Table1.Rows as ArrayCollection;
					}
				}
				if (Ds_Objects.currentTarget.description.toString() == "Search_CUSTOM")
				{
					Grd_Details.dataProvider=null;
					if (Ds_Objects.result.Tables.Table.Rows.length > 0)
					{
						Grd_Details.dataProvider=Ds_Objects.result.Tables.Table.Rows as ArrayCollection;
					}
				}
			}
			
			protected function Search():void
			{
				//SearchPopUp.Prc_name="BookingSearch"
				var SearchParam:Array =new Array();
				//SearchPopUp.HlpIndex="SEARCH"
				SearchParam[0]=GlobalXml;
				SearchParam[1]=0;
				SearchParam[2]=PropertyId; 
				SearchParam[3]=dt_From.text;
				SearchParam[4]=dt_To.text;
				SearchParam[5]=Action; 
				var Load:Array = new Array(); 
				Load[0] = GlobalXml; Load[1] = Id; Load[2]=PropertyId;
				Load[3]=dt_From.text;Load[4]=dt_To.text;Load[5]=Action;
				useWeb("TACInvoice","Search_CUSTOM",[GlobalXml,'DataLoad',0,dt_From.text,dt_To.text,PropertyId,"",0]);
				//useWeb("TACInvoice","Search_CUSTOM",Load);
			} 
			protected function dt_From_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				if(dt_From.selectedDate)
				{
					dt_To.selectableRange={rangeEnd: new Date()};
					var Dt:String = dt_From.text;										
					var Y:String = Dt.substr(6,10);
					var M:String = String(Dt.substr(3,2));
					var D:String =String(Number(Dt.substr(0,2))+1);
					var RangeStart:String = Y+'/'+M+'/'+D;
					dt_To.selectableRange = {rangeStart:new Date(RangeStart)}; 
					dt_To.selectedDate = new Date(RangeStart); 
				}
			}	
			public function Ddl_Property_changeHandler():void
			{
				if(hlp_Property.selected())
				{
					PropertyName=hlp_Property.Select_Row.Property;
					PropertyId=hlp_Property.Select_Row.ZId;
					hlp_Property.text=PropertyName;
				}
				else
				{
					hlp_Property.text="";
				} 
			}	
			
			protected function ExportExcel(event:MouseEvent):void
			{ 
				var arrExportResult:ArrayCollection = Grd_Details.dataProvider as ArrayCollection;
				xlsFile = new ExcelFile();
				var sheet:Sheet = new Sheet();
				if((arrExportResult!=null)&&(arrExportResult.length!=0))
				//if(Grd_Details.dataProvider !=null)
				{					
					sheet.resize(arrExportResult.length+1,15);
					
						sheet.setCell(0,0,'SNo');
						sheet.setCell(0,1,'Date');
						sheet.setCell(0,2,'BillId');
						sheet.setCell(0,3,'InvoiceNo');
						sheet.setCell(0,4,'Guest');
						sheet.setCell(0,5,'Client');
						sheet.setCell(0,6,'Property');
						sheet.setCell(0,7,'Location');
						sheet.setCell(0,8,'CheckInDate');
						sheet.setCell(0,9,'CheckOutDate');
						sheet.setCell(0,10,'TotalDays');
						sheet.setCell(0,11,'Perday');
						sheet.setCell(0,12,'Amount');
						sheet.setCell(0,13,'Tax');
						sheet.setCell(0,14,'Total Amount');
						
					for(var i:int=0;i<arrExportResult.length;i++)
					{
						sheet.setCell(i+1, 0,  arrExportResult[i].Id);
						sheet.setCell(i+1, 1,  arrExportResult[i].CreatedDate);
						sheet.setCell(i+1, 2,  arrExportResult[i].BillNo);
						sheet.setCell(i+1, 3,  arrExportResult[i].InvoiceNo);
						sheet.setCell(i+1, 4,  arrExportResult[i].Client);
						sheet.setCell(i+1, 5,  arrExportResult[i].Guests);
						sheet.setCell(i+1, 6,  arrExportResult[i].Property);
						sheet.setCell(i+1, 7,  arrExportResult[i].Location);
						sheet.setCell(i+1, 8,  arrExportResult[i].ChkInDate);
						sheet.setCell(i+1, 9,  arrExportResult[i].ChkOutDate); 
						sheet.setCell(i+1, 10,  arrExportResult[i].TotalDays);
						sheet.setCell(i+1, 11, arrExportResult[i].Perday);
						sheet.setCell(i+1, 12, arrExportResult[i].Amount);
						sheet.setCell(i+1, 13, arrExportResult[i].Tax);
						sheet.setCell(i+1, 14, arrExportResult[i].TotalAmount);
					}
					Grd_Details.dataProvider = arrExportResult;
					xlsFile.sheets.addItem(sheet);      
					var bytes: ByteArray = xlsFile.saveToByteArray();
					var fr:FileReference = new FileReference();
					fr.save(bytes,"TACExport.xls");
				}
				else
				{
					alignAlert(Alert.show("Invoice - Report Details is Required.","Message !",
						Alert.OK,null,null,iconWarning,Alert.OK),10,"");
				}
			}
			protected function FnClear():void
			{
				PropertyName="";
				hlp_Property.Select_Row.Property="";
				hlp_Property.Select_Row.zId=0;
				hlp_Property.text="";
				PropertyId=0;
				Grd_Details.dataProvider=null;
				dt_From.text="";
				dt_To.text="";
				PageLoad();
			}	
			public var FltPrpty:String="";
			public function filterss(Filts:String):void
			{				
				FltPrpty=Filts;				
				var tempAC:ArrayCollection=new ArrayCollection(); 
				tempAC=Grd_Details.dataProvider as ArrayCollection;
				tempAC.filterFunction = filterMyArrayCollectionss;
				tempAC.refresh();				
			}	
			private function filterMyArrayCollectionss(item:Object):Boolean 
			{
				var Itm:Boolean=true;				
				if(txtLocation.text!="")
				{
					var searchString:String = txtLocation.text.toLowerCase();
					var itemName:String = (item.Location as String).toLowerCase();
					Itm=itemName.indexOf(searchString) > -1;
				}				
				return Itm;		
			}
		]]>
	</fx:Script>
	<s:VGroup x="0" y="0" width="100%" height="100%" gap="5" horizontalAlign="center" verticalAlign="middle">
		<s:HGroup x="6" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
			<s:BorderContainer x="0" y="0" width="100%" height="100%" backgroundColor="#fbf9f9"
							   borderVisible="false">
				<s:Label x="79" y="59" text="Property"/>
				<WrbHelpComp:HelpText id="hlp_Property" x="144" y="54" width="225" height="22" pxSetColumnsWidth="275,0" 
									  onselection="{Ddl_Property_changeHandler()}"  pxTabIndex="1" depth="10"
									  pxSetPrompt="Select Property">
				</WrbHelpComp:HelpText>
				<s:Label x="79" y="104" text="Filter by &#xd;Location"/>
				<s:TextInput id="txtLocation" x="144" y="103" width="141" height="25"
							 change="filterss('Location')" prompt="Location Name"/>
				<mx:DateField x="500" y="54" width="93" height="22" id="dt_From" tabIndex="16"
							  selectableRange="{{rangeEnd: new Date()}}" formatString="DD/MM/YYYY" styleName="DisabledDateField" 
							  yearNavigationEnabled="true" change="dt_From_changeHandler(event)"/>
				<mx:DateField id="dt_To" x="689" y="54" height="22" formatString="DD/MM/YYYY"
							  selectableRange="{{rangeEnd: new Date()}}"/>
				<s:Label x="419" y="59" text="From Date"/>
				<s:Label x="625" y="59" text="End Date"/>
				<s:Button x="522" y="101" height="34" label="Search" click="Search()"/>
				<WrbComp:Button_BB id="btn_Excel" x="706" y="102" width="138" click="ExportExcel(event)"
								   Lable_val="Export To Excel">
				</WrbComp:Button_BB>
				<mx:DataGrid x="0" y="170"  verticalAlign="middle" editable="true" visible="true"
							 width="100%" height="100%" tabIndex="4" id="Grd_Details" horizontalScrollPolicy="on">
					<mx:columns>
						<mx:DataGridColumn dataField="Id" headerText="S.No" width="50" editable="false"/>
						<mx:DataGridColumn dataField="CreatedDate" headerText="Date" width="75" editable="false"/>
						<mx:DataGridColumn dataField="BillNo" headerText="Bill Id" width="75" editable="false"/>
						<mx:DataGridColumn dataField="InvoiceNo" headerText="Invoice No" width="80" editable="false"/>
						<mx:DataGridColumn dataField="Client" headerText="Client" width="200" editable="false"/>
						<mx:DataGridColumn dataField="Guests" headerText="Guest" width="200" editable="false"/>
						<mx:DataGridColumn dataField="Property" headerText="Property" width="200" editable="false"/>
						<mx:DataGridColumn dataField="Location" headerText="Location" width="100" editable="false"/>
						<mx:DataGridColumn dataField="ChkInDate" headerText="Check In Date" width="90" editable="false"/>
						<mx:DataGridColumn dataField="ChkOutDate" headerText="Check Out Date" width="90" editable="false"/>
						<mx:DataGridColumn dataField="TotalDays" headerText="Total Days" width="55" editable="false"/>
						<mx:DataGridColumn dataField="Perday" headerText="Perday Amount" width="75" editable="false" textAlign="right"/>
						<mx:DataGridColumn dataField="Amount" headerText="Amount" width="75" editable="false" textAlign="right"/>
						<mx:DataGridColumn dataField="Tax" headerText="Tax" width="55" editable="false" textAlign="right"/>
						<mx:DataGridColumn dataField="TotalAmount" headerText="TotalAmount" width="70" editable="false" textAlign="right"/>
						
					</mx:columns>
				</mx:DataGrid>
				<s:Button x="405" y="101" height="34" label="Clear" click="FnClear()"/>
				<s:Label x="69" y="16" text="TAC Invoice Report" color="red" visible="false"/>
				
			</s:BorderContainer>
		</s:HGroup>
	</s:VGroup>
</s:Application>
